import { r as registerInstance, h, H as Host, g as getElement } from './index-1942bff0.js';
import { I as ICON_SIZES } from './exports-6dd4526a.js';

const tabBarCss = ":host .tab-bar{box-sizing:border-box;position:relative;background-color:var(--mdx-comp-tabs-background-color-default)}:host .tab-bar__tabs{display:flex;flex-direction:row;width:100%;overflow-x:hidden;border-bottom-style:solid;background-color:var(--mdx-comp-tabs-background-color-default);border-bottom-width:var(--mdx-comp-tabs-border-width-bottom-default);border-top-width:var(--mdx-comp-tabs-border-width-top-default);border-left-width:var(--mdx-comp-tabs-border-width-left-default);border-right-width:var(--mdx-comp-tabs-border-width-right-default);border-color:var(--mdx-comp-tabs-border-color-default)}:host .tab-bar__chevron{z-index:20;position:absolute;height:100%;cursor:pointer;visibility:hidden;color:var(--mdx-comp-tabs-scroll-element-icon-color-default)}:host .tab-bar__chevron:hover{color:var(--mdx-comp-tabs-scroll-element-icon-color-hover)}:host .tab-bar__chevron__left{left:0;padding-left:var(--mdx-comp-tabs-padding-scroll-element-left-left-desktop);padding-right:var(--mdx-comp-tabs-padding-scroll-element-left-right-desktop);background-image:linear-gradient(to left, rgba(255, 255, 255, 0) 0%, var(--mdx-comp-tabs-background-color-default) var(--mdx-comp-tabs-sizing-scroll-element-gradient-desktop), var(--mdx-comp-tabs-background-color-default) 100%)}@media only screen and (max-width: 768px){:host .tab-bar__chevron__left{padding-left:var(--mdx-comp-tabs-padding-scroll-element-left-left-mobile);padding-right:var(--mdx-comp-tabs-padding-scroll-element-left-right-mobile);background-image:linear-gradient(to left, rgba(255, 255, 255, 0) 0%, var(--mdx-comp-tabs-background-color-default) var(--mdx-comp-tabs-sizing-scroll-element-gradient-mobile), var(--mdx-comp-tabs-background-color-default) 100%)}}:host .tab-bar__chevron__right{right:0;top:0;padding-left:var(--mdx-comp-tabs-padding-scroll-element-right-left-desktop);padding-right:var(--mdx-comp-tabs-padding-scroll-element-right-right-desktop);background-image:linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgb(255, 255, 255) var(--mdx-comp-tabs-sizing-scroll-element-gradient-desktop), rgb(255, 255, 255) 100%)}@media only screen and (max-width: 768px){:host .tab-bar__chevron__right{padding-left:var(--mdx-comp-tabs-padding-scroll-element-left-left-mobile);padding-right:var(--mdx-comp-tabs-padding-scroll-element-left-right-mobile);background-image:linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgb(255, 255, 255) var(--mdx-comp-tabs-sizing-scroll-element-gradient-mobile), rgb(255, 255, 255) 100%)}}:host([fill-width]) ::slotted(*){flex-grow:1;overflow-x:hidden;width:100%}:host([fill-width]) .tab-bar__tabs{justify-content:space-evenly}";
const MdxTabBarStyle0 = tabBarCss;

const SCROLL_AMOUNT = 200;
const TabBar = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.toggleChevronVisibility = () => {
            var _a, _b, _c;
            const ul = this.tabs;
            const chevronLeft = (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.tab-bar__chevron__left');
            const chevronRight = (_b = this.host.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector('.tab-bar__chevron__right');
            const currentScroll = Math.ceil((((_c = ul === null || ul === void 0 ? void 0 : ul.getBoundingClientRect()) === null || _c === void 0 ? void 0 : _c.width) || 0) + ((ul === null || ul === void 0 ? void 0 : ul.scrollLeft) || 0));
            if (!ul || !chevronLeft || !chevronRight) {
                return;
            }
            if ((ul === null || ul === void 0 ? void 0 : ul.scrollLeft) > 0) {
                chevronLeft.style.visibility = 'visible';
            }
            else {
                chevronLeft.style.visibility = 'hidden';
            }
            if (currentScroll < ul.scrollWidth) {
                chevronRight.style.visibility = 'visible';
            }
            else {
                chevronRight.style.visibility = 'hidden';
            }
        };
        this.onClickChevronRight = () => {
            const ul = this.tabs;
            ul === null || ul === void 0 ? void 0 : ul.scroll({
                left: ul.scrollLeft + SCROLL_AMOUNT,
                behavior: 'smooth',
            });
            setTimeout(() => this.toggleChevronVisibility(), 300);
        };
        this.onClickChevronLeft = () => {
            const ul = this.tabs;
            ul === null || ul === void 0 ? void 0 : ul.scroll({
                left: ul.scrollLeft - SCROLL_AMOUNT,
                behavior: 'smooth',
            });
            setTimeout(() => this.toggleChevronVisibility(), 300);
        };
        this.fillWidth = undefined;
        this.preSelectedTab = undefined;
    }
    get tabs() {
        var _a;
        return (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.tab-bar__tabs');
    }
    componentDidRender() {
        this.toggleChevronVisibility();
    }
    componentDidLoad() {
        const preSelectedTab = Array.from(this.host.querySelectorAll('mdx-tab-element')).find((tab) => tab.tab === this.preSelectedTab);
        if (preSelectedTab && !preSelectedTab.disabled) {
            preSelectedTab.active = true;
        }
    }
    render() {
        return (h(Host, { key: 'a2dd046fcc86f22a92a090f2808d0daf35ab4d1b' }, h("div", { key: '84de0659fac3e9f55b2567d1996a73cfc22d99be', class: "tab-bar" }, h("mdx-icon-chevron-left", { key: '78def047a6651b044d38ef9df50022fb44835539', onClick: this.onClickChevronLeft, class: "tab-bar__chevron tab-bar__chevron__left", size: ICON_SIZES.XS }), h("div", { key: '97689a04a8161fe88c8936277799b99154e4e2e5', class: "tab-bar__tabs" }, h("slot", { key: '945a8692677b8908cbb4b610ae97e4e0e43df691' })), h("mdx-icon-chevron-right", { key: '3fa5f9eb4473e78b84d1435ef9d786eb34c3f4fb', onClick: this.onClickChevronRight, class: "tab-bar__chevron tab-bar__chevron__right", size: ICON_SIZES.XS }))));
    }
    get host() { return getElement(this); }
};
TabBar.style = MdxTabBarStyle0;

export { TabBar as mdx_tab_bar };

//# sourceMappingURL=mdx-tab-bar.entry.js.map