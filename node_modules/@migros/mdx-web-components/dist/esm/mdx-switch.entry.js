import { r as registerInstance, c as createEvent, h } from './index-1942bff0.js';

const SWITCH_SIZES = {
    SM: 'sm',
    MD: 'md',
    LG: 'lg',
};

const switchCss = ":host .switch{box-sizing:border-box;position:relative;display:flex;align-items:center;cursor:pointer;background-color:var(--mdx-comp-switch-unselected-background-switch-base-default);border:var(--mdx-comp-switch-unselected-border-switch-base-default);transition:var(--mdx-comp-switch-transition-color-state-change)}:host .switch:focus-visible{border-radius:var(--mdx-comp-keyboard-focus-border-radius-default);outline-color:var(--mdx-comp-keyboard-focus-color-default);outline-style:solid;outline-width:var(--mdx-comp-keyboard-focus-border-width-default);outline-offset:2px;transition:none}:host .switch:hover{border:var(--mdx-comp-switch-unselected-border-switch-base-hover)}:host .switch__nob{position:absolute;border:var(--mdx-comp-switch-unselected-border-nob-default);box-shadow:var(--mdx-comp-switch-unselected-shadow-nob-default);background-color:var(--mdx-comp-switch-unselected-background-nob-default);transition-property:left;transition-duration:var(--mdx-comp-switch-transition-nob-movement-duration);transition-delay:var(--mdx-comp-switch-transition-nob-movement-delay);transition-timing-function:var(--mdx-comp-switch-transition-nob-movement-timing-function)}:host .switch__nob:hover{box-shadow:var(--mdx-comp-switch-unselected-shadow-nob-hover);background-color:var(--mdx-comp-switch-unselected-background-nob-hover);border:var(--mdx-comp-switch-unselected-border-nob-hover)}:host([size=sm]) .switch{width:var(--mdx-comp-switch-small-sizing-switch-base-width);height:var(--mdx-comp-switch-small-sizing-switch-base-height);padding:var(--mdx-comp-switch-small-padding-switch-base-default);border-radius:var(--mdx-comp-switch-small-border-radius-switch-base-default);border-width:var(--mdx-comp-switch-small-border-width-switch-base-default)}:host([size=sm]) .switch__nob{height:var(--mdx-comp-switch-small-sizing-nob-height);width:var(--mdx-comp-switch-small-sizing-nob-width);border-radius:var(--mdx-comp-switch-small-border-radius-nob-default);border-width:var(--mdx-comp-switch-small-border-width-nob-default);left:var(--mdx-comp-switch-small-padding-switch-base-default)}:host([size=md]) .switch{width:var(--mdx-comp-switch-medium-sizing-switch-base-width);height:var(--mdx-comp-switch-medium-sizing-switch-base-height);padding:var(--mdx-comp-switch-medium-padding-switch-base-default);border-radius:var(--mdx-comp-switch-medium-border-radius-switch-base-default);border-width:var(--mdx-comp-switch-medium-border-width-switch-base-default)}:host([size=md]) .switch__nob{height:var(--mdx-comp-switch-medium-sizing-nob-height);width:var(--mdx-comp-switch-medium-sizing-nob-width);border-radius:var(--mdx-comp-switch-medium-border-radius-nob-default);border-width:var(--mdx-comp-switch-medium-border-width-nob-default);left:var(--mdx-comp-switch-medium-padding-switch-base-default)}:host([size=lg]) .switch{width:var(--mdx-comp-switch-large-sizing-switch-base-width);height:var(--mdx-comp-switch-large-sizing-switch-base-height);padding:var(--mdx-comp-switch-large-padding-switch-base-default);border-radius:var(--mdx-comp-switch-large-border-radius-switch-base-default);border-width:var(--mdx-comp-switch-large-border-width-switch-base-default)}:host([size=lg]) .switch__nob{height:var(--mdx-comp-switch-large-sizing-nob-height);width:var(--mdx-comp-switch-large-sizing-nob-width);border-radius:var(--mdx-comp-switch-large-border-radius-nob-default);border-width:var(--mdx-comp-switch-large-border-width-nob-default);left:var(--mdx-comp-switch-large-padding-switch-base-default)}:host .switch--selected{background-color:var(--mdx-comp-switch-selected-background-switch-base-default)}:host .switch--selected:hover{border:var(--mdx-comp-switch-selected-border-switch-base-hover)}:host .switch--selected__nob{box-shadow:var(--mdx-comp-switch-selected-shadow-nob-default);border:var(--mdx-comp-switch-unselected-border-nob-default)}:host .switch--selected__nob:hover{box-shadow:var(--mdx-comp-switch-selected-shadow-nob-hover);background-color:var(--mdx-comp-switch-selected-background-nob-hover);border:var(--mdx-comp-switch-selected-border-nob-hover)}:host([disabled]) .switch{background-color:var(--mdx-comp-switch-unselected-background-switch-base-disabled);border:var(--mdx-comp-switch-unselected-border-switch-base-disabled)}:host([disabled]) .switch__nob{box-shadow:var(--mdx-comp-switch-unselected-shadow-nob-disabled);background-color:var(--mdx-comp-switch-unselected-background-nob-disabled);border:var(--mdx-comp-switch-unselected-border-nob-disabled)}:host([disabled]) .switch--selected{background-color:var(--mdx-comp-switch-selected-background-switch-base-disabled);border:var(--mdx-comp-switch-selected-border-switch-base-disabled)}:host([disabled]) .switch--selected__nob{box-shadow:var(--mdx-comp-switch-selected-shadow-nob-disabled);background-color:var(--mdx-comp-switch-selected-background-nob-disabled);border:var(--mdx-comp-switch-selected-border-nob-disable)}:host([size=md]) .switch--selected .switch__nob{left:calc(100% - var(--mdx-comp-switch-medium-sizing-nob-width) - var(--mdx-comp-switch-medium-padding-switch-base-default))}:host([size=sm]) .switch--selected .switch__nob{left:calc(100% - var(--mdx-comp-switch-small-sizing-nob-width) - var(--mdx-comp-switch-small-padding-switch-base-default))}:host([size=lg]) .switch--selected .switch__nob{left:calc(100% - var(--mdx-comp-switch-large-sizing-nob-width) - var(--mdx-comp-switch-large-padding-switch-base-default))}";
const MdxSwitchStyle0 = switchCss;

const Switch = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.toggle = createEvent(this, "toggle", 7);
        this.size = SWITCH_SIZES.MD;
        this.disabled = false;
        this.selected = false;
        this.ariaLabel = undefined;
    }
    render() {
        return (h("button", { key: '6846b3292f5ce2ad4a57b1f6d5603c7c01f1b48e', class: `switch${this.selected ? ' switch--selected' : ''}`, onClick: () => {
                this.selected = !this.selected;
                this.toggle.emit({ selected: this.selected });
            }, "aria-pressed": this.selected, disabled: this.disabled, "aria-label": this.ariaLabel }, h("span", { key: 'b31ff553563e1203f2b01cf0a46604739079d3d6', class: "switch__nob" })));
    }
};
Switch.style = MdxSwitchStyle0;

export { Switch as mdx_switch };

//# sourceMappingURL=mdx-switch.entry.js.map