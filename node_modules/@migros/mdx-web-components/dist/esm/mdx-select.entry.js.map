{"file":"mdx-select.entry.js","mappings":";;AAAA,MAAM,SAAS,GAAG,0iCAA0iC,CAAC;AAC7jC,wBAAe,SAAS;;ACCxB,MAAM,0BAA0B,GAAG,CAAC,OAA0C,KAC5E,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC;MAOrD,MAAM;;;;;wBAWN,KAAK;wBAGL,KAAK;;;;;oBAeT,KAAK;uBAGF,KAAK;6BAGC,KAAK;;IAGrB,WAAW;QACT,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;KAC5B;IAGD,aAAa;QACX,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;IAGD,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IAGD,aAAa;QACX,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;KAC7C;IAGD,aAAa;QACX,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KACxB;IAGD,cAAc;QACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC3C;IAEO,MAAM,CAAC,IAAY;QACzB,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;YAC9B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,OAAO,IAAI,CAAC;KACb;IAED,IAAY,KAAK;QACf,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC,CAAC;KAClE;IAEO,QAAQ,CAAC,IAAuC;QACtD,OAAO,0BAA0B,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;KAC1F;IAED,mBAAmB;QACjB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACtD,IAAI,YAAY,EAAE;YAChB,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC9B;KACF;IAED,MAAM;;QACJ,MAAM,SAAS,GAAG,MAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,0CAAE,KAAK,CAAC;QAE1D,QACE,EAAC,IAAI,qDACH,WAAW,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACnB,IAED,0EACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,WAAW,EAAE,OAAO,SAAS,KAAK,QAAQ,EAC1C,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,IAAI,EAAE,SAAS,IAAI,IAAI,CAAC,IAAI,IAE5B,4DAAK,KAAK,EAAC,6BAA6B,IACtC,8DACG,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,KACpE,YAAM,KAAK,EAAC,cAAc,IAAE,IAAI,CAAC,IAAI,CAAQ,CAC9C,EACA,IAAI,CAAC,KAAK,IAAI,sBAAgB,IAAI,EAAE,IAAI,CAAC,KAAK,GAAI,CAC/C,EACN,4DAAK,KAAK,EAAC,gBAAgB,mBAAe,MAAM,mBAAgB,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,OAAO,IAC1F,8DAAa,CACT,CACF,CACY,CACf,EACP;KACH;;;;;;;;;;","names":[],"sources":["src/components/select/select.scss?tag=mdx-select&encapsulation=shadow","src/components/select/select.tsx"],"sourcesContent":[":host .select {\n  &__flyout {\n    position: absolute;\n    width: 100%;\n    max-height: 0;\n    overflow: hidden;\n    transition: var(--mdx-comp-flyout-transition-expand-collapse);\n  }\n\n  &__information-wrapper {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    font: var(--mdx-comp-select-font-supporting);\n    position: relative;\n  }\n\n  &__hint {\n    color: var(--mdx-comp-select-hint-counter-color-default);\n  }\n\n  &.focused {\n    border-radius: var(--mdx-comp-keyboard-focus-border-radius-default);\n    color: var(--mdx-comp-select-label-color-focus);\n    outline-color: var(--mdx-comp-keyboard-focus-color-default);\n    outline-style: solid;\n    outline-width: var(--mdx-comp-keyboard-focus-border-width-default);\n    outline-offset: 2px;\n  }\n\n  &:focus-within &__information-wrapper &__hint,\n  &:focus-within &__information-wrapper &__error-message {\n    color: var(--mdx-comp-select-hint-counter-color-focus);\n  }\n}\n\n:host([open]) .select {\n  &__flyout {\n    max-height: 100vh;\n    box-shadow: var(--mdx-comp-flyout-box-shadow-default);\n    transition: var(--mdx-comp-flyout-transition-expand-collapse);\n  }\n}\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\n\nconst isHTMLMdxFlyoutItemElement = (element: string | HTMLMdxFlyoutItemElement): element is HTMLMdxFlyoutItemElement =>\n  typeof element === 'object' && typeof element.item === 'string';\n\n@Component({\n  tag: 'mdx-select',\n  styleUrl: 'select.scss',\n  shadow: true,\n})\nexport class Select {\n  @Element()\n  host: HTMLMdxSelectElement;\n\n  @Event()\n  selectChange: EventEmitter<HTMLMdxFlyoutItemElement['item']>;\n\n  @Prop({ reflect: true })\n  selectedItem: HTMLMdxFlyoutItemElement['item'];\n\n  @Prop()\n  disabled = false;\n\n  @Prop()\n  required = false;\n\n  @Prop()\n  label!: string;\n\n  @Prop()\n  text!: string;\n\n  @Prop()\n  hint?: string;\n\n  @Prop()\n  error?: string;\n\n  @Prop({ reflect: true })\n  open = false;\n\n  @State()\n  focused = false;\n\n  @State()\n  keyboardEvent = false;\n\n  @Listen('click', { capture: true, target: 'window' })\n  handleClick() {\n    this.keyboardEvent = false;\n  }\n\n  @Listen('keydown', { capture: true, target: 'window' })\n  handleKeyDown() {\n    this.keyboardEvent = true;\n  }\n\n  @Listen('selectButtonBlur', { capture: true })\n  onButtonBlur() {\n    this.focused = false;\n  }\n\n  @Listen('selectButtonFocus', { capture: true })\n  onButtonFocus() {\n    this.keyboardEvent && (this.focused = true);\n  }\n\n  @Listen('selectButtonClick', { capture: true })\n  onButtonClick() {\n    this.open = !this.open;\n  }\n\n  @Watch('selectedItem')\n  onSelectChange() {\n    this.selectChange.emit(this.selectedItem);\n  }\n\n  private select(item: string) {\n    if (this.selectedItem === item) {\n      return false;\n    }\n    this.selectedItem = item;\n\n    return true;\n  }\n\n  private get items() {\n    return Array.from(this.host.querySelectorAll('mdx-flyout-item'));\n  }\n\n  private getItems(item: string | HTMLMdxFlyoutItemElement): HTMLMdxFlyoutItemElement | undefined {\n    return isHTMLMdxFlyoutItemElement(item) ? item : this.items.find((t) => t.item === item);\n  }\n\n  componentWillUpdate() {\n    const selectedItem = this.getItems(this.selectedItem);\n    if (selectedItem) {\n      selectedItem.selected = true;\n    }\n  }\n\n  render() {\n    const itemLabel = this.getItems(this.selectedItem)?.label;\n\n    return (\n      <Host\n        onItemClick={({ detail: { item } }) => {\n          this.select(item);\n        }}\n      >\n        <mdx-select-button\n          disabled={this.disabled}\n          required={this.required}\n          label={this.label}\n          placeholder={typeof itemLabel !== 'string'}\n          open={this.open}\n          text={itemLabel || this.text}\n        >\n          <div class=\"select__information-wrapper\">\n            <div>\n              {this.hint && (typeof this.error === 'undefined' || this.error === '') && (\n                <span class=\"select__hint\">{this.hint}</span>\n              )}\n              {this.error && <mdx-error-hint text={this.error} />}\n            </div>\n            <div class=\"select__flyout\" aria-haspopup=\"true\" aria-expanded={this.open ? 'true' : 'false'}>\n              <slot></slot>\n            </div>\n          </div>\n        </mdx-select-button>\n      </Host>\n    );\n  }\n}\n"],"version":3}