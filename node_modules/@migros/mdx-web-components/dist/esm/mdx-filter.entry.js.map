{"file":"mdx-filter.entry.js","mappings":";;;;;;AAAA,MAAM,SAAS,GAAG,8iCAA8iC,CAAC;AACjkC,wBAAe,SAAS;;MCUX,MAAM;;;;;oBAEV,KAAK;8BAGe,KAAK;;;;;;;;;6BA2BoC,EAAE;wBAG3D,QAAQ;0BAGN,KAAK;;;IAelB,oBAAoB;QAClB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ;;YAC1D,QAAQ,CAAC,OAAO,GAAG,CAAA,MAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,0CAAE,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC,MAAK,SAAS,CAAC;SACnH,CAAC,CAAC;KACJ;IAGD,kBAAkB,CAAC,KAAiB;QAClC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC,EAAE;YAC1D,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;SACnB;KACF;IAGD,wBAAwB;QACtB,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KACxB;IAGD,qBAAqB,CAAC,EAAE,MAAM,EAAmE;;QAC/F;YACE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACnB,IAAI,CAAC,aAAa,mCACb,IAAI,CAAC,aAAa,KACrB,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,0CAAE,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,GAClG,CAAC;aACH;iBAAM,IAAI,MAAM,CAAC,OAAO,IAAI,EAAC,MAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,0CAAE,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAA,EAAE;gBAC5G,IAAI,CAAC,aAAa,mCACb,IAAI,CAAC,aAAa,KACrB,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,mCAAI,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,GAC9G,CAAC;aACH;SACF;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC7C;IAGD,kBAAkB;QAChB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ;YAC1D,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC7C;IAGD,wBAAwB;QACtB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACnB;IAEO,iBAAiB,CAAC,KAAY;QACpC,MAAM,UAAU,GAAI,KAAK,CAAC,aAAkC,CAAC,KAAK,CAAC;QACnE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ;YAC1D,IAAI,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,EAAE;gBACnE,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;aAClC;iBAAM;gBACL,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aACjC;SACF,CAAC,CAAC;KACJ;IAEO,uBAAuB,CAAC,QAAiB;;QAC/C,OAAO,QAAQ,KAAK,SAAS;cACzB,MAAA,MAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,0CAAE,MAAM,mCAAI,CAAC;cACzC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KACnF;IAED,iBAAiB;QACf,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,MAAM;QACJ,OAAO,CAAC,IAAI,CAAC,cAAc,IACzB,EAAC,IAAI,QACH,yBACE,KAAK,EAAE,IAAI,CAAC,iBAAiB,6BACJ,IAAI,CAAC,0BAA0B,EACxD,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;iBAC/C,IAAI,EAAE;iBACN,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,EAC5B,IAAI,EAAE,IAAI,CAAC,IAAI,GACf,EACF,yBAAmB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAC,QAAQ,gBAAa,IAAI,CAAC,WAAW,IAC5E,gCAA0B,oBAAoB,EAAE,IAAI,CAAC,oBAAoB,IACvE,UAAI,IAAI,EAAC,QAAQ,IAAE,IAAI,CAAC,WAAW,CAAM,EACxC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAC9C,iBAAW,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAE,WAAW,CAAC,EAAE,EAAE,OAAO,EAAE,cAAc,CAAC,SAAS,IAC7E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAC/B,IACV,IAAI,CACiB,EAC3B,kCACE,gBACE,IAAI,EAAC,UAAU,EACf,EAAE,EAAE,OAAO,CAAC,MAAM,EAClB,IAAI,EAAE,WAAW,CAAC,MAAM,EACxB,OAAO,EAAE,aAAa,CAAC,UAAU,EACjC,OAAO,EAAE;gBACP,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ;;oBAC1D,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;oBACxB,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;wBAC/B,OAAO;qBACR;oBACD,IAAI,EAAC,MAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,0CAAE,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC,CAAA,EAAE;wBACrF,IAAI,CAAC,aAAa,mCACb,IAAI,CAAC,aAAa,KACrB,CAAC,IAAI,CAAC,QAAQ,GAAG;gCACf,IAAI,MAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,mCAAI,EAAE,CAAC;gCAC5C,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,MAAA,QAAQ,CAAC,KAAK,mCAAI,EAAE,EAAE;6BACvD,GACF,CAAC;qBACH;iBACF,CAAC,CAAC;gBACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC7C,IAEA,IAAI,CAAC,iBAAiB,CACd,EACX,WAAK,KAAK,EAAC,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,IAAI,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,4BAA4B,IACxG,cAAQ,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,IAAI,EAAC,cAAc,GAAG,CAC9C,EACN,gBACE,IAAI,EAAC,UAAU,EACf,EAAE,EAAE,OAAO,CAAC,MAAM,EAClB,IAAI,EAAE,WAAW,CAAC,MAAM,EACxB,OAAO,EAAE,aAAa,CAAC,UAAU,EACjC,OAAO,EAAE,MAAM,IAAI,CAAC,kBAAkB,EAAE,IAEvC,IAAI,CAAC,aAAa,CACV,EACX,cACE,IAAI,EAAC,aAAa,EAClB,KAAK,EAAC,oBAAoB,EAC1B,OAAO,EAAE,OAAO,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,gBACvC,IAAI,CAAC,mBAAmB,IAEpC,uBAAiB,IAAI,EAAC,aAAa,EAAC,IAAI,EAAE,UAAU,CAAC,EAAE,GAAI,CACpD,EACR,IAAI,CAAC,UAAU,IACd,iBACE,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,EAAE,EACR,WAAW,EAAC,WAAW,EACvB,OAAO,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EACjD,KAAK,EAAE,IAAI,CAAC,WAAW,GACvB,IACA,IAAI,EACR,YAAM,IAAI,EAAC,OAAO,GAAG,CACE,EACzB,oCACE,sCAEE,IAAI,EAAC,QAAQ,EACb,IAAI,EAAE,WAAW,CAAC,MAAM,EACxB,OAAO,EAAE;gBACP,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC3C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACnB,IAEA,IAAI,CAAC,gBAAgB,CACX,CACY,CACT,CACf,IACL,IAAI,CAAC;KACV;;;;;;;;;;","names":[],"sources":["src/components/filter/filter.scss?tag=mdx-filter&encapsulation=shadow","src/components/filter/filter.tsx"],"sourcesContent":[":host {\n  position: relative;\n  display: block;\n  width: var(--mdx-comp-filter-flyout-sizing-width);\n\n  .filter-search-icon {\n    all: unset;\n    color: var(--mdx-comp-filter-flyout-elements-header-icon-color-default);\n    cursor: pointer;\n\n    &:focus-visible {\n      border-radius: var(--mdx-comp-keyboard-focus-border-radius-default);\n      outline-color: var(--mdx-comp-keyboard-focus-color-default);\n      outline-style: solid;\n      outline-width: var(--mdx-comp-keyboard-focus-border-width-default);\n      outline-offset: 2px;\n    }\n\n    :hover {\n      color: var(--mdx-comp-filter-flyout-elements-header-icon-color-hover);\n    }\n  }\n\n  mdx-filter-flyout {\n    position: absolute;\n    width: var(--mdx-comp-filter-flyout-sizing-width);\n    max-height: 0;\n    overflow: hidden;\n    transition: var(--mdx-comp-flyout-transition-expand-collapse);\n  }\n}\n\n:host([open]) mdx-filter-flyout {\n  max-height: 100vh;\n  box-shadow: var(--mdx-comp-flyout-box-shadow-default);\n  transition: var(--mdx-comp-flyout-transition-expand-collapse);\n}\n\n:host([open]) .filter-search-icon {\n  color: var(--mdx-comp-filter-flyout-elements-header-icon-color-hover);\n}\n\n:host([is-filter-hidden]) {\n  display: none;\n}\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { BADGE_SIZES, BADGE_VARIANTS } from '../badge/exports';\nimport { BUTTON_TYPE } from '../button/exports';\nimport { ICON_SIZES } from '../icons/exports';\nimport { LINK_AS, LINK_VARIANTS } from '../link/exports';\n\n@Component({\n  tag: 'mdx-filter',\n  styleUrl: 'filter.scss',\n  shadow: true,\n})\nexport class Filter {\n  @Prop({ reflect: true })\n  open = false;\n\n  @Prop({ reflect: true })\n  isFilterHidden?: boolean = false;\n\n  @Prop()\n  closeButtonAriaLabel!: string;\n\n  @Prop()\n  buttonSelectLabel: string;\n\n  @Prop()\n  clearButtonSelectAriaLabel!: string;\n\n  @Prop()\n  searchIconAriaLabel!: string;\n\n  @Prop()\n  headerTitle: string;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  selectAllLinkText: string;\n\n  @Prop()\n  resetLinkText: string;\n\n  @Prop()\n  selectedItems: Record<string, { label: string; value: string }[]> = {};\n\n  @Prop()\n  filterId = 'filter';\n\n  @State()\n  searchOpen = false;\n\n  @State()\n  searchValue: string;\n\n  @Element()\n  host: HTMLMdxFilterElement;\n\n  @Event()\n  filterChanged: EventEmitter<typeof this.selectedItems>;\n\n  @Event()\n  filterSubmit: EventEmitter<typeof this.selectedItems>;\n\n  @Watch('selectedItems')\n  selectedItemsChanged() {\n    this.host.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = this.selectedItems[this.filterId]?.find((item) => item.value === checkbox.value) !== undefined;\n    });\n  }\n\n  @Listen('click', { target: 'window' })\n  handleOutsideClick(event: MouseEvent) {\n    if (this.open && !this.host.contains(event.target as Node)) {\n      this.open = false;\n    }\n  }\n\n  @Listen('selectButtonClick')\n  selectButtonClickHandler() {\n    this.open = !this.open;\n  }\n\n  @Listen('toggleCheckbox')\n  toggleCheckboxHandler({ detail }: CustomEvent<{ checked: boolean; value: string; label: string }>) {\n    {\n      if (!detail.checked) {\n        this.selectedItems = {\n          ...this.selectedItems,\n          [this.filterId]: this.selectedItems[this.filterId]?.filter((item) => item.value !== detail.value),\n        };\n      } else if (detail.checked && !this.selectedItems[this.filterId]?.find((item) => item.value === detail.value)) {\n        this.selectedItems = {\n          ...this.selectedItems,\n          [this.filterId]: [...(this.selectedItems[this.filterId] ?? []), { label: detail.label, value: detail.value }],\n        };\n      }\n    }\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  @Listen('selectClear')\n  selectClearHandler() {\n    this.selectedItems = { [this.filterId]: [] };\n    this.host.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = false;\n    });\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  @Listen('filterFlyoutClose')\n  filterFlyoutCloseHandler() {\n    this.open = false;\n  }\n\n  private handleSearchInput(event: Event) {\n    const inputValue = (event.currentTarget as HTMLInputElement).value;\n    this.host.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      if (checkbox.label.toLowerCase().includes(inputValue.toLowerCase())) {\n        checkbox.style.display = 'block';\n      } else {\n        checkbox.style.display = 'none';\n      }\n    });\n  }\n\n  private getSelectedFiltersCount(filterId?: string) {\n    return filterId !== undefined\n      ? this.selectedItems[filterId]?.length ?? 0\n      : Object.values(this.selectedItems).reduce((acc, curr) => acc + curr.length, 0);\n  }\n\n  componentWillLoad() {\n    this.selectedItemsChanged();\n  }\n\n  render() {\n    return !this.isFilterHidden ? (\n      <Host>\n        <mdx-filter-select\n          label={this.buttonSelectLabel}\n          clear-button-aria-label={this.clearButtonSelectAriaLabel}\n          selectedOptions={Object.values(this.selectedItems)\n            .flat()\n            .map((item) => item.label)}\n          open={this.open}\n        />\n        <mdx-filter-flyout open={this.open} role=\"dialog\" aria-label={this.headerTitle}>\n          <mdx-filter-flyout-header closeButtonAriaLabel={this.closeButtonAriaLabel}>\n            <h2 slot=\"header\">{this.headerTitle}</h2>\n            {this.getSelectedFiltersCount(this.filterId) > 0 ? (\n              <mdx-badge slot=\"header\" size={BADGE_SIZES.MD} variant={BADGE_VARIANTS.SECONDARY}>\n                {this.selectedItems[this.filterId].length}\n              </mdx-badge>\n            ) : null}\n          </mdx-filter-flyout-header>\n          <mdx-filter-flyout-list>\n            <mdx-link\n              slot=\"controls\"\n              as={LINK_AS.BUTTON}\n              type={BUTTON_TYPE.BUTTON}\n              variant={LINK_VARIANTS.STANDALONE}\n              onClick={() => {\n                this.host.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n                  checkbox.checked = true;\n                  if (this.filterId === undefined) {\n                    return;\n                  }\n                  if (!this.selectedItems[this.filterId]?.find((item) => item.value === checkbox.value)) {\n                    this.selectedItems = {\n                      ...this.selectedItems,\n                      [this.filterId]: [\n                        ...(this.selectedItems[this.filterId] ?? []),\n                        { label: checkbox.label, value: checkbox.value ?? '' },\n                      ],\n                    };\n                  }\n                });\n                this.filterChanged.emit(this.selectedItems);\n              }}\n            >\n              {this.selectAllLinkText}\n            </mdx-link>\n            <svg width=\"2\" height=\"2\" slot=\"controls\" viewBox=\"0 0 2 2\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"currentColor\" />\n            </svg>\n            <mdx-link\n              slot=\"controls\"\n              as={LINK_AS.BUTTON}\n              type={BUTTON_TYPE.BUTTON}\n              variant={LINK_VARIANTS.STANDALONE}\n              onClick={() => this.selectClearHandler()}\n            >\n              {this.resetLinkText}\n            </mdx-link>\n            <button\n              slot=\"search-icon\"\n              class=\"filter-search-icon\"\n              onClick={() => (this.searchOpen = !this.searchOpen)}\n              aria-label={this.searchIconAriaLabel}\n            >\n              <mdx-icon-search slot=\"search-icon\" size={ICON_SIZES.XS} />\n            </button>\n            {this.searchOpen ? (\n              <mdx-input\n                slot=\"search\"\n                label=\"\"\n                placeholder=\"Suchen...\"\n                onInput={(event) => this.handleSearchInput(event)}\n                value={this.searchValue}\n              />\n            ) : null}\n            <slot slot=\"items\" />\n          </mdx-filter-flyout-list>\n          <mdx-filter-flyout-footer>\n            <mdx-button\n              full-width\n              slot=\"button\"\n              type={BUTTON_TYPE.SUBMIT}\n              onClick={() => {\n                this.filterSubmit.emit(this.selectedItems);\n                this.open = false;\n              }}\n            >\n              {this.submitButtonText}\n            </mdx-button>\n          </mdx-filter-flyout-footer>\n        </mdx-filter-flyout>\n      </Host>\n    ) : null;\n  }\n}\n"],"version":3}