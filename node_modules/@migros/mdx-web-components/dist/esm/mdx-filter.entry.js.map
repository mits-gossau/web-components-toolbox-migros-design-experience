{"file":"mdx-filter.entry.js","mappings":"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","names":[],"sources":["src/components/filter/filter.scss?tag=mdx-filter&encapsulation=shadow","src/components/filter/filter.tsx"],"sourcesContent":[":host {\n  width: var(--mdx-comp-filter-flyout-sizing-width);\n  display: block;\n  position: relative;\n\n  mdx-filter-flyout {\n    position: absolute;\n    width: var(--mdx-comp-filter-flyout-sizing-width);\n    max-height: 0;\n    overflow: hidden;\n    transition: var(--mdx-comp-flyout-transition-expand-collapse);\n  }\n}\n\n:host([open]) mdx-filter-flyout {\n  max-height: 100vh;\n  box-shadow: var(--mdx-comp-flyout-box-shadow-default);\n  transition: var(--mdx-comp-flyout-transition-expand-collapse);\n}\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\nimport { BADGE_SIZES, BADGE_VARIANTS } from '../badge/exports';\nimport { LINK_VARIANTS } from '../link/exports';\n\n@Component({\n  tag: 'mdx-filter',\n  styleUrl: 'filter.scss',\n  shadow: true,\n})\nexport class Filter {\n  @Prop({ reflect: true })\n  open = false;\n\n  @Prop()\n  closeButtonAriaLabel: string;\n\n  @Prop()\n  buttonSelectLabel: string;\n\n  @Prop()\n  buttonSelectAriaLabel: string;\n\n  @Prop()\n  clearButtonSelectAriaLabel: string;\n\n  @Prop()\n  headerTitle: string;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  selectAllLinkText: string;\n\n  @Prop()\n  resetLinkText: string;\n\n  @State()\n  selectedItems: { label: string; value?: string }[] = [];\n\n  @Element()\n  hostElement: HTMLMdxFilterElement;\n\n  @Event()\n  filterChanged: EventEmitter<typeof this.selectedItems>;\n\n  @Event()\n  filterSubmit: EventEmitter<typeof this.selectedItems>;\n\n  @Listen('click', { target: 'window' })\n  handleOutsideClick(event: MouseEvent) {\n    if (this.open && !this.hostElement.contains(event.target as Node)) {\n      this.open = false;\n    }\n  }\n\n  @Listen('selectButtonClick')\n  selectButtonClickHandler() {\n    this.open = !this.open;\n  }\n\n  @Listen('toggleCheckbox')\n  toggleCheckboxHandler(event: CustomEvent<{ checked: boolean; value?: string; label: string }>) {\n    if (!event.detail.checked) {\n      this.selectedItems = this.selectedItems.filter((item) => item.value !== event.detail.value);\n    } else if (event.detail.checked && !this.selectedItems.find((item) => item.value === event.detail.value)) {\n      this.selectedItems = [...this.selectedItems, { label: event.detail.label, value: event.detail.value }];\n    }\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  @Listen('selectClear')\n  selectClearHandler() {\n    this.selectedItems = [];\n    this.hostElement.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = false;\n    });\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  @Listen('filterFlyoutClose')\n  filterFlyoutCloseHandler() {\n    this.open = false;\n  }\n\n  render() {\n    return (\n      <Host>\n        <mdx-filter-select\n          label={this.buttonSelectLabel}\n          button-aria-label={this.buttonSelectAriaLabel}\n          clear-button-aria-label={this.clearButtonSelectAriaLabel}\n          selectedOptions={this.selectedItems.map((item) => item.label)}\n          open={this.open}\n        ></mdx-filter-select>\n        <mdx-filter-flyout open={this.open} role=\"dialog\" aria-label={this.headerTitle}>\n          <mdx-filter-flyout-header closeButtonAriaLabel={this.closeButtonAriaLabel}>\n            <h2 slot=\"header\">{this.headerTitle}</h2>\n            {this.selectedItems.length > 0 ? (\n              <mdx-badge slot=\"header\" size={BADGE_SIZES.MD} variant={BADGE_VARIANTS.SECONDARY}>\n                {this.selectedItems.length}\n              </mdx-badge>\n            ) : null}\n          </mdx-filter-flyout-header>\n          <mdx-filter-flyout-list>\n            <mdx-link\n              slot=\"controls\"\n              variant={LINK_VARIANTS.STANDALONE}\n              onClick={() => {\n                this.hostElement.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n                  checkbox.checked = true;\n                  if (!this.selectedItems.find((item) => item.value === checkbox.value)) {\n                    this.selectedItems = [...this.selectedItems, { label: checkbox.label, value: checkbox.value }];\n                  }\n                });\n                this.filterChanged.emit(this.selectedItems);\n              }}\n            >\n              {this.selectAllLinkText}\n            </mdx-link>\n            <svg\n              class=\"filter-category__dot-spacer\"\n              width=\"2\"\n              height=\"2\"\n              slot=\"controls\"\n              viewBox=\"0 0 2 2\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"currentColor\" />\n            </svg>\n            <mdx-link slot=\"controls\" variant={LINK_VARIANTS.STANDALONE} onClick={() => this.selectClearHandler()}>\n              {this.resetLinkText}\n            </mdx-link>\n            <slot slot=\"items\" />\n          </mdx-filter-flyout-list>\n          <mdx-filter-flyout-footer>\n            <mdx-button\n              full-width\n              slot=\"button\"\n              onClick={() => {\n                this.filterSubmit.emit(this.selectedItems);\n                this.open = false;\n              }}\n            >\n              {this.submitButtonText}\n            </mdx-button>\n          </mdx-filter-flyout-footer>\n        </mdx-filter-flyout>\n      </Host>\n    );\n  }\n}\n"],"version":3}