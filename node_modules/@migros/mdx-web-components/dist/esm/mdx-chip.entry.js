import { r as registerInstance, c as createEvent, h } from './index-1942bff0.js';
import { I as ICON_SIZES } from './exports-6dd4526a.js';

const chipCss = ":host .chip{display:inline-flex;justify-content:center;align-items:center;border-style:solid;box-sizing:border-box;transition:color linear 0.2s;transition:background-color linear 0.2s;cursor:pointer;padding:var(--mdx-comp-chips-unselected-padding-vertical) var(--mdx-comp-chips-unselected-padding-horizontal);gap:var(--mdx-comp-chips-unselected-sizing-gap);height:var(--mdx-comp-chips-unselected-sizing-height);width:var(--mdx-comp-chips-unselected-sizing-width);border-radius:var(--mdx-comp-chips-unselected-border-radius-default);border-width:var(--mdx-comp-chips-unselected-border-default);border-color:var(--mdx-comp-chips-unselected-border-color-default);font:var(--mdx-comp-chips-unselected-font-default);background-color:var(--mdx-comp-chips-unselected-background-color-default);color:var(--mdx-comp-chips-unselected-color-default)}:host .chip ::slotted([slot=icon]){color:var(--mdx-comp-chips-unselected-icon-leading-color-default)}:host .chip__icon{color:var(--mdx-comp-chips-unselected-icon-close-color-default)}:host .chip:focus-visible{border-radius:var(--mdx-comp-keyboard-focus-border-radius-default);outline-color:var(--mdx-comp-keyboard-focus-color-default);outline-style:solid;outline-width:var(--mdx-comp-keyboard-focus-border-width-default);outline-offset:2px}:host .chip:hover{border-color:var(--mdx-comp-chips-unselected-border-color-hover);font:var(--mdx-comp-chips-unselected-font-hover);background-color:var(--mdx-comp-chips-unselected-background-color-hover);color:var(--mdx-comp-chips-unselected-color-hover)}:host .chip:hover ::slotted([slot=icon]){color:var(--mdx-comp-chips-unselected-icon-leading-color-hover)}:host .chip:hover__icon{color:var(--mdx-comp-chips-unselected-icon-close-color-hover)}:host([disabled]) .chip{cursor:not-allowed;border-color:var(--mdx-comp-chips-unselected-border-color-disabled);font:var(--mdx-comp-chips-unselected-font-disabled);background-color:var(--mdx-comp-chips-unselected-background-color-disabled);color:var(--mdx-comp-chips-unselected-color-disabled)}:host([disabled]) .chip ::slotted([slot=icon]){color:var(--mdx-comp-chips-unselected-icon-leading-color-disabled)}:host([disabled]) .chip__icon{color:var(--mdx-comp-chips-unselected-icon-close-color-disabled)}:host([selected]) .chip{padding:var(--mdx-comp-chips-selected-padding-vertical) var(--mdx-comp-chips-selected-padding-horizontal);gap:var(--mdx-comp-chips-selected-sizing-gap);height:var(--mdx-comp-chips-selected-sizing-height);width:var(--mdx-comp-chips-selected-sizing-width);border-radius:var(--mdx-comp-chips-selected-border-radius-default);border-width:var(--mdx-comp-chips-selected-border-default);border-color:var(--mdx-comp-chips-selected-border-color-default);font:var(--mdx-comp-chips-selected-font-default);background-color:var(--mdx-comp-chips-selected-background-color-default);color:var(--mdx-comp-chips-selected-color-default)}:host([selected]) .chip ::slotted([slot=icon]){color:var(--mdx-comp-chips-selected-icon-leading-color-default)}:host([selected]) .chip__icon{color:var(--mdx-comp-chips-selected-icon-close-color-default)}:host([selected]) .chip:hover{border-color:var(--mdx-comp-chips-selected-border-color-hover);font:var(--mdx-comp-chips-selected-font-hover);background-color:var(--mdx-comp-chips-selected-background-color-hover);color:var(--mdx-comp-chips-selected-color-hover)}:host([selected]) .chip:hover ::slotted([slot=icon]){color:var(--mdx-comp-chips-selected-icon-leading-color-hover)}:host([selected]) .chip:hover__icon{color:var(--mdx-comp-chips-selected-icon-close-color-hover)}:host([selected][disabled]) .chip{border-color:var(--mdx-comp-chips-selected-border-color-disabled);font:var(--mdx-comp-chips-selected-font-disabled);background-color:var(--mdx-comp-chips-selected-background-color-disabled);color:var(--mdx-comp-chips-selected-color-disabled)}:host([selected][disabled]) .chip ::slotted([slot=icon]){color:var(--mdx-comp-chips-selected-icon-leading-color-disabled)}:host([selected][disabled]) .chip__icon{color:var(--mdx-comp-chips-selected-icon-close-color-disabled)}";
const MdxChipStyle0 = chipCss;

const Chip = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.toggle = createEvent(this, "toggle", 7);
        this.selected = false;
        this.disabled = false;
        this.chipId = undefined;
        this.singleSelect = undefined;
    }
    selectedChanged(selected) {
        this.toggle.emit({ selected, chipId: this.chipId });
    }
    render() {
        return (h("button", { key: '263ee9b097d8f53e681077730f2895e5faf1fd10', class: "chip", disabled: this.disabled, onClick: (e) => {
                e.preventDefault();
                if (!this.disabled) {
                    this.selected = !this.selected;
                }
            } }, h("slot", { key: '0ed9b8e660deb9d107a408178bb1b4b8e2ab19f5', name: "icon" }), h("slot", { key: 'f95b03a84d79be75ddd0c832a385175e1eb3bb29', name: "label" }), this.selected && !this.singleSelect ? h("mdx-icon-x", { size: ICON_SIZES.XS }) : null));
    }
    static get watchers() { return {
        "selected": ["selectedChanged"]
    }; }
};
Chip.style = MdxChipStyle0;

export { Chip as mdx_chip };

//# sourceMappingURL=mdx-chip.entry.js.map