{"file":"mdx-filter-select-button.mdx-select-button.entry.js","mappings":";;;AAAA,MAAM,qBAAqB,GAAG,muFAAmuF;;MCQpvF,kBAAkB;;;;;;;;;;;;EAyB7B,MAAM;IACJ,QACE,WAAK,KAAK,EAAC,sBAAsB,IAC/B,cACE,KAAK,EAAC,8BAA8B,EACpC,IAAI,EAAC,QAAQ,gBACD,IAAI,CAAC,eAAe,EAChC,OAAO,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,EAC5C,MAAM,EAAE,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAC1C,OAAO,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAE5C,WAAK,KAAK,EAAC,oCAAoC,IAAE,IAAI,CAAC,KAAK,CAAO,EAClE,WAAK,KAAK,EAAC,oCAAoC,IAAE,IAAI,CAAC,KAAK,CAAO,CAC3D,EACT,cACE,KAAK,EAAC,oCAAoC,EAC1C,IAAI,EAAC,QAAQ,gBACD,IAAI,CAAC,oBAAoB,EACrC,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAEtC,kBAAY,KAAK,EAAC,kCAAkC,EAAC,IAAI,EAAE,UAAU,CAAC,EAAE,GAAI,CACrE,CACL,EACN;GACH;;;;ACzDH,MAAM,eAAe,GAAG,ioIAAioI;;MCQ5oI,YAAY;;;;;;oBAKZ,KAAK;oBAGL,KAAK;uBAGF,KAAK;;;gBASZ,KAAK;mBAGF,KAAK;;EAWf,MAAM;IACJ,QACE,aACE,KAAK,EAAE,iBAAiB,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,IACxF,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAC7B,EAAE,IAED,IAAI,CAAC,KAAK,KACT,WAAK,KAAK,EAAC,sBAAsB,IAC9B,IAAI,CAAC,KAAK,OAAG,IAAI,CAAC,QAAQ,IAAI,YAAM,KAAK,EAAC,UAAU,QAAS,CAC1D,CACP,EACD,WAAK,KAAK,EAAC,wBAAwB,IACjC,cACE,OAAO,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,EAC5C,MAAM,EAAE,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAC1C,KAAK,EAAC,uBAAuB,EAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAC9B,SAAS,mBACR,IAAI,CAAC,IAAI,IAExB,WAAK,KAAK,EAAE,IAAI,CAAC,WAAW,GAAG,qBAAqB,GAAG,EAAE,IAAG,IAAI,CAAC,IAAI,CAAO,EAE5E,6BAAuB,KAAK,EAAC,qBAAqB,EAAC,IAAI,EAAE,UAAU,CAAC,EAAE,GAAI,CACnE,CACL,EACN,eAAa,CACP,EACR;GACH;;;;;;;","names":[],"sources":["src/components/filter/filter-select/filter-select-button.scss?tag=mdx-filter-select-button&encapsulation=shadow","src/components/filter/filter-select/filter-select-button.tsx","src/components/select/select-button.scss?tag=mdx-select-button&encapsulation=shadow","src/components/select/select-button.tsx"],"sourcesContent":[":host .filter-select-button {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  color: var(--mdx-comp-filter-filter-select-text-color-default);\n  font: var(--mdx-sys-font-fix-label1);\n  height: var(--mdx-comp-filter-filter-select-sizing-desktop-height);\n  width: var(--mdx-comp-filter-filter-select-sizing-desktop-width);\n  gap: var(--mdx-comp-filter-filter-select-spacing-gap);\n  margin-bottom: var(--mdx-comp-select-gap-content-below);\n\n  &__button {\n    color: var(--mdx-comp-filter-filter-select-text-color-default);\n    font: var(--mdx-sys-font-fix-label1);\n    text-align: start;\n    border: 0;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: row;\n    gap: var(--mdx-comp-filter-filter-select-contentbox-spacing-gap);\n    padding-top: var(--mdx-comp-filter-filter-select-contentbox-spacing-vertical-padding);\n    padding-right: var(--mdx-comp-filter-filter-select-contentbox-spacing-horizontal-padding);\n    padding-bottom: var(--mdx-comp-filter-filter-select-contentbox-spacing-vertical-padding);\n    padding-left: var(--mdx-comp-filter-filter-select-contentbox-spacing-horizontal-padding);\n    background-color: var(--mdx-comp-filter-filter-select-background-color-default);\n    border-color: var(--mdx-comp-filter-filter-select-border-color-default);\n    border-top-left-radius: var(--mdx-comp-filter-filter-select-content-box-border-default);\n    border-bottom-left-radius: var(--mdx-comp-filter-filter-select-content-box-border-default);\n    border-width: var(--mdx-comp-filter-filter-select-content-box-border-width-default);\n\n    &:hover {\n      background-color: var(--mdx-comp-filter-filter-select-background-color-hover);\n      border-color: var(--mdx-comp-filter-filter-select-border-color-hover);\n    }\n  }\n\n  &__button-label {\n    flex-grow: 1;\n  }\n\n  &__clear-button {\n    border: 0;\n    color: var(--mdx-comp-filter-filter-select-text-color-default);\n    padding-top: var(--mdx-comp-filter-filter-select-close-button-box-padding-default);\n    padding-right: var(--mdx-comp-filter-filter-select-close-button-box-padding-default);\n    padding-bottom: var(--mdx-comp-filter-filter-select-close-button-box-padding-default);\n    padding-left: var(--mdx-comp-filter-filter-select-close-button-box-padding-default);\n    background-color: var(--mdx-comp-filter-filter-select-background-color-default);\n    border-color: var(--mdx-comp-filter-filter-select-border-color-default);\n    border-top-right-radius: var(--mdx-comp-filter-filter-select-close-button-box-default-border-default);\n    border-bottom-right-radius: var(--mdx-comp-filter-filter-select-close-button-box-default-border-default);\n    border-width: var(--mdx-comp-filter-filter-select-close-button-box-border-width-border-width-default);\n\n    &:hover {\n      background-color: var(--mdx-comp-filter-filter-select-background-color-hover);\n      border-color: var(--mdx-comp-filter-filter-select-border-color-hover);\n    }\n  }\n}\n","import { Component, Event, EventEmitter, Prop, h } from '@stencil/core';\nimport { ICON_SIZES } from '../../icons/exports';\n\n@Component({\n  tag: 'mdx-filter-select-button',\n  styleUrl: 'filter-select-button.scss',\n  shadow: true,\n})\nexport class FilterSelectButton {\n  @Prop()\n  badge: string;\n\n  @Prop({ reflect: true })\n  label!: string;\n\n  @Prop()\n  clearButtonAriaLabel?: string;\n\n  @Prop()\n  buttonAriaLabel?: string;\n\n  @Event()\n  selectButtonClick: EventEmitter;\n\n  @Event()\n  selectButtonBlur: EventEmitter;\n\n  @Event()\n  selectButtonFocus: EventEmitter;\n\n  @Event()\n  selectClear: EventEmitter;\n\n  render() {\n    return (\n      <div class=\"filter-select-button\">\n        <button\n          class=\"filter-select-button__button\"\n          type=\"button\"\n          aria-label={this.buttonAriaLabel}\n          onClick={() => this.selectButtonClick.emit()}\n          onBlur={() => this.selectButtonBlur.emit()}\n          onFocus={() => this.selectButtonFocus.emit()}\n        >\n          <div class=\"filter-select-button__button-label\">{this.label}</div>\n          <div class=\"filter-select-button__button-badge\">{this.badge}</div>\n        </button>\n        <button\n          class=\"filter-select-button__clear-button\"\n          type=\"button\"\n          aria-label={this.clearButtonAriaLabel}\n          onClick={() => this.selectClear.emit()}\n        >\n          <mdx-icon-x class=\"filter-select-button__clear-icon\" size={ICON_SIZES.SM} />\n        </button>\n      </div>\n    );\n  }\n}\n",":host .select-button {\n  box-sizing: border-box;\n  color: var(--mdx-comp-select-label-color-default);\n  display: flex;\n  flex-direction: column;\n  font: var(--mdx-comp-select-font-label);\n  letter-spacing: var(--mdx-comp-select-font-label-letter-spacing);\n  line-height: var(--mdx-comp-select-font-label-line-height);\n  margin-bottom: var(--mdx-comp-select-gap-content-below);\n  text-decoration: var(--mdx-comp-select-font-label-text-decoration);\n  text-transform: var(--mdx-comp-select-font-label-text-case);\n\n  &__wrapper {\n    background-color: var(--mdx-comp-select-background-color-default);\n    border-color: var(--mdx-comp-select-border-color-default);\n    border-radius: var(--mdx-sys-border-radius-default);\n    border-width: var(--mdx-comp-select-border-width-default);\n    border-style: solid;\n    box-shadow: var(--mdx-comp-select-box-shadow-default);\n    font: var(--mdx-comp-select-font-default);\n    letter-spacing: var(--mdx-comp-select-font-default-letter-spacing);\n    line-height: var(--mdx-comp-select-font-default-line-height);\n    min-height: var(--mdx-comp-select-font-default-line-height);\n    margin: var(--mdx-comp-select-gap-label-select) 0;\n    padding: var(--mdx-comp-select-padding-vertical-default) var(--mdx-comp-select-padding-horizontal-default);\n    text-decoration: var(--mdx-comp-select-font-default-text-decoration);\n    text-transform: var(--mdx-comp-select-font-default-text-case);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    &:focus-within {\n      background-color: var(--mdx-comp-select-background-color-focus);\n      border-color: var(--mdx-comp-select-border-color-focus);\n      box-shadow: var(--mdx-comp-select-box-shadow-focus);\n      color: var(--mdx-comp-select-input-color-focus);\n    }\n  }\n\n  &__button {\n    font: var(--mdx-comp-select-font-default);\n    letter-spacing: var(--mdx-comp-select-font-default-letter-spacing);\n    line-height: var(--mdx-comp-select-font-default-line-height);\n    text-decoration: var(--mdx-comp-select-font-default-text-decoration);\n    text-transform: var(--mdx-comp-select-font-default-text-case);\n    background-color: var(--mdx-comp-select-background-color-default);\n    border: none;\n    flex-grow: 1;\n    padding: 0;\n    outline: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n\n  &__icon {\n    color: var(--mdx-comp-select-icon-color-default);\n    transition: var(--mdx-comp-select-transition-icon-chevron);\n  }\n\n  &__text {\n    color: var(--mdx-comp-select-placeholder-color-default);\n  }\n\n  &.focused {\n    border-radius: var(--mdx-comp-keyboard-focus-border-radius-default);\n    color: var(--mdx-comp-select-label-color-focus);\n    outline-color: var(--mdx-comp-keyboard-focus-color-default);\n    outline-style: solid;\n    outline-width: var(--mdx-comp-keyboard-focus-border-width-default);\n    outline-offset: 2px;\n  }\n\n  & &__wrapper:focus-within &__button {\n    color: var(--mdx-comp-select-placeholder-color-focus);\n  }\n\n  & &__wrapper:focus-within &__button svg {\n    color: var(--mdx-comp-select-icon-color-focus);\n  }\n}\n\n:host([disabled]) .select-button {\n  &__label {\n    color: var(--mdx-comp-select-label-color-disabled);\n  }\n\n  &__button {\n    color: var(--mdx-comp-select-placeholder-color-disabled);\n    background-color: var(--mdx-comp-select-background-color-disabled);\n  }\n\n  &__text {\n    color: var(--mdx-comp-select-placeholder-color-disabled);\n  }\n\n  &__wrapper {\n    background-color: var(--mdx-comp-select-background-color-disabled);\n    border-color: var(--mdx-comp-select-border-color-disabled);\n  }\n\n  &__icon {\n    color: var(--mdx-comp-select-icon-color-disabled);\n  }\n}\n\n:host([required]) .asterisk {\n  margin-left: var(--mdx-comp-select-gap-label-asterisk);\n}\n\n:host([error]) .select-button {\n  &__label {\n    color: var(--mdx-comp-select-label-color-error);\n  }\n\n  &__wrapper {\n    background-color: var(--mdx-comp-select-background-color-error);\n    border-color: var(--mdx-comp-select-border-color-error);\n    box-shadow: var(--mdx-comp-select-box-shadow-error);\n    color: var(--mdx-comp-select-input-color-error);\n  }\n\n  &__button {\n    color: var(--mdx-comp-select-placeholder-color-error);\n  }\n\n  &__text {\n    color: var(--mdx-comp-select-placeholder-color-error);\n  }\n}\n\n:host([open]) .select-button {\n  &__icon {\n    transform: rotate(180deg);\n  }\n}\n","import { Component, Element, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { ICON_SIZES } from '../icons/exports';\n\n@Component({\n  tag: 'mdx-select-button',\n  styleUrl: 'select-button.scss',\n  shadow: true,\n})\nexport class SelectButton {\n  @Element()\n  host: HTMLMdxSelectButtonElement;\n\n  @Prop()\n  disabled = false;\n\n  @Prop()\n  required = false;\n\n  @Prop()\n  placeholder = false;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  text!: string;\n\n  @Prop({ reflect: true })\n  open = false;\n\n  @State()\n  focused = false;\n\n  @Event()\n  selectButtonFocus: EventEmitter<void>;\n\n  @Event()\n  selectButtonBlur: EventEmitter<void>;\n\n  @Event()\n  selectButtonClick: EventEmitter<void>;\n\n  render() {\n    return (\n      <label\n        class={`select-button ${this.required ? 'required' : ''} ${this.disabled ? 'disabled' : ''} ${\n          this.focused ? 'focused' : ''\n        }`}\n      >\n        {this.label && (\n          <div class=\"select-button__label\">\n            {this.label} {this.required && <span class=\"asterisk\">*</span>}\n          </div>\n        )}\n        <div class=\"select-button__wrapper\">\n          <button\n            onFocus={() => this.selectButtonFocus.emit()}\n            onBlur={() => this.selectButtonBlur.emit()}\n            class=\"select-button__button\"\n            disabled={this.disabled}\n            onClick={() => this.selectButtonClick.emit()}\n            aria-haspopup=\"listbox\"\n            aria-expanded={this.open}\n          >\n            <div class={this.placeholder ? 'select-button__text' : ''}>{this.text}</div>\n\n            <mdx-icon-chevron-down class=\"select-button__icon\" size={ICON_SIZES.SM} />\n          </button>\n        </div>\n        <slot></slot>\n      </label>\n    );\n  }\n}\n"],"version":3}