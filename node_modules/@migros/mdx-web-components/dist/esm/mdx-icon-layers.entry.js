import { r as registerInstance, h } from './index-1942bff0.js';
import { I as ICON_SIZES } from './exports-6dd4526a.js';

const iconsCss = ":host{box-sizing:border-box;display:flex;align-items:center;justify-content:center}:host([size=xs]) svg{height:16px;width:16px}:host([size=sm]) svg{height:24px;width:24px}:host([size=md]) svg{height:32px;width:32px}:host([size=lg]) svg{height:40px;width:40px}:host([size=xl]) svg{height:48px;width:48px}:host([size=xxl]) svg{height:56px;width:56px}";
const MdxIconLayersStyle0 = iconsCss;

const MdxIconLayers = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.size = ICON_SIZES.MD;
    }
    render() {
        switch (this.size) {
            case ICON_SIZES.XS:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 16 16", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { "clip-path": "url(#a)" }, h("path", { stroke: "currentColor", "stroke-width": "1.5", d: "M1.333 11.333 8 14.667l6.667-3.334M1.333 8 8 11.333 14.667 8M8 1.333 1.333 4.667 8 8l6.667-3.333z" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H16V16H0z" })))));
            case ICON_SIZES.SM:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2", d: "m2 17 10 5 10-5M2 12l10 5 10-5M12 2 2 7l10 5 10-5z" })));
            case ICON_SIZES.MD:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2.3", d: "M2.667 22.667 16 29.333l13.333-6.666M2.667 16 16 22.667 29.333 16M16 2.667 2.667 9.333 16 16l13.333-6.667z" })));
            case ICON_SIZES.LG:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 40 40", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2.5", d: "M3.333 28.333 20 36.667l16.667-8.334M3.333 20 20 28.333 36.667 20M20 3.333 3.333 11.667 20 20l16.667-8.333z" })));
            case ICON_SIZES.XL:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 48 48", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "3", d: "m4 34 20 10 20-10M4 24l20 10 20-10M24 4 4 14l20 10 20-10z" })));
            case ICON_SIZES.XXL:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 56 56", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "3.5", d: "M4.667 39.667 28 51.333l23.333-11.666M4.667 28 28 39.667 51.333 28M28 4.667 4.667 16.333 28 28l23.333-11.667z" })));
        }
    }
};
MdxIconLayers.style = MdxIconLayersStyle0;

export { MdxIconLayers as mdx_icon_layers };

//# sourceMappingURL=mdx-icon-layers.entry.js.map