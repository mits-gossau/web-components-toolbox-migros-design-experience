import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-7e8279cb.js';

const selectCss = ":host .select__flyout{position:absolute;width:100%;max-height:0;overflow:hidden;transition:var(--mdx-comp-flyout-transition-expand-collapse)}:host .select__information-wrapper{display:flex;flex-direction:row;justify-content:space-between;font:var(--mdx-comp-select-font-supporting);position:relative}:host .select__hint{color:var(--mdx-comp-select-hint-counter-color-default)}:host .select.focused{border-radius:var(--mdx-comp-keyboard-focus-border-radius-default);color:var(--mdx-comp-select-label-color-focus);outline-color:var(--mdx-comp-keyboard-focus-color-default);outline-style:solid;outline-width:var(--mdx-comp-keyboard-focus-border-width-default);outline-offset:2px}:host .select:focus-within :host .select__information-wrapper :host .select__hint,:host .select:focus-within :host .select__information-wrapper :host .select__error-message{color:var(--mdx-comp-select-hint-counter-color-focus)}:host([open]) .select__flyout{max-height:100vh;box-shadow:var(--mdx-comp-flyout-box-shadow-default);transition:var(--mdx-comp-flyout-transition-expand-collapse)}";
const MdxSelectStyle0 = selectCss;

const isHTMLMdxFlyoutItemElement = (element) => typeof element === 'object' && typeof element.item === 'string';
const Select = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.selectChange = createEvent(this, "selectChange", 7);
        this.selectedItem = undefined;
        this.disabled = false;
        this.required = false;
        this.label = undefined;
        this.text = undefined;
        this.hint = undefined;
        this.error = undefined;
        this.open = false;
        this.focused = false;
        this.keyboardEvent = false;
    }
    handleClick() {
        this.keyboardEvent = false;
    }
    handleKeyDown() {
        this.keyboardEvent = true;
    }
    onButtonBlur() {
        this.focused = false;
    }
    onButtonFocus() {
        this.keyboardEvent && (this.focused = true);
    }
    onButtonClick() {
        this.open = !this.open;
    }
    onSelectChange() {
        this.selectChange.emit(this.selectedItem);
    }
    select(item) {
        if (this.selectedItem === item) {
            return false;
        }
        this.selectedItem = item;
        return true;
    }
    get items() {
        return Array.from(this.host.querySelectorAll('mdx-flyout-item'));
    }
    getItems(item) {
        return isHTMLMdxFlyoutItemElement(item) ? item : this.items.find((t) => t.item === item);
    }
    componentWillUpdate() {
        const selectedItem = this.getItems(this.selectedItem);
        if (selectedItem) {
            selectedItem.selected = true;
        }
    }
    render() {
        var _a;
        const itemLabel = (_a = this.getItems(this.selectedItem)) === null || _a === void 0 ? void 0 : _a.label;
        return (h(Host, { key: 'f22d95b2896dde485c77af9b0e6cd56ba20b98af', onItemClick: ({ detail: { item } }) => {
                this.select(item);
            } }, h("mdx-select-button", { key: '23e7276fb25c3c4ad01c42f06240a92af5f4a018', disabled: this.disabled, required: this.required, label: this.label, placeholder: typeof itemLabel !== 'string', open: this.open, text: itemLabel || this.text }, h("div", { key: '5cea7eedbafcfc815658053fa4027a01ac80d90e', class: "select__information-wrapper" }, h("div", { key: '332124887c1b2420d7e83d187d578a7ad298324f' }, this.hint && (typeof this.error === 'undefined' || this.error === '') && (h("span", { class: "select__hint" }, this.hint)), this.error && h("mdx-error-hint", { text: this.error })), h("div", { key: 'dbceceb9a61f7dcfa20522f6835224e3e1fa94fd', class: "select__flyout", "aria-haspopup": "true", "aria-expanded": this.open ? 'true' : 'false' }, h("slot", { key: '334303e79f66dd20263f52dc4f16c378d132b7d4' }))))));
    }
    get host() { return getElement(this); }
    static get watchers() { return {
        "selectedItem": ["onSelectChange"]
    }; }
};
Select.style = MdxSelectStyle0;

export { Select as mdx_select };

//# sourceMappingURL=mdx-select.entry.js.map