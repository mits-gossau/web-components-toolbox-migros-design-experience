{"file":"mdx-filter-select.entry.js","mappings":";;;AAGA,MAAM,SAAS,GAAG,CAAC,CAAC;MAMP,YAAY;;;IAuCf,2BAAsB,GAAG,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;;;;;;;;;EAbzF,WAAW;IACT,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;GAC3B;EAGD,cAAc;IACZ,IAAI,CAAC,sBAAsB,EAAE,CAAC;GAC/B;EAED,kBAAkB;IAChB,IAAI,CAAC,wBAAwB,EAAE,CAAC;GACjC;EAGO,wBAAwB;;IAC9B,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;MAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC;MACjC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;MAChB,OAAO;KACR;IAED,MAAM,WAAW,GAAG,MAAA,MAAA,MAAA,IAAI,CAAC,IAAI,CAAC,UAAU,0CACpC,aAAa,CAAC,0BAA0B,CAAC,0CACzC,UAAU,0CAAE,aAAa,CAAC,qCAAqC,CAAC,CAAC;IACrE,IAAI,KAAK,GAAG,WAAW,GAAG,WAAW,CAAC,WAAW,GAAG,EAAE,GAAG,GAAG,CAAC;IAE7D,MAAM,eAAe,GAAa,EAAE,CAAC;IACrC,OAAO,KAAK,GAAG,CAAC,EAAE;MAChB,IACE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC;QAC5C,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,GAAG,KAAK,EAC7E;QACA,KAAK,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC;QAC/E,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;OACpE;WAAM;QACL,MAAM;OACP;KACF;IAED,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC;IACzH,IAAI,CAAC,KAAK;MACR,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;UAChD,GAAG,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE;UACvE,EAAE,CAAC;GACV;EAED,MAAM;IACJ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IACpC,gCACE,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,KAAK,EAAE,IAAI,CAAC,cAAc,EAC1B,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,oBAAoB,EAAE,IAAI,CAAC,oBAAoB,GAC/C,KAEF,yBAAmB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,GAAI,CACzD,CAAC;GACH;;;;;;","names":[],"sources":["src/components/filter/filter-select/filter-select.tsx"],"sourcesContent":["import { Component, Element, Listen, Prop, h } from '@stencil/core';\nimport { debounce } from '../../../utils/defer';\n\nconst CHAR_SIZE = 8;\n\n@Component({\n  tag: 'mdx-filter-select',\n  shadow: true,\n})\nexport class FilterSelect {\n  @Prop()\n  displayedLabel: string;\n\n  @Prop()\n  badge: string;\n\n  @Element()\n  host: HTMLMdxFilterSelectElement;\n\n  @Prop({ reflect: true })\n  label!: string;\n\n  @Prop()\n  selectedOptions: string[];\n\n  @Prop()\n  clearButtonAriaLabel?: string;\n\n  @Prop()\n  buttonAriaLabel?: string;\n\n  @Prop({ reflect: true })\n  open?: boolean;\n\n  @Listen('selectClear', { capture: true })\n  handleClick() {\n    this.selectedOptions = [];\n  }\n\n  @Listen('resize', { capture: true, target: 'window' })\n  onWindowResize() {\n    this.recalculateButtonLabel();\n  }\n\n  componentDidRender() {\n    this.recalculateButtonLabelFn();\n  }\n\n  private recalculateButtonLabel = debounce(this.recalculateButtonLabelFn.bind(this), 100);\n  private recalculateButtonLabelFn() {\n    if (this.selectedOptions && this.selectedOptions.length === 0) {\n      this.displayedLabel = this.label;\n      this.badge = '';\n      return;\n    }\n\n    const buttonLabel = this.host.shadowRoot\n      ?.querySelector('mdx-filter-select-button')\n      ?.shadowRoot?.querySelector('.filter-select-button__button-label');\n    let width = buttonLabel ? buttonLabel.clientWidth - 20 : 100;\n\n    const displayedLabels: string[] = [];\n    while (width > 0) {\n      if (\n        this.selectedOptions[displayedLabels.length] &&\n        (this.selectedOptions[displayedLabels.length].length + 2) * CHAR_SIZE < width\n      ) {\n        width -= (this.selectedOptions[displayedLabels.length].length + 2) * CHAR_SIZE;\n        displayedLabels.push(this.selectedOptions[displayedLabels.length]);\n      } else {\n        break;\n      }\n    }\n\n    this.displayedLabel = displayedLabels.join(', ') + (displayedLabels.length < this.selectedOptions.length ? ', ...' : '');\n    this.badge =\n      displayedLabels.length < this.selectedOptions.length\n        ? '+' + (this.selectedOptions.length - displayedLabels.length).toString()\n        : '';\n  }\n\n  render() {\n    return this.selectedOptions.length > 0 ? (\n      <mdx-filter-select-button\n        badge={this.badge}\n        label={this.displayedLabel}\n        buttonAriaLabel={this.buttonAriaLabel}\n        clearButtonAriaLabel={this.clearButtonAriaLabel}\n      />\n    ) : (\n      <mdx-select-button open={this.open} text={this.label} />\n    );\n  }\n}\n"],"version":3}