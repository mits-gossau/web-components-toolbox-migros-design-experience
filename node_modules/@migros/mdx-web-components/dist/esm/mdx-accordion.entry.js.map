{"file":"mdx-accordion.entry.js","mappings":";;AAAA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;EAC5B,qCAAe,CAAA;EACf,mCAAa,CAAA;AACf,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB;;ACA9B,MAAM,YAAY,GAAG,urIAAurI;;MCQ/rI,SAAS;;;;gBAQb,KAAK;mBAGF,kBAAkB,CAAC,KAAK;;;;EAQlC,gBAAgB;IACd,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;IAC/D,MAAM,cAAc,GAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,aAAa,CAAC,SAAS,CAAC,CAAC;IAC5D,IAAI,cAAc,EAAE;MAClB,IAAI,eAAe,EAAE;QACnB,cAAc,CAAC,KAAK,CAAC,mBAAmB,GAAG,GAAG,CAAC;QAC/C,cAAc,CAAC,KAAK,CAAC,oBAAoB,GAAG,GAAG,CAAC;OACjD;MACD,IAAI,WAAW,EAAE;QACf,cAAc,CAAC,KAAK,CAAC,sBAAsB,GAAG,GAAG,CAAC;QAClD,cAAc,CAAC,KAAK,CAAC,uBAAuB,GAAG,GAAG,CAAC;OACpD;KACF;GACF;EAED,MAAM;IACJ,QACE,eACE,KAAK,EAAE,YAAY,IAAI,CAAC,IAAI,GAAG,kBAAkB,GAAG,EAAE,EAAE,EACxD,IAAI,EAAE,IAAI,CAAC,IAAI,mBACA,IAAI,CAAC,IAAI,EACxB,QAAQ,EAAE,CAAC,KAAK;QACd,IAAI,CAAC,IAAI,GAAI,KAAK,CAAC,MAA6B,CAAC,IAAI,CAAC;QACtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;OAChE,IAED,eAAS,KAAK,EAAC,oBAAoB,IAChC,IAAI,CAAC,OAAO,EACb,6BAAuB,KAAK,EAAC,iBAAiB,GAAG,CACzC,EACV,SAAG,KAAK,EAAC,sBAAsB,IAC7B,YAAM,IAAI,EAAC,SAAS,GAAG,CACrB,CACI,EACV;GACH;;;;;;;","names":[],"sources":["src/components/accordion/export.ts","src/components/accordion/accordion.scss?tag=mdx-accordion&encapsulation=shadow","src/components/accordion/accordion.tsx"],"sourcesContent":["export enum ACCORDION_VARIANTS {\n  WHITE = 'white',\n  GREY = 'grey',\n}\n",":host .accordion {\n  box-sizing: border-box;\n  border-radius: var(--mdx-comp-accordion-border-radius-default);\n  overflow: hidden;\n  border-top-width: var(--mdx-comp-accordion-border-width-top);\n  border-bottom-width: var(--mdx-comp-accordion-border-width-bottom);\n  border-right-width: var(--mdx-comp-accordion-border-width-right);\n  border-left-width: var(--mdx-comp-accordion-border-width-left);\n\n  &__summary {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: var(--mdx-comp-accordion-padding-horizontal-default) var(--mdx-comp-accordion-padding-vertical-default);\n    font: var(--mdx-comp-accordion-closed-font-default);\n    font-weight: var(--mdx-comp-accordion-closed-font-weight-title);\n    word-break: break-all;\n\n    &:hover {\n      transition: var(--mdx-comp-accordion-transition-hover-fade-in-out);\n    }\n  }\n\n  &__paragraph {\n    margin: 0;\n    padding: 0 var(--mdx-comp-accordion-padding-horizontal-default) var(--mdx-comp-accordion-padding-vertical-default)\n      var(--mdx-comp-accordion-padding-horizontal-default);\n    word-break: break-all;\n    max-height: 0;\n  }\n\n  &__icon {\n    align-self: flex-start;\n    transition: var(--mdx-comp-accordion-transition-icon-chevron);\n  }\n}\n\n:host([variant='white']) .accordion {\n  background-color: var(--mdx-comp-accordion-closed-background-color-on-white);\n  border-color: var(--mdx-comp-accordion-closed-border-color-on-white);\n  font: var(--mdx-comp-accordion-closed-font-default);\n\n  &__icon {\n    height: var(--mdx-comp-accordion-closed-sizing-icon);\n    width: var(--mdx-comp-accordion-closed-sizing-icon);\n    color: var(--mdx-comp-accordion-closed-icon-color-default);\n  }\n\n  &__summary {\n    color: var(--mdx-comp-accordion-closed-title-color-on-white);\n\n    &:hover {\n      color: var(--mdx-comp-accordion-closed-title-color-hover);\n      background-color: var(--mdx-comp-accordion-closed-background-color-hover);\n      border-color: var(--mdx-comp-accordion-closed-border-color-hover);\n    }\n  }\n}\n\n:host([variant='white']) .accordion--open {\n  background-color: var(--mdx-comp-accordion-open-background-color-on-white);\n  color: var(--mdx-comp-accordion-open-text-color-on-white);\n  font: var(--mdx-comp-accordion-open-font-default);\n\n  &__summary {\n    color: var(--mdx-comp-accordion-open-title-color-on-white);\n\n    &:hover {\n      color: var(--mdx-comp-accordion-open-title-color-hover);\n      background-color: var(--mdx-comp-accordion-open-background-color-hover);\n    }\n  }\n\n  &__icon {\n    height: var(--mdx-comp-accordion-open-sizing-icon);\n    width: var(--mdx-comp-accordion-open-sizing-icon);\n    color: var(--mdx-comp-accordion-open-icon-color-default);\n    transform: rotate(180deg);\n  }\n}\n\n:host([variant='grey']) .accordion {\n  background-color: var(--mdx-comp-accordion-closed-background-color-on-grey);\n  border-color: var(--mdx-comp-accordion-closed-border-color-on-grey);\n  font: var(--mdx-comp-accordion-closed-font-default);\n\n  &__summary {\n    color: var(--mdx-comp-accordion-closed-title-color-on-grey);\n\n    &:hover {\n      color: var(--mdx-comp-accordion-closed-title-color-hover);\n      background-color: var(--mdx-comp-accordion-closed-background-color-hover);\n      border-color: var(--mdx-comp-accordion-closed-border-color-hover);\n    }\n  }\n\n  &__icon {\n    height: var(--mdx-comp-accordion-closed-sizing-icon);\n    width: var(--mdx-comp-accordion-closed-sizing-icon);\n    color: var(--mdx-comp-accordion-closed-icon-color-default);\n  }\n}\n\n:host([variant='grey']) .accordion--open {\n  background-color: var(--mdx-comp-accordion-open-background-color-on-grey);\n  font: var(--mdx-comp-accordion-open-font-default);\n\n  &__summary {\n    color: var(--mdx-comp-accordion-open-title-color-on-grey);\n\n    &:hover {\n      color: var(--mdx-comp-accordion-open-title-color-hover);\n      background-color: var(--mdx-comp-accordion-open-background-color-hover);\n    }\n  }\n\n  &__icon {\n    height: var(--mdx-comp-accordion-open-sizing-icon);\n    width: var(--mdx-comp-accordion-open-sizing-icon);\n    color: var(--mdx-comp-accordion-open-icon-color-default);\n    transform: rotate(180deg);\n  }\n}\n\ndetails > summary::-webkit-details-marker {\n  display: none;\n}\n\n:host .accordion--open .accordion__paragraph {\n  max-height: 100vh;\n  transition: var(--mdx-comp-accordion-transition-expand-collapse);\n}\n","import { Component, Element, Event, EventEmitter, Prop, h } from '@stencil/core';\nimport { ACCORDION_VARIANTS } from './export';\n\n@Component({\n  tag: 'mdx-accordion',\n  styleUrl: 'accordion.scss',\n  shadow: true,\n})\nexport class Accordion {\n  @Element()\n  host: HTMLMdxAccordionElement;\n\n  @Event()\n  accordionClick: EventEmitter<{ open: boolean; item?: string }>;\n\n  @Prop({ reflect: true })\n  open = false;\n\n  @Prop({ reflect: true })\n  variant = ACCORDION_VARIANTS.WHITE;\n\n  @Prop()\n  summary: string;\n\n  @Prop({ reflect: true })\n  item?: string;\n\n  componentDidLoad() {\n    const { previousSibling, nextSibling, shadowRoot } = this.host;\n    const detailsElement = shadowRoot?.querySelector('details');\n    if (detailsElement) {\n      if (previousSibling) {\n        detailsElement.style.borderTopLeftRadius = '0';\n        detailsElement.style.borderTopRightRadius = '0';\n      }\n      if (nextSibling) {\n        detailsElement.style.borderBottomLeftRadius = '0';\n        detailsElement.style.borderBottomRightRadius = '0';\n      }\n    }\n  }\n\n  render() {\n    return (\n      <details\n        class={`accordion${this.open ? ' accordion--open' : ''}`}\n        open={this.open}\n        aria-expanded={this.open}\n        onToggle={(event) => {\n          this.open = (event.target as HTMLDetailsElement).open;\n          this.accordionClick.emit({ open: this.open, item: this.item });\n        }}\n      >\n        <summary class=\"accordion__summary\">\n          {this.summary}\n          <mdx-icon-chevron-down class=\"accordion__icon\" />\n        </summary>\n        <p class=\"accordion__paragraph\">\n          <slot name=\"details\" />\n        </p>\n      </details>\n    );\n  }\n}\n"],"version":3}