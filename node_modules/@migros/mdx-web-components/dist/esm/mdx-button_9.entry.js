import { r as registerInstance, h, g as getElement, c as createEvent, H as Host } from './index-1942bff0.js';
import { i as isExternalUrl } from './isExternalUrl-bdf785fc.js';
import { B as BUTTON_VARIANTS, a as BUTTON_SIZES, b as BUTTON_TYPE, c as BUTTON_AS } from './exports-a4c2b43e.js';
import { I as ICON_SIZES } from './exports-6dd4526a.js';
import { I as INPUT_TYPES } from './export-eacd2df0.js';

const buttonCss = ":host .button{align-items:center;box-sizing:border-box;cursor:pointer;display:inline-flex;max-width:100%;text-align:center;text-decoration:none;justify-content:center;transition:var(--mdx-comp-button-transition-hover-fade-in-out)}:host .button:focus-visible{border-radius:var(--mdx-comp-keyboard-focus-border-radius-default);outline-color:var(--mdx-comp-keyboard-focus-color-default);outline-style:solid;outline-width:var(--mdx-comp-keyboard-focus-border-width-default);outline-offset:2px}:host .button__icon{display:flex;align-items:center}:host([variant=primary][size=sm]) .button{font:var(--mdx-comp-button-primary-small-font-default);color:var(--mdx-comp-button-primary-small-color-default);background-color:var(--mdx-comp-button-primary-small-background-color-default);border:var(--mdx-comp-button-primary-small-border-width-default) solid var(--mdx-comp-button-primary-small-border-color-default);border-radius:var(--mdx-comp-button-primary-small-border-radius-default);gap:var(--mdx-comp-button-primary-small-gap-icon-text-default);width:var(--mdx-comp-button-small-sizing-button-width);height:var(--mdx-comp-button-small-sizing-button-height);padding-right:var(--mdx-comp-button-primary-small-padding-horizontal-default);padding-left:var(--mdx-comp-button-primary-small-padding-horizontal-default)}:host([variant=primary][size=sm]) .button:hover{color:var(--mdx-comp-button-primary-small-color-hover);background-color:var(--mdx-comp-button-primary-small-background-color-hover);border:var(--mdx-comp-button-primary-small-border-width-hover) solid var(--mdx-comp-button-primary-small-border-color-hover);border-radius:var(--mdx-comp-button-primary-small-border-radius-hover);padding-right:var(--mdx-comp-button-primary-small-padding-horizontal-hover);padding-left:var(--mdx-comp-button-primary-small-padding-horizontal-hover)}:host([variant=primary][size=sm]) .button:disabled{color:var(--mdx-comp-button-primary-small-color-disabled);background-color:var(--mdx-comp-button-primary-small-background-color-disabled);border:var(--mdx-comp-button-primary-small-border-width-disabled) solid var(--mdx-comp-button-primary-small-border-color-disabled);border-radius:var(--mdx-comp-button-primary-small-border-radius-disabled);padding-right:var(--mdx-comp-button-primary-small-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-primary-small-padding-horizontal-disabled)}:host([variant=secondary][size=sm]) .button{font:var(--mdx-comp-button-secondary-small-font-default);color:var(--mdx-comp-button-secondary-small-color-default);background-color:var(--mdx-comp-button-secondary-small-background-color-default);border:var(--mdx-comp-button-secondary-small-border-width-default) solid var(--mdx-comp-button-secondary-small-border-color-default);border-radius:var(--mdx-comp-button-secondary-small-border-radius-default);gap:var(--mdx-comp-button-secondary-small-gap-icon-text-default);width:var(--mdx-comp-button-small-sizing-button-width);height:var(--mdx-comp-button-small-sizing-button-height);padding-right:var(--mdx-comp-button-secondary-small-padding-horizontal-default);padding-left:var(--mdx-comp-button-secondary-small-padding-horizontal-default)}:host([variant=secondary][size=sm]) .button:hover{color:var(--mdx-comp-button-secondary-small-color-hover);background-color:var(--mdx-comp-button-secondary-small-background-color-hover);border:var(--mdx-comp-button-secondary-small-border-width-hover) solid var(--mdx-comp-button-secondary-small-border-color-hover);border-radius:var(--mdx-comp-button-secondary-small-border-radius-hover);padding-right:var(--mdx-comp-button-secondary-small-padding-horizontal-hover);padding-left:var(--mdx-comp-button-secondary-small-padding-horizontal-hover)}:host([variant=secondary][size=sm]) .button:disabled{color:var(--mdx-comp-button-secondary-small-color-disabled);background-color:var(--mdx-comp-button-secondary-small-background-color-disabled);border:var(--mdx-comp-button-secondary-small-border-width-disabled) solid var(--mdx-comp-button-secondary-small-border-color-disabled);border-radius:var(--mdx-comp-button-secondary-small-border-radius-disabled);padding-right:var(--mdx-comp-button-secondary-small-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-secondary-small-padding-horizontal-disabled)}:host([variant=tertiary][size=sm]) .button{font:var(--mdx-comp-button-tertiary-small-font-default);color:var(--mdx-comp-button-tertiary-small-color-default);background-color:var(--mdx-comp-button-tertiary-small-background-color-default);border:var(--mdx-comp-button-tertiary-small-border-width-default) solid var(--mdx-comp-button-tertiary-small-border-color-default);border-radius:var(--mdx-comp-button-tertiary-small-border-radius-default);gap:var(--mdx-comp-button-tertiary-small-gap-icon-text-default);width:var(--mdx-comp-button-small-sizing-button-width);height:var(--mdx-comp-button-small-sizing-button-height);padding-right:var(--mdx-comp-button-tertiary-small-padding-horizontal-default);padding-left:var(--mdx-comp-button-tertiary-small-padding-horizontal-default)}:host([variant=tertiary][size=sm]) .button:hover{color:var(--mdx-comp-button-tertiary-small-color-hover);background-color:var(--mdx-comp-button-tertiary-small-background-color-hover);border:var(--mdx-comp-button-tertiary-small-border-width-hover) solid var(--mdx-comp-button-tertiary-small-border-color-hover);border-radius:var(--mdx-comp-button-tertiary-small-border-radius-hover);padding-right:var(--mdx-comp-button-tertiary-small-padding-horizontal-hover);padding-left:var(--mdx-comp-button-tertiary-small-padding-horizontal-hover)}:host([variant=tertiary][size=sm]) .button:disabled{color:var(--mdx-comp-button-tertiary-small-color-disabled);background-color:var(--mdx-comp-button-tertiary-small-background-color-disabled);border:var(--mdx-comp-button-tertiary-small-border-width-disabled) solid var(--mdx-comp-button-tertiary-small-border-color-disabled);border-radius:var(--mdx-comp-button-tertiary-small-border-radius-disabled);padding-right:var(--mdx-comp-button-tertiary-small-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-tertiary-small-padding-horizontal-disabled)}:host([variant=quaternary][size=sm]) .button{font:var(--mdx-comp-button-quaternary-small-font-default);color:var(--mdx-comp-button-quaternary-small-color-default);background-color:var(--mdx-comp-button-quaternary-small-background-color-default);border:var(--mdx-comp-button-quaternary-small-border-width-default) solid var(--mdx-comp-button-quaternary-small-border-color-default);border-radius:var(--mdx-comp-button-quaternary-small-border-radius-default);gap:var(--mdx-comp-button-quaternary-small-gap-icon-text-default);width:var(--mdx-comp-button-small-sizing-button-width);height:var(--mdx-comp-button-small-sizing-button-height);padding-right:var(--mdx-comp-button-quaternary-small-padding-horizontal-default);padding-left:var(--mdx-comp-button-quaternary-small-padding-horizontal-default)}:host([variant=quaternary][size=sm]) .button:hover{color:var(--mdx-comp-button-quaternary-small-color-hover);background-color:var(--mdx-comp-button-quaternary-small-background-color-hover);border:var(--mdx-comp-button-quaternary-small-border-width-hover) solid var(--mdx-comp-button-quaternary-small-border-color-hover);border-radius:var(--mdx-comp-button-quaternary-small-border-radius-hover);padding-right:var(--mdx-comp-button-quaternary-small-padding-horizontal-hover);padding-left:var(--mdx-comp-button-quaternary-small-padding-horizontal-hover)}:host([variant=quaternary][size=sm]) .button:disabled{color:var(--mdx-comp-button-quaternary-small-color-disabled);background-color:var(--mdx-comp-button-quaternary-small-background-color-disabled);border:var(--mdx-comp-button-quaternary-small-border-width-disabled) solid var(--mdx-comp-button-quaternary-small-border-color-disabled);border-radius:var(--mdx-comp-button-quaternary-small-border-radius-disabled);padding-right:var(--mdx-comp-button-quaternary-small-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-quaternary-small-padding-horizontal-disabled)}:host([variant=primary][size=md]) .button{font:var(--mdx-comp-button-primary-medium-font-default);color:var(--mdx-comp-button-primary-medium-color-default);background-color:var(--mdx-comp-button-primary-medium-background-color-default);border:var(--mdx-comp-button-primary-medium-border-width-default) solid var(--mdx-comp-button-primary-medium-border-color-default);border-radius:var(--mdx-comp-button-primary-medium-border-radius-default);gap:var(--mdx-comp-button-primary-medium-gap-icon-text-default);width:var(--mdx-comp-button-medium-sizing-button-width);height:var(--mdx-comp-button-medium-sizing-button-height);padding-right:var(--mdx-comp-button-primary-medium-padding-horizontal-default);padding-left:var(--mdx-comp-button-primary-medium-padding-horizontal-default)}:host([variant=primary][size=md]) .button:hover{color:var(--mdx-comp-button-primary-medium-color-hover);background-color:var(--mdx-comp-button-primary-medium-background-color-hover);border-color:var(--mdx-comp-button-primary-medium-border-color-hover);border:var(--mdx-comp-button-primary-medium-border-width-hover) solid var(--mdx-comp-button-primary-medium-border-color-hover);border-radius:var(--mdx-comp-button-primary-medium-border-radius-hover);padding-right:var(--mdx-comp-button-primary-medium-padding-horizontal-hover);padding-left:var(--mdx-comp-button-primary-medium-padding-horizontal-hover)}:host([variant=primary][size=md]) .button:disabled{color:var(--mdx-comp-button-primary-medium-color-disabled);background-color:var(--mdx-comp-button-primary-medium-background-color-disabled);border:var(--mdx-comp-button-primary-medium-border-width-disabled) solid var(--mdx-comp-button-primary-medium-border-color-disabled);border-radius:var(--mdx-comp-button-primary-medium-border-radius-disabled);padding-right:var(--mdx-comp-button-primary-medium-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-primary-medium-padding-horizontal-disabled)}:host([variant=secondary][size=md]) .button{font:var(--mdx-comp-button-secondary-medium-font-default);color:var(--mdx-comp-button-secondary-medium-color-default);background-color:var(--mdx-comp-button-secondary-medium-background-color-default);border:var(--mdx-comp-button-secondary-medium-border-width-default) solid var(--mdx-comp-button-secondary-medium-border-color-default);border-radius:var(--mdx-comp-button-secondary-medium-border-radius-default);gap:var(--mdx-comp-button-secondary-medium-gap-icon-text-default);width:var(--mdx-comp-button-medium-sizing-button-width);height:var(--mdx-comp-button-medium-sizing-button-height);padding-right:var(--mdx-comp-button-secondary-medium-padding-horizontal-default);padding-left:var(--mdx-comp-button-secondary-medium-padding-horizontal-default)}:host([variant=secondary][size=md]) .button:hover{color:var(--mdx-comp-button-secondary-medium-color-hover);background-color:var(--mdx-comp-button-secondary-medium-background-color-hover);border:var(--mdx-comp-button-secondary-medium-border-width-hover) solid var(--mdx-comp-button-secondary-medium-border-color-hover);border-radius:var(--mdx-comp-button-secondary-medium-border-radius-hover);padding-right:var(--mdx-comp-button-secondary-medium-padding-horizontal-hover);padding-left:var(--mdx-comp-button-secondary-medium-padding-horizontal-hover)}:host([variant=secondary][size=md]) .button:disabled{color:var(--mdx-comp-button-secondary-medium-color-disabled);background-color:var(--mdx-comp-button-secondary-medium-background-color-disabled);border:var(--mdx-comp-button-secondary-medium-border-width-disabled) solid var(--mdx-comp-button-secondary-medium-border-color-disabled);border-radius:var(--mdx-comp-button-secondary-medium-border-radius-disabled);padding-right:var(--mdx-comp-button-secondary-medium-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-secondary-medium-padding-horizontal-disabled)}:host([variant=tertiary][size=md]) .button{font:var(--mdx-comp-button-tertiary-medium-font-default);color:var(--mdx-comp-button-tertiary-medium-color-default);background-color:var(--mdx-comp-button-tertiary-medium-background-color-default);border:var(--mdx-comp-button-tertiary-medium-border-width-default) solid var(--mdx-comp-button-tertiary-medium-border-color-default);border-radius:var(--mdx-comp-button-tertiary-medium-border-radius-default);gap:var(--mdx-comp-button-tertiary-medium-gap-icon-text-default);width:var(--mdx-comp-button-medium-sizing-button-width);height:var(--mdx-comp-button-medium-sizing-button-height);padding-right:var(--mdx-comp-button-tertiary-medium-padding-horizontal-default);padding-left:var(--mdx-comp-button-tertiary-medium-padding-horizontal-default)}:host([variant=tertiary][size=md]) .button:hover{color:var(--mdx-comp-button-tertiary-medium-color-hover);background-color:var(--mdx-comp-button-tertiary-medium-background-color-hover);border:var(--mdx-comp-button-tertiary-medium-border-width-hover) solid var(--mdx-comp-button-tertiary-medium-border-color-hover);border-radius:var(--mdx-comp-button-tertiary-medium-border-radius-hover);padding-right:var(--mdx-comp-button-tertiary-medium-padding-horizontal-hover);padding-left:var(--mdx-comp-button-tertiary-medium-padding-horizontal-hover)}:host([variant=tertiary][size=md]) .button:disabled{color:var(--mdx-comp-button-tertiary-medium-color-disabled);background-color:var(--mdx-comp-button-tertiary-medium-background-color-disabled);border:var(--mdx-comp-button-tertiary-medium-border-width-disabled) solid var(--mdx-comp-button-tertiary-medium-border-color-disabled);border-radius:var(--mdx-comp-button-tertiary-medium-border-radius-disabled);padding-right:var(--mdx-comp-button-tertiary-medium-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-tertiary-medium-padding-horizontal-disabled)}:host([variant=quaternary][size=md]) .button{font:var(--mdx-comp-button-quaternary-medium-font-default);color:var(--mdx-comp-button-quaternary-medium-color-default);background-color:var(--mdx-comp-button-quaternary-medium-background-color-default);border:var(--mdx-comp-button-quaternary-medium-border-width-default) solid var(--mdx-comp-button-quaternary-medium-border-color-default);border-radius:var(--mdx-comp-button-quaternary-medium-border-radius-default);gap:var(--mdx-comp-button-quaternary-medium-gap-icon-text-default);width:var(--mdx-comp-button-medium-sizing-button-width);height:var(--mdx-comp-button-medium-sizing-button-height);padding-right:var(--mdx-comp-button-quaternary-medium-padding-horizontal-default);padding-left:var(--mdx-comp-button-quaternary-medium-padding-horizontal-default)}:host([variant=quaternary][size=md]) .button:hover{color:var(--mdx-comp-button-quaternary-medium-color-hover);background-color:var(--mdx-comp-button-quaternary-medium-background-color-hover);border:var(--mdx-comp-button-quaternary-medium-border-width-hover) solid var(--mdx-comp-button-quaternary-medium-border-color-hover);border-radius:var(--mdx-comp-button-quaternary-medium-border-radius-hover);padding-right:var(--mdx-comp-button-quaternary-medium-padding-horizontal-hover);padding-left:var(--mdx-comp-button-quaternary-medium-padding-horizontal-hover)}:host([variant=quaternary][size=md]) .button:disabled{color:var(--mdx-comp-button-quaternary-medium-color-disabled);background-color:var(--mdx-comp-button-quaternary-medium-background-color-disabled);border:var(--mdx-comp-button-quaternary-medium-border-width-disabled) solid var(--mdx-comp-button-quaternary-medium-border-color-disabled);border-radius:var(--mdx-comp-button-quaternary-medium-border-radius-disabled);padding-right:var(--mdx-comp-button-quaternary-medium-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-quaternary-medium-padding-horizontal-disabled)}:host([variant=primary][size=lg]) .button{font:var(--mdx-comp-button-primary-large-font-default);color:var(--mdx-comp-button-primary-large-color-default);background-color:var(--mdx-comp-button-primary-large-background-color-default);border:var(--mdx-comp-button-primary-large-border-width-default) solid var(--mdx-comp-button-primary-large-border-color-default);border-radius:var(--mdx-comp-button-primary-large-border-radius-default);gap:var(--mdx-comp-button-primary-large-gap-icon-text-default);width:var(--mdx-comp-button-large-sizing-button-width);height:var(--mdx-comp-button-large-sizing-button-height);padding-right:var(--mdx-comp-button-primary-large-padding-horizontal-default);padding-left:var(--mdx-comp-button-primary-large-padding-horizontal-default)}:host([variant=primary][size=lg]) .button:hover{color:var(--mdx-comp-button-primary-large-color-hover);background-color:var(--mdx-comp-button-primary-large-background-color-hover);border:var(--mdx-comp-button-primary-large-border-width-hover) solid var(--mdx-comp-button-primary-large-border-color-hover);border-radius:var(--mdx-comp-button-primary-large-border-radius-hover);padding-right:var(--mdx-comp-button-primary-large-padding-horizontal-hover);padding-left:var(--mdx-comp-button-primary-large-padding-horizontal-hover)}:host([variant=primary][size=lg]) .button:disabled{color:var(--mdx-comp-button-primary-large-color-disabled);background-color:var(--mdx-comp-button-primary-large-background-color-disabled);border:var(--mdx-comp-button-primary-large-border-width-disabled) solid var(--mdx-comp-button-primary-large-border-color-disabled);border-radius:var(--mdx-comp-button-primary-large-border-radius-disabled);padding-right:var(--mdx-comp-button-primary-large-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-primary-large-padding-horizontal-disabled)}:host([variant=secondary][size=lg]) .button{font:var(--mdx-comp-button-secondary-large-font-default);color:var(--mdx-comp-button-secondary-large-color-default);background-color:var(--mdx-comp-button-secondary-large-background-color-default);border:var(--mdx-comp-button-secondary-large-border-width-default) solid var(--mdx-comp-button-secondary-large-border-color-default);border-radius:var(--mdx-comp-button-secondary-large-border-radius-default);gap:var(--mdx-comp-button-secondary-large-gap-icon-text-default);width:var(--mdx-comp-button-large-sizing-button-width);height:var(--mdx-comp-button-large-sizing-button-height);padding-right:var(--mdx-comp-button-secondary-large-padding-horizontal-default);padding-left:var(--mdx-comp-button-secondary-large-padding-horizontal-default)}:host([variant=secondary][size=lg]) .button:hover{color:var(--mdx-comp-button-secondary-large-color-hover);background-color:var(--mdx-comp-button-secondary-large-background-color-hover);border:var(--mdx-comp-button-secondary-large-border-width-hover) solid var(--mdx-comp-button-secondary-large-border-color-hover);border-radius:var(--mdx-comp-button-secondary-large-border-radius-hover);padding-right:var(--mdx-comp-button-secondary-large-padding-horizontal-hover);padding-left:var(--mdx-comp-button-secondary-large-padding-horizontal-hover)}:host([variant=secondary][size=lg]) .button:disabled{color:var(--mdx-comp-button-secondary-large-color-disabled);background-color:var(--mdx-comp-button-secondary-large-background-color-disabled);border:var(--mdx-comp-button-secondary-large-border-width-disabled) solid var(--mdx-comp-button-secondary-large-border-color-disabled);border-radius:var(--mdx-comp-button-secondary-large-border-radius-disabled);padding-right:var(--mdx-comp-button-secondary-large-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-secondary-large-padding-horizontal-disabled)}:host([variant=tertiary][size=lg]) .button{font:var(--mdx-comp-button-tertiary-large-font-default);color:var(--mdx-comp-button-tertiary-large-color-default);background-color:var(--mdx-comp-button-tertiary-large-background-color-default);border:var(--mdx-comp-button-tertiary-large-border-width-default) solid var(--mdx-comp-button-tertiary-large-border-color-default);border-radius:var(--mdx-comp-button-tertiary-large-border-radius-default);gap:var(--mdx-comp-button-tertiary-large-gap-icon-text-default);width:var(--mdx-comp-button-large-sizing-button-width);height:var(--mdx-comp-button-large-sizing-button-height);padding-right:var(--mdx-comp-button-tertiary-large-padding-horizontal-default);padding-left:var(--mdx-comp-button-tertiary-large-padding-horizontal-default)}:host([variant=tertiary][size=lg]) .button:hover{color:var(--mdx-comp-button-tertiary-large-color-hover);background-color:var(--mdx-comp-button-tertiary-large-background-color-hover);border:var(--mdx-comp-button-tertiary-large-border-width-hover) solid var(--mdx-comp-button-tertiary-large-border-color-hover);border-radius:var(--mdx-comp-button-tertiary-large-border-radius-hover);padding-right:var(--mdx-comp-button-tertiary-large-padding-horizontal-hover);padding-left:var(--mdx-comp-button-tertiary-large-padding-horizontal-hover)}:host([variant=tertiary][size=lg]) .button:disabled{color:var(--mdx-comp-button-tertiary-large-color-disabled);background-color:var(--mdx-comp-button-tertiary-large-background-color-disabled);border:var(--mdx-comp-button-tertiary-large-border-width-disabled) solid var(--mdx-comp-button-tertiary-large-border-color-disabled);border-radius:var(--mdx-comp-button-tertiary-large-border-radius-disabled);padding-right:var(--mdx-comp-button-tertiary-large-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-tertiary-large-padding-horizontal-disabled)}:host([variant=quaternary][size=lg]) .button{font:var(--mdx-comp-button-quaternary-large-font-default);color:var(--mdx-comp-button-quaternary-large-color-default);background-color:var(--mdx-comp-button-quaternary-large-background-color-default);border:var(--mdx-comp-button-quaternary-large-border-width-default) solid var(--mdx-comp-button-quaternary-large-border-color-default);border-radius:var(--mdx-comp-button-quaternary-large-border-radius-default);gap:var(--mdx-comp-button-quaternary-large-gap-icon-text-default);width:var(--mdx-comp-button-large-sizing-button-width);height:var(--mdx-comp-button-large-sizing-button-height);padding-right:var(--mdx-comp-button-quaternary-large-padding-horizontal-default);padding-left:var(--mdx-comp-button-quaternary-large-padding-horizontal-default)}:host([variant=quaternary][size=lg]) .button:hover{color:var(--mdx-comp-button-quaternary-large-color-hover);background-color:var(--mdx-comp-button-quaternary-large-background-color-hover);border:var(--mdx-comp-button-quaternary-large-border-width-hover) solid var(--mdx-comp-button-quaternary-large-border-color-hover);border-radius:var(--mdx-comp-button-quaternary-large-border-radius-hover);padding-right:var(--mdx-comp-button-quaternary-large-padding-horizontal-hover);padding-left:var(--mdx-comp-button-quaternary-large-padding-horizontal-hover)}:host([variant=quaternary][size=lg]) .button:disabled{color:var(--mdx-comp-button-quaternary-large-color-disabled);background-color:var(--mdx-comp-button-quaternary-large-background-color-disabled);border:var(--mdx-comp-button-quaternary-large-border-width-disabled) solid var(--mdx-comp-button-quaternary-large-border-color-disabled);border-radius:var(--mdx-comp-button-quaternary-large-border-radius-disabled);padding-right:var(--mdx-comp-button-quaternary-large-padding-horizontal-disabled);padding-left:var(--mdx-comp-button-quaternary-large-padding-horizontal-disabled)}:host([variant=primary][size=sm][full-width]) .button,:host([variant=primary][size=md][full-width]) .button,:host([variant=primary][size=lg][full-width]) .button,:host([variant=secondary][size=sm][full-width]) .button,:host([variant=secondary][size=md][full-width]) .button,:host([variant=secondary][size=lg][full-width]) .button,:host([variant=tertiary][size=sm][full-width]) .button,:host([variant=tertiary][size=md][full-width]) .button,:host([variant=tertiary][size=lg][full-width]) .button,:host([variant=quaternary][size=sm][full-width]) .button,:host([variant=quaternary][size=md][full-width]) .button,:host([variant=quaternary][size=lg][full-width]) .button{width:100%}";
const MdxButtonStyle0 = buttonCss;

const Button = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.disabled = false;
        this.variant = BUTTON_VARIANTS.PRIMARY;
        this.size = BUTTON_SIZES.MD;
        this.type = BUTTON_TYPE.BUTTON;
        this.as = BUTTON_AS.BUTTON;
        this.href = undefined;
        this.fullWidth = undefined;
        this.target = '_self';
    }
    isExternalURL() {
        return isExternalUrl(this.href);
    }
    render() {
        if (this.as === BUTTON_AS.BUTTON) {
            return (h("button", { class: "button", type: this.type, disabled: this.disabled }, h("slot", null)));
        }
        return (h("a", { class: "button", href: this.href, target: this.target, rel: this.isExternalURL() ? 'noreferrer' : undefined }, h("slot", null)));
    }
};
Button.style = MdxButtonStyle0;

const errorHintCss = ":host .error-hint{box-sizing:border-box;display:flex;font:var(--mdx-comp-error-message-font-default);color:var(--mdx-comp-error-message-color-default)}:host .error-hint__icon{display:flex;margin-right:var(--mdx-comp-error-message-gap-icon-text-default);height:var(--mdx-comp-error-message-font-default-line-height)}";
const MdxErrorHintStyle0 = errorHintCss;

const ErrorHint = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.text = undefined;
    }
    render() {
        return (h("div", { key: 'b184b5ec294b1927938fde7a84a2b643c039d872', class: "error-hint" }, h("span", { key: 'b26829c9794860fd5563c4e72182f86a88e27b36', class: "error-hint__icon" }, h("mdx-icon-alert-circle", { key: '109378d6424bbb091ffe74a0582e92480025f265', size: ICON_SIZES.XS })), this.text));
    }
};
ErrorHint.style = MdxErrorHintStyle0;

const flyoutCss = ":host .flyout{box-sizing:border-box;list-style:none;background-color:var(--mdx-comp-flyout-background-color-default);border-color:var(--mdx-comp-flyout-border-color-default);letter-spacing:var(--mdx-comp-flyout-font-default-letter-spacing);text-decoration:var(--mdx-comp-flyout-font-default-text-decoration);font:var(--mdx-comp-flyout-font-default);padding-top:var(--mdx-comp-flyout-padding-vertical-default);padding-bottom:var(--mdx-comp-flyout-padding-vertical-default);border-radius:var(--mdx-comp-flyout-border-radius-default);border-width:var(--mdx-comp-flyout-border-width-default);box-shadow:var(--mdx-comp-flyout-box-shadow-default)}";
const MdxFlyoutStyle0 = flyoutCss;

const Flyout = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
    }
    handleKeyDown(event) {
        if (!(event.key === 'ArrowDown' || event.key === 'ArrowUp')) {
            return;
        }
        const items = this.items;
        let currentIndex = items.findIndex((item) => item === document.activeElement);
        if (currentIndex === -1) {
            return;
        }
        if (event.key === 'ArrowDown') {
            currentIndex = (currentIndex + 1) % items.length;
        }
        else if (event.key === 'ArrowUp') {
            currentIndex = (currentIndex - 1 + items.length) % items.length;
        }
        items[currentIndex].focusItem();
        event.preventDefault();
    }
    get items() {
        return Array.from(this.host.querySelectorAll('mdx-flyout-item'));
    }
    componentDidLoad() {
        const items = this.items;
        if (items.length > 0) {
            items[0].selected = true;
        }
    }
    render() {
        return (h("div", { key: 'd4da1f5517e4a86eecb26d1c2249d52f7a98fc05', class: "flyout" }, h("slot", { key: '6fc02e90d88ac3b4959e57f7fd9bc15727dd48bc' })));
    }
    get host() { return getElement(this); }
};
Flyout.style = MdxFlyoutStyle0;

const flyoutItemCss = ":host .flyout-item{box-sizing:border-box;padding-top:var(--mdx-comp-flyout-item-padding-vertical-default);padding-bottom:var(--mdx-comp-flyout-item-padding-vertical-default);padding-left:var(--mdx-comp-flyout-item-padding-horizontal-default);padding-right:var(--mdx-comp-flyout-item-padding-horizontal-default);background-color:var(--mdx-comp-flyout-item-background-color-default);color:var(--mdx-comp-flyout-item-font-color-default);border-width:var(--mdx-comp-flyout-item-border-width-default);width:100%;height:100%;cursor:pointer;border:none;outline:none;text-align:left;font:var(--mdx-comp-flyout-font-default)}:host .flyout-item:hover,:host .flyout-item:focus-within{background-color:var(--mdx-comp-flyout-item-background-color-hover);color:var(--mdx-comp-flyout-item-font-color-hover);border-color:var(--mdx-comp-flyout-item-border-color-selected)}:host([selected]) .flyout-item{border-style:solid;border-width:var(--mdx-comp-flyout-item-border-width-selected-top) var(--mdx-comp-flyout-item-border-width-selected-right) var(--mdx-comp-flyout-item-border-width-selected-bottom) var(--mdx-comp-flyout-item-border-width-selected-left);border-color:var(--mdx-comp-flyout-item-border-color-selected);background-color:var(--mdx-comp-flyout-item-background-color-selected);color:var(--mdx-comp-flyout-item-font-color-selected)}";
const MdxFlyoutItemStyle0 = flyoutItemCss;

const FlyoutItem = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.itemClick = createEvent(this, "itemClick", 7);
        this.label = undefined;
        this.selected = false;
        this.item = undefined;
    }
    // eslint-disable-next-line @stencil-community/async-methods
    async focusItem() {
        var _a;
        (_a = this.buttonEl) === null || _a === void 0 ? void 0 : _a.focus();
    }
    handleOutsideClick(event) {
        if (this.selected && !this.host.contains(event.target)) {
            this.selected = false;
        }
    }
    render() {
        return (h("button", { key: '459360a1da0919a48e23b002404b0ae613d38128', ref: (el) => (this.buttonEl = el), "aria-selected": this.selected, class: "flyout-item", onClick: () => {
                this.selected = !this.selected;
                this.itemClick.emit({ item: this.item, selected: this.selected, label: this.label });
            } }, this.label));
    }
    get host() { return getElement(this); }
};
FlyoutItem.style = MdxFlyoutItemStyle0;

const iconsCss$2 = ":host{box-sizing:border-box;display:flex;align-items:center;justify-content:center}:host([size=xs]) svg{height:16px;width:16px}:host([size=sm]) svg{height:24px;width:24px}:host([size=md]) svg{height:32px;width:32px}:host([size=lg]) svg{height:40px;width:40px}:host([size=xl]) svg{height:48px;width:48px}:host([size=xxl]) svg{height:56px;width:56px}";
const MdxIconAlertCircleStyle0 = iconsCss$2;

const MdxIconAlertCircle = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.size = ICON_SIZES.MD;
    }
    render() {
        switch (this.size) {
            case ICON_SIZES.XS:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 16 16", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { "clip-path": "url(#a)" }, h("path", { stroke: "currentColor", "stroke-width": "1.5", d: "M8 5.333V8m0 2.667h.007M14.667 8A6.667 6.667 0 1 1 1.333 8a6.667 6.667 0 0 1 13.334 0" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H16V16H0z" })))));
            case ICON_SIZES.SM:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2", d: "M12 8v4m0 4h.01M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10" })));
            case ICON_SIZES.MD:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2.3", d: "M16 10.667V16m0 5.333h.013M29.333 16c0 7.364-5.97 13.333-13.333 13.333S2.667 23.363 2.667 16 8.637 2.667 16 2.667 29.333 8.637 29.333 16" })));
            case ICON_SIZES.LG:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 40 40", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2.5", d: "M20 13.333V20m0 6.667h.017M36.667 20c0 9.205-7.462 16.667-16.667 16.667S3.333 29.205 3.333 20 10.795 3.333 20 3.333 36.667 10.795 36.667 20" })));
            case ICON_SIZES.XL:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 48 48", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "3", d: "M24 16v8m0 8h.02M44 24c0 11.046-8.954 20-20 20S4 35.046 4 24 12.954 4 24 4s20 8.954 20 20" })));
            case ICON_SIZES.XXL:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 56 56", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "3.5", d: "M28 18.667V28m0 9.333h.023M51.333 28c0 12.887-10.446 23.333-23.333 23.333S4.667 40.887 4.667 28 15.113 4.667 28 4.667 51.333 15.113 51.333 28" })));
        }
    }
};
MdxIconAlertCircle.style = MdxIconAlertCircleStyle0;

const iconsCss$1 = ":host{box-sizing:border-box;display:flex;align-items:center;justify-content:center}:host([size=xs]) svg{height:16px;width:16px}:host([size=sm]) svg{height:24px;width:24px}:host([size=md]) svg{height:32px;width:32px}:host([size=lg]) svg{height:40px;width:40px}:host([size=xl]) svg{height:48px;width:48px}:host([size=xxl]) svg{height:56px;width:56px}";
const MdxIconEyeStyle0 = iconsCss$1;

const MdxIconEye = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.size = ICON_SIZES.MD;
    }
    render() {
        switch (this.size) {
            case ICON_SIZES.XS:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 16 16", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { stroke: "currentColor", "stroke-width": "1.5", "clip-path": "url(#a)" }, h("path", { d: "M.667 8S3.333 2.667 8 2.667 15.333 8 15.333 8 12.667 13.333 8 13.333.667 8 .667 8" }), h("path", { d: "M8 10a2 2 0 1 0 0-4 2 2 0 0 0 0 4" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H16V16H0z" })))));
            case ICON_SIZES.SM:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2", d: "M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8" }), h("path", { stroke: "currentColor", "stroke-width": "2", d: "M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6" })));
            case ICON_SIZES.MD:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2.3", d: "M1.333 16S6.667 5.333 16 5.333 30.667 16 30.667 16 25.333 26.667 16 26.667 1.333 16 1.333 16" }), h("path", { stroke: "currentColor", "stroke-width": "2.3", d: "M16 20a4 4 0 1 0 0-8 4 4 0 0 0 0 8" })));
            case ICON_SIZES.LG:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 40 40", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "2.5", d: "M1.667 20S8.333 6.667 20 6.667 38.333 20 38.333 20 31.667 33.333 20 33.333 1.667 20 1.667 20" }), h("path", { stroke: "currentColor", "stroke-width": "2.5", d: "M20 25a5 5 0 1 0 0-10 5 5 0 0 0 0 10" })));
            case ICON_SIZES.XL:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 48 48", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "3", d: "M2 24S10 8 24 8s22 16 22 16-8 16-22 16S2 24 2 24" }), h("path", { stroke: "currentColor", "stroke-width": "3", d: "M24 30a6 6 0 1 0 0-12 6 6 0 0 0 0 12" })));
            case ICON_SIZES.XXL:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 56 56", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("path", { stroke: "currentColor", "stroke-width": "3.5", d: "M2.333 28S11.667 9.333 28 9.333 53.667 28 53.667 28 44.333 46.667 28 46.667 2.333 28 2.333 28" }), h("path", { stroke: "currentColor", "stroke-width": "3.5", d: "M28 35a7 7 0 1 0 0-14 7 7 0 0 0 0 14" })));
        }
    }
};
MdxIconEye.style = MdxIconEyeStyle0;

const iconsCss = ":host{box-sizing:border-box;display:flex;align-items:center;justify-content:center}:host([size=xs]) svg{height:16px;width:16px}:host([size=sm]) svg{height:24px;width:24px}:host([size=md]) svg{height:32px;width:32px}:host([size=lg]) svg{height:40px;width:40px}:host([size=xl]) svg{height:48px;width:48px}:host([size=xxl]) svg{height:56px;width:56px}";
const MdxIconEyeOffStyle0 = iconsCss;

const MdxIconEyeOff = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.size = ICON_SIZES.MD;
    }
    render() {
        switch (this.size) {
            case ICON_SIZES.XS:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 16 16", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { "clip-path": "url(#a)" }, h("path", { stroke: "currentColor", "stroke-width": "1.5", d: "M9.413 9.413a2 2 0 1 1-2.826-2.826M.667.667l14.666 14.666M11.96 11.96A6.7 6.7 0 0 1 8 13.333C3.333 13.333.667 8 .667 8A12.3 12.3 0 0 1 4.04 4.04zM6.6 2.827a6 6 0 0 1 1.4-.16C12.667 2.667 15.333 8 15.333 8c-.404.757-.887 1.47-1.44 2.127z" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H16V16H0z" })))));
            case ICON_SIZES.SM:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { "clip-path": "url(#a)" }, h("path", { stroke: "currentColor", "stroke-width": "2", d: "M14.12 14.12a3 3 0 1 1-4.24-4.24M1 1l22 22m-5.06-5.06A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94zM9.9 4.24A9 9 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19z" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H24V24H0z" })))));
            case ICON_SIZES.MD:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 32 32", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { "clip-path": "url(#a)" }, h("path", { stroke: "currentColor", "stroke-width": "2.3", d: "M18.827 18.827a4 4 0 1 1-5.654-5.654M1.333 1.333l29.334 29.334M23.92 23.92A13.43 13.43 0 0 1 16 26.667C6.667 26.667 1.333 16 1.333 16A24.6 24.6 0 0 1 8.08 8.08zM13.2 5.653a12.2 12.2 0 0 1 2.8-.32C25.333 5.333 30.667 16 30.667 16a24.7 24.7 0 0 1-2.88 4.253z" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H32V32H0z" })))));
            case ICON_SIZES.LG:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 40 40", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { "clip-path": "url(#a)" }, h("path", { stroke: "currentColor", "stroke-width": "2.5", d: "M23.533 23.533a4.998 4.998 0 0 1-8.294-1.536 5 5 0 0 1 1.228-5.53m-14.8-14.8 36.666 36.666M29.9 29.9a16.8 16.8 0 0 1-9.9 3.433C8.333 33.333 1.667 20 1.667 20a30.75 30.75 0 0 1 8.433-9.9zM16.5 7.067a15.2 15.2 0 0 1 3.5-.4C31.667 6.667 38.333 20 38.333 20a31 31 0 0 1-3.6 5.317z" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H40V40H0z" })))));
            case ICON_SIZES.XL:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 48 48", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { "clip-path": "url(#a)" }, h("path", { stroke: "currentColor", "stroke-width": "3", d: "M28.24 28.24a6 6 0 1 1-8.48-8.48M2 2l44 44M35.88 35.88A20.14 20.14 0 0 1 24 40C10 40 2 24 2 24a36.9 36.9 0 0 1 10.12-11.88zM19.8 8.48A18.2 18.2 0 0 1 24 8c14 0 22 16 22 16a37 37 0 0 1-4.32 6.38z" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H48V48H0z" })))));
            case ICON_SIZES.XXL:
                return (h("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 56 56", "stroke-linejoin": "round", "stroke-linecap": "round" }, h("g", { "clip-path": "url(#a)" }, h("path", { stroke: "currentColor", "stroke-width": "3.5", d: "M32.947 32.947a7 7 0 0 1-10.071.177 7 7 0 0 1 .177-10.07M2.333 2.333l51.334 51.333M41.86 41.86A23.5 23.5 0 0 1 28 46.667C11.667 46.667 2.333 28 2.333 28A43.05 43.05 0 0 1 14.14 14.14zM23.1 9.893a21.3 21.3 0 0 1 4.9-.56C44.333 9.333 53.667 28 53.667 28a43 43 0 0 1-5.04 7.443z" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { fill: "currentColor", d: "M0 0H56V56H0z" })))));
        }
    }
};
MdxIconEyeOff.style = MdxIconEyeOffStyle0;

const SPINNER_SIZES = {
    SMALL: 'small',
    MEDIUM: 'medium',
    LARGE: 'large',
};

const inputCss = ":host .input{position:relative;box-sizing:border-box;color:var(--mdx-comp-inputfield-label-color-default);display:flex;flex-direction:column;font:var(--mdx-comp-inputfield-font-label);letter-spacing:var(--mdx-comp-inputfield-font-label-letter-spacing);line-height:var(--mdx-comp-inputfield-font-label-line-height);margin-bottom:var(--mdx-comp-inputfield-gap-content-below);text-decoration:var(--mdx-comp-inputfield-font-label-text-decoration);text-transform:var(--mdx-comp-inputfield-font-label-text-case)}@media screen and (max-width: 768px){:host .input{width:var(--mdx-comp-inputfield-container-sizing-mobile-width)}}:host .input__wrapper{box-shadow:var(--mdx-comp-inputfield-box-shadow-default);font:var(--mdx-comp-inputfield-font-default);text-decoration:var(--mdx-comp-inputfield-font-default-text-decoration);text-transform:var(--mdx-comp-inputfield-font-default-text-case);display:flex;align-items:center;margin:var(--mdx-comp-inputfield-gap-label-inputfield) 0}:host .input__wrapper:has(.input__icon-container) .input__field:not([type=date]){padding-right:calc(var(--mdx-comp-inputfield-sizing-icon) + var(--mdx-comp-inputfield-padding-horizontal-default) + var(--mdx-comp-inputfield-gap-icon-loading-icon))}:host .input__wrapper:has(.input__icon-container):has(.input__loading-spinner) .input__field{padding-right:calc(2 * (var(--mdx-comp-inputfield-sizing-icon) + var(--mdx-comp-inputfield-padding-horizontal-default)))}:host .input__field{font:var(--mdx-comp-inputfield-font-default);text-decoration:var(--mdx-comp-inputfield-font-default-text-decoration);text-transform:var(--mdx-comp-inputfield-font-default-text-case);border:none;flex-grow:1;outline:none;padding:var(--mdx-comp-inputfield-padding-vertical-default) var(--mdx-comp-inputfield-padding-horizontal-default);border-color:var(--mdx-comp-inputfield-border-color-default);border-radius:var(--mdx-sys-border-radius-default);border-width:var(--mdx-comp-inputfield-border-width-default);background-color:var(--mdx-comp-inputfield-background-color-default);color:var(--mdx-comp-inputfield-input-color-default);border-style:solid}:host .input__field:focus{border-color:var(--mdx-comp-inputfield-border-color-focus)}:host .input__field::placeholder{color:var(--mdx-comp-inputfield-placeholder-color-default)}:host .input__field:invalid{border-color:var(--mdx-comp-inputfield-border-color-error);box-shadow:var(--mdx-comp-inputfield-box-shadow-error);border-width:var(--mdx-comp-inputfield-border-width-default);border-style:solid}:host .input__icon-container{position:absolute;right:0;display:flex;align-items:center;justify-content:center;padding-right:var(--mdx-comp-inputfield-padding-horizontal-default);gap:var(--mdx-comp-inputfield-gap-icon-loading-icon)}:host .input__information-wrapper{display:flex;flex-direction:row;justify-content:space-between;font:var(--mdx-comp-inputfield-font-supporting);position:relative}:host .input__hint{color:var(--mdx-comp-inputfield-hint-counter-color-default)}:host .input__flyout{position:absolute;width:100%}:host .input__password-visibility{color:var(--mdx-comp-inputfield-border-color-default)}:host .input.focused{border-radius:var(--mdx-comp-keyboard-focus-border-radius-default);color:var(--mdx-comp-inputfield-label-color-focus);outline-color:var(--mdx-comp-keyboard-focus-color-default);outline-style:solid;outline-width:var(--mdx-comp-keyboard-focus-border-width-default);outline-offset:2px}:host .input ::slotted([slot=icon]){color:var(--mdx-comp-inputfield-border-color-default)}:host .input__password-icon-button{all:unset;color:var(--mdx-comp-inputfield-icon-color-default)}:host([type=password]) .input__field-value--visible{font:var(--mdx-comp-inputfield-font-default)}:host([type=password]) .input__field-value--hidden{font-family:Verdana, Geneva, sans-serif;letter-spacing:0.125em}:host([type=password]) .input__field::placeholder{font-family:var(--mdx-comp-inputfield-font-default-font-family);letter-spacing:var(--mdx-comp-inputfield-font-default-letter-spacing)}:host([disabled]) .input__label{color:var(--mdx-comp-inputfield-label-color-disabled)}:host([disabled]) .input__field{color:var(--mdx-comp-inputfield-placeholder-color-disabled);background-color:var(--mdx-comp-inputfield-background-color-disabled);border-color:var(--mdx-comp-inputfield-border-color-disabled)}:host([disabled]) .input__field::placeholder{color:var(--mdx-comp-inputfield-placeholder-color-disabled);background-color:var(--mdx-comp-inputfield-background-color-disabled)}:host([disabled]) .input__wrapper{background-color:var(--mdx-comp-inputfield-background-color-disabled)}:host([disabled]) .input ::slotted([slot=icon]){color:var(--mdx-comp-inputfield-border-color-disabled)}:host([disabled]) .input__password-icon-button{color:var(--mdx-comp-inputfield-icon-color-disabled)}:host([disabled]) .input__hint,:host([disabled]) .input__counter{color:var(--mdx-comp-inputfield-hint-counter-color-disabled)}:host([required]) .asterisk{margin-left:var(--mdx-comp-inputfield-gap-label-asterisk)}:host([loading]) .input__loading-spinner{display:flex;gap:var(--mdx-comp-inputfield-gap-icon-loading-icon);height:var(--mdx-comp-inputfield-sizing-icon);width:var(--mdx-comp-inputfield-sizing-icon)}:host([error-message]) .input__label{color:var(--mdx-comp-inputfield-label-color-error)}:host([error-message]) .input__field{background-color:var(--mdx-comp-inputfield-background-color-error);border-color:var(--mdx-comp-inputfield-border-color-error);box-shadow:var(--mdx-comp-inputfield-box-shadow-error);color:var(--mdx-comp-inputfield-input-color-error)}:host([error-message]) .input__field::placeholder{color:var(--mdx-comp-inputfield-placeholder-color-error)}input[type=date]::-webkit-inner-spin-button,input[type=date]::-webkit-calendar-picker-indicator{display:none}@media screen and (max-width: 768px){input[type=date]::-webkit-inner-spin-button,input[type=date]::-webkit-calendar-picker-indicator{display:block}::slotted([slot=icon]){display:none}}";
const MdxInputStyle0 = inputCss;

const Input = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.inputChange = createEvent(this, "inputChange", 7);
        this.disabled = false;
        this.required = false;
        this.label = undefined;
        this.value = '';
        this.placeholder = '';
        this.hint = undefined;
        this.errorMessage = undefined;
        this.invalidMessage = undefined;
        this.isValid = undefined;
        this.counter = undefined;
        this.loading = false;
        this.suggestionlist = undefined;
        this.selectedItem = undefined;
        this.type = INPUT_TYPES.TEXT;
        this.passwordInputIconAriaLabel = undefined;
        this.inputPattern = undefined;
        this.focused = false;
        this.keyboardEvent = false;
        this.matchedInput = [];
        this.isPasswordVisible = false;
        this.showIconContainer = false;
    }
    handleClick() {
        this.keyboardEvent = false;
    }
    handleKeyDown(event) {
        if (event.key === 'Tab') {
            this.keyboardEvent = true;
        }
    }
    handleInputChange(e) {
        var _a;
        const inputElement = e.currentTarget;
        const v = e.currentTarget.value;
        if (this.counter && (v.length || 0) > this.counter) {
            this.value = v.slice(0, Math.min(v.length, this.counter));
            e.currentTarget.value = this.value;
        }
        else {
            this.value = v;
        }
        const matchedItems = (_a = this.suggestionlist) === null || _a === void 0 ? void 0 : _a.filter((item) => item.label.toLowerCase().includes(v.toLowerCase()));
        this.matchedInput = matchedItems || [];
        this.isValid = inputElement.checkValidity();
        this.inputChange.emit({ input: this.value });
    }
    select(item) {
        if (this.selectedItem === item) {
            return false;
        }
        this.selectedItem = item;
        return (this.value = this.selectedItem);
    }
    handlePasswordVisibilityChange() {
        if (this.disabled) {
            return;
        }
        this.isPasswordVisible = !this.isPasswordVisible;
    }
    componentDidRender() {
        this.showIconContainer =
            this.loading || this.type === INPUT_TYPES.PASSWORD || this.host.querySelector('[slot="icon"]') !== null;
    }
    render() {
        return (h(Host, { key: '4f8d7ce47a8ef413c2c214aec31f602b4d1925ee', onItemClick: ({ detail: { item } }) => {
                this.select(item);
            } }, h("label", { key: '5b7778d26bbc5a287edc1f02bfa10fc6f756f94c', class: `input ${this.required && 'required'} ${this.focused && 'focused'}` }, h("div", { key: '4f77d00296e8b8f932d9c1374988463c00fffc31', class: "input__label" }, this.label, " ", this.required && h("span", { class: "asterisk" }, "*")), h("div", { key: 'eb092d268334168cd5b898adf143f64ba1aa8896', class: "input__wrapper" }, h("input", { key: '0508e2e1db4f8de61cf1729f2cb4059693948587', class: `input__field ${this.type === INPUT_TYPES.PASSWORD
                ? this.isPasswordVisible
                    ? 'input__field-value--visible'
                    : 'input__field-value--hidden'
                : ''}`, type: this.type === INPUT_TYPES.PASSWORD && this.isPasswordVisible ? INPUT_TYPES.TEXT : this.type, onFocus: () => this.keyboardEvent && (this.focused = true), onBlur: () => (this.focused = false), onInput: (e) => this.handleInputChange(e), required: this.required, placeholder: this.placeholder, disabled: this.disabled, value: this.value, pattern: this.inputPattern }), this.showIconContainer && (h("div", { class: "input__icon-container" }, this.loading && h("mdx-spinner", { class: "input__loading-spinner", size: SPINNER_SIZES.MEDIUM }), this.type === INPUT_TYPES.PASSWORD && (h("button", { class: "input__password-icon-button", onClick: () => this.handlePasswordVisibilityChange(), "aria-label": this.passwordInputIconAriaLabel }, !this.isPasswordVisible ? (h("mdx-icon-eye", { size: ICON_SIZES.SM })) : (h("mdx-icon-eye-off", { size: ICON_SIZES.SM })))), h("slot", { name: "icon" })))), h("div", { key: '4be7c93332741a88825a6aa55dba226ea5398425', class: "input__information-wrapper" }, h("div", { key: '33481e0a36de8668ef3de2568745096da6edeacc' }, this.errorMessage ? (h("mdx-error-hint", { class: "input__error-message", text: this.errorMessage })) : this.isValid === false ? (h("mdx-error-hint", { class: "input__error-message", text: this.invalidMessage })) : (h("span", { class: "input__hint" }, this.hint))), this.counter && this.counter > 0 && (h("span", { class: "input__counter" }, this.value.length, " / ", this.counter)), this.value && this.suggestionlist && this.suggestionlist.length > 0 && this.type !== INPUT_TYPES.PASSWORD && (h("div", { class: "input__flyout" }, this.matchedInput.length > 0 && (h("mdx-flyout", null, this.matchedInput.map((element) => (h("mdx-flyout-item", { item: element.label, label: element.label })))))))))));
    }
    get host() { return getElement(this); }
};
Input.style = MdxInputStyle0;

const spinnerCss = ":host .spinner{box-sizing:border-box;vertical-align:middle;transform-origin:center;animation:rotate 2s linear infinite}:host .spinner__circle{fill:none;stroke:var(--mdx-comp-loadingspinner-color-default);stroke-dasharray:1, 200;stroke-dashoffset:0;stroke-linecap:round;animation:stretch 1.5s ease-in-out infinite}:host([size=small]) .spinner{height:var(--mdx-comp-loadingspinner-small-sizing-default);width:var(--mdx-comp-loadingspinner-small-sizing-default)}:host([size=medium]) .spinner{height:var(--mdx-comp-loadingspinner-medium-sizing-default);width:var(--mdx-comp-loadingspinner-medium-sizing-default)}:host([size=large]) .spinner{height:var(--mdx-comp-loadingspinner-large-sizing-default);width:var(--mdx-comp-loadingspinner-large-sizing-default)}@keyframes rotate{100%{transform:rotate(360deg)}}@keyframes stretch{0%{stroke-dasharray:1, 200;stroke-dashoffset:0}50%{stroke-dasharray:90, 200;stroke-dashoffset:-35px}100%{stroke-dashoffset:-124px}}";
const MdxSpinnerStyle0 = spinnerCss;

const Spinner = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.size = SPINNER_SIZES.MEDIUM;
    }
    render() {
        return (h("svg", { key: 'cce3605cf633a455d8bda41358ed332d43dfc3c6', class: "spinner", viewBox: "25 25 50 50", "stroke-width": "5" }, h("circle", { key: '5cecaf9c839c65bb77e7171af92d7bbfa2f1106e', class: "spinner__circle", cx: "50", cy: "50", r: "20" })));
    }
};
Spinner.style = MdxSpinnerStyle0;

export { Button as mdx_button, ErrorHint as mdx_error_hint, Flyout as mdx_flyout, FlyoutItem as mdx_flyout_item, MdxIconAlertCircle as mdx_icon_alert_circle, MdxIconEye as mdx_icon_eye, MdxIconEyeOff as mdx_icon_eye_off, Input as mdx_input, Spinner as mdx_spinner };

//# sourceMappingURL=mdx-button_9.entry.js.map