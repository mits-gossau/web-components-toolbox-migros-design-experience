import { r as registerInstance, h } from './index-399d9287.js';
import { I as ICON_SIZES } from './exports-f063c20a.js';

const iconsCss = ":host{box-sizing:border-box;display:flex;align-items:center;justify-content:center}:host([size=xs]) svg{height:16px;width:16px}:host([size=sm]) svg{height:24px;width:24px}:host([size=md]) svg{height:32px;width:32px}:host([size=lg]) svg{height:40px;width:40px}:host([size=xl]) svg{height:48px;width:48px}:host([size=xxl]) svg{height:56px;width:56px}";

const MdxIconRepeat = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.size = ICON_SIZES.MD;
  }
  render() {
    switch (this.size) {
      case ICON_SIZES.XS:
        return (h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 16 16", "stroke-linejoin": "round", "stroke-linecap": "round", stroke: "currentColor", fill: "none" }, h("g", { "clip-path": "url(#a)" }, h("path", { "stroke-width": "1.5", d: "M11.333.667 14 3.333m0 0L11.333 6M14 3.333H4.667A2.667 2.667 0 0 0 2 6v1.333m2.667 8L2 12.667m0 0L4.667 10M2 12.667h9.333A2.667 2.667 0 0 0 14 10V8.667" })), h("defs", null, h("clipPath", { id: "a" }, h("path", { d: "M0 0H16V16H0z" })))));
      case ICON_SIZES.SM:
        return (h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", "stroke-linejoin": "round", "stroke-linecap": "round", stroke: "currentColor", fill: "none" }, h("path", { "stroke-width": "2", d: "m17 1 4 4m0 0-4 4m4-4H7a4 4 0 0 0-4 4v2m4 12-4-4m0 0 4-4m-4 4h14a4 4 0 0 0 4-4v-2" })));
      case ICON_SIZES.MD:
        return (h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 32 32", "stroke-linejoin": "round", "stroke-linecap": "round", stroke: "currentColor", fill: "none" }, h("path", { "stroke-width": "2.3", d: "M22.667 1.333 28 6.667m0 0L22.667 12M28 6.667H9.333A5.333 5.333 0 0 0 4 12v2.667m5.333 16L4 25.333m0 0L9.333 20M4 25.333h18.667A5.333 5.333 0 0 0 28 20v-2.667" })));
      case ICON_SIZES.LG:
        return (h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 40 40", "stroke-linejoin": "round", "stroke-linecap": "round", stroke: "currentColor", fill: "none" }, h("path", { "stroke-width": "2.5", d: "M28.333 1.667 35 8.333m0 0L28.333 15M35 8.333H11.667A6.667 6.667 0 0 0 5 15v3.333m6.667 20L5 31.667m0 0L11.667 25M5 31.667h23.333A6.667 6.667 0 0 0 35 25v-3.333" })));
      case ICON_SIZES.XL:
        return (h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 48 48", "stroke-linejoin": "round", "stroke-linecap": "round", stroke: "currentColor", fill: "none" }, h("path", { "stroke-width": "3", d: "m34 2 8 8m0 0-8 8m8-8H14a8 8 0 0 0-8 8v4m8 24-8-8m0 0 8-8m-8 8h28a8 8 0 0 0 8-8v-4" })));
      case ICON_SIZES.XXL:
        return (h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 56 56", "stroke-linejoin": "round", "stroke-linecap": "round", stroke: "currentColor", fill: "none" }, h("path", { "stroke-width": "3.5", d: "M39.667 2.333 49 11.667m0 0L39.667 21M49 11.667H16.333A9.333 9.333 0 0 0 7 21v4.667m9.333 28L7 44.333m0 0L16.333 35M7 44.333h32.667A9.333 9.333 0 0 0 49 35v-4.667" })));
    }
  }
};
MdxIconRepeat.style = iconsCss;

export { MdxIconRepeat as mdx_icon_repeat };

//# sourceMappingURL=mdx-icon-repeat.entry.js.map