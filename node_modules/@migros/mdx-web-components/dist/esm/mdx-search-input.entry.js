import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-399d9287.js';
import { I as ICON_SIZES } from './exports-f063c20a.js';

const searchCss = ":host .search{display:flex;align-items:center;flex-direction:row;box-sizing:border-box;padding-left:var(--mdx-comp-searchbar-padding-vertical-default);padding-right:var(--mdx-comp-searchbar-padding-vertical-default);width:var(--mdx-comp-searchbar-sizing-width-desktop);height:var(--mdx-comp-searchbar-sizing-height);background-color:var(--mdx-comp-searchbar-background-color-default);border-radius:var(--mdx-comp-searchbar-border-radius-default);box-shadow:var(--mdx-comp-searchbar-box-shadow-default);border:var(--mdx-comp-searchbar-border-width-default) solid var(--mdx-comp-searchbar-border-color-default)}@media screen and (max-width: 768px){:host .search{width:var(--mdx-comp-searchbar-sizing-width-mobile)}}:host .search__button{all:unset;cursor:pointer;height:min-content}:host .search__button:focus-visible{z-index:10;border-radius:var(--mdx-comp-keyboard-focus-border-radius-default);outline-color:var(--mdx-comp-keyboard-focus-color-default);outline-style:solid;outline-width:var(--mdx-comp-keyboard-focus-border-width-default);outline-offset:2px}:host .search__flyout{position:absolute;padding:5px 0 0 5px;width:var(--mdx-comp-searchbar-sizing-width-desktop)}@media screen and (max-width: 768px){:host .search__flyout{width:var(--mdx-comp-searchbar-sizing-width-mobile)}}:host .search:focus-within{background-color:var(--mdx-comp-searchbar-background-color-focus);box-shadow:var(--mdx-comp-searchbar-box-shadow-focus);border-color:var(--mdx-comp-searchbar-border-color-focus)}:host .search__icon-search{color:var(--mdx-comp-searchbar-search-button-color-default)}:host .search__icon-search:hover{color:var(--mdx-comp-searchbar-search-button-color-hover)}:host .search__input{width:100%;border:none;outline:none;background-color:inherit;padding-left:var(--mdx-comp-searchbar-padding-vertical-default);caret-color:var(--mdx-comp-searchbar-border-color-focus);color:var(--mdx-comp-searchbar-input-color-default);font:var(--mdx-comp-searchbar-font-default);letter-spacing:var(--mdx-comp-searchbar-font-default-letter-spacing);text-transform:var(--mdx-comp-searchbar-font-default-text-case);text-decoration:var(--mdx-comp-searchbar-font-default-text-decoration)}:host .search__input::placeholder{color:var(--mdx-comp-searchbar-placeholder-color-default)}:host .search__input:focus-within{color:var(--mdx-comp-searchbar-input-color-focus)}:host .search__icon-x{margin-left:auto;color:var(--mdx-comp-searchbar-clear-button-color-default)}:host .search__icon-x:hover{color:var(--mdx-comp-searchbar-clear-button-color-hover)}:host([disabled]) .search{background-color:var(--mdx-comp-searchbar-background-color-disabled);border-color:var(--mdx-comp-searchbar-border-color-disabled)}:host([disabled]) .search__button{cursor:default}:host([disabled]) .search__input{color:var(--mdx-comp-searchbar-input-color-disabled)}:host([disabled]) .search__input::placeholder{color:var(--mdx-comp-searchbar-placeholder-color-disabled)}:host([disabled]) .search__icon-search{color:var(--mdx-comp-searchbar-search-button-color-disabled)}:host([disabled]) .search__icon-x{color:var(--mdx-comp-searchbar-clear-button-color-disabled)}";

const SearchInput = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.searchTrigger = createEvent(this, "searchTrigger", 7);
    this.handleInputChange = (event) => {
      var _a;
      this.value = event.target.value;
      const matchedItems = (_a = this.suggestionlist) === null || _a === void 0 ? void 0 : _a.filter((item) => item.label.toLowerCase().includes(this.value.toLowerCase()));
      this.matchedInput = matchedItems || [];
    };
    this.disabled = false;
    this.placeholder = undefined;
    this.value = '';
    this.suggestionlist = undefined;
    this.selectedItem = undefined;
    this.matchedInput = [];
  }
  select(item) {
    if (this.selectedItem === item) {
      return false;
    }
    this.selectedItem = item;
    return (this.value = this.selectedItem);
  }
  render() {
    return (h(Host, null, h("div", { class: "search" }, h("button", { class: "search__button", "aria-label": "Search", onClick: () => this.searchTrigger.emit({ value: this.value }) }, h("mdx-icon-search", { size: ICON_SIZES.SM, class: "search__icon-search" })), h("input", { type: "text", class: "search__input", value: this.value, spellcheck: false, disabled: this.disabled, placeholder: this.placeholder, onInput: (event) => this.handleInputChange(event), onKeyUp: (event) => {
        if (event.key === 'Enter') {
          this.searchTrigger.emit({ value: this.value });
        }
      } }), h("button", { class: "search__button", "aria-label": "Clear", onClick: () => {
        var _a;
        this.value = '';
        const input = (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('input');
        input === null || input === void 0 ? void 0 : input.focus();
      } }, h("mdx-icon-x", { size: ICON_SIZES.SM, class: "search__icon-x" }))), this.value && this.suggestionlist && this.suggestionlist.length > 0 && (h("div", { class: "search__flyout" }, this.matchedInput.length > 0 && (h("mdx-flyout", null, this.matchedInput.map((element) => (h("mdx-flyout-item", { item: element.label, label: element.label, onItemClick: ({ detail: { item } }) => {
        this.select(item);
        this.matchedInput = [];
        this.searchTrigger.emit({ value: this.value });
      } })))))))));
  }
  get host() { return getElement(this); }
};
SearchInput.style = searchCss;

export { SearchInput as mdx_search_input };

//# sourceMappingURL=mdx-search-input.entry.js.map