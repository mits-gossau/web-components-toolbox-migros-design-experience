import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-7e8279cb.js';
import { p as parseAttribute } from './parse-attribute-fc9c1a5f.js';
import { I as ICON_SIZES } from './exports-6dd4526a.js';

const searchCss = ":host .search{display:flex;align-items:center;flex-direction:row;box-sizing:border-box;padding-left:var(--mdx-comp-searchbar-padding-vertical-default);padding-right:var(--mdx-comp-searchbar-padding-vertical-default);width:var(--mdx-comp-searchbar-sizing-width-desktop);height:var(--mdx-comp-searchbar-sizing-height);background-color:var(--mdx-comp-searchbar-background-color-default);border-radius:var(--mdx-comp-searchbar-border-radius-default);box-shadow:var(--mdx-comp-searchbar-box-shadow-default);border:var(--mdx-comp-searchbar-border-width-default) solid var(--mdx-comp-searchbar-border-color-default)}@media screen and (max-width: 768px){:host .search{width:var(--mdx-comp-searchbar-sizing-width-mobile)}}:host .search__button{all:unset;cursor:pointer;height:min-content;transition-duration:var(--mdx-comp-searchbar-transition-fade-icon-in-out-duration);transition-delay:var(--mdx-comp-searchbar-transition-fade-icon-in-out-delay);transition-timing-function:var(--mdx-comp-searchbar-transition-fade-icon-in-out-timing-function);transition-property:opacity, width, height}:host .search__button:focus-visible{z-index:10;border-radius:var(--mdx-comp-keyboard-focus-border-radius-default);outline-color:var(--mdx-comp-keyboard-focus-color-default);outline-style:solid;outline-width:var(--mdx-comp-keyboard-focus-border-width-default);outline-offset:2px}:host .search__button--hidden{opacity:0;width:0;height:0}:host .search__flyout{position:absolute;padding:5px 0 0 5px;width:var(--mdx-comp-searchbar-sizing-width-desktop)}@media screen and (max-width: 768px){:host .search__flyout{width:var(--mdx-comp-searchbar-sizing-width-mobile)}}:host .search:focus-within{background-color:var(--mdx-comp-searchbar-background-color-focus);box-shadow:var(--mdx-comp-searchbar-box-shadow-focus);border-color:var(--mdx-comp-searchbar-border-color-focus)}:host .search__icon-search{color:var(--mdx-comp-searchbar-search-button-color-default)}:host .search__icon-search:hover{color:var(--mdx-comp-searchbar-search-button-color-hover)}:host .search__input{width:100%;border:none;outline:none;background-color:inherit;padding-left:var(--mdx-comp-searchbar-padding-vertical-default);caret-color:var(--mdx-comp-searchbar-border-color-focus);color:var(--mdx-comp-searchbar-input-color-default);font:var(--mdx-comp-searchbar-font-default);letter-spacing:var(--mdx-comp-searchbar-font-default-letter-spacing);text-transform:var(--mdx-comp-searchbar-font-default-text-case);text-decoration:var(--mdx-comp-searchbar-font-default-text-decoration)}:host .search__input::placeholder{color:var(--mdx-comp-searchbar-placeholder-color-default)}:host .search__input:focus-within{color:var(--mdx-comp-searchbar-input-color-focus)}:host .search__icon-x{margin-left:auto;color:var(--mdx-comp-searchbar-clear-button-color-default)}:host .search__icon-x:hover{color:var(--mdx-comp-searchbar-clear-button-color-hover)}:host([disabled]) .search{background-color:var(--mdx-comp-searchbar-background-color-disabled);border-color:var(--mdx-comp-searchbar-border-color-disabled)}:host([disabled]) .search__button{cursor:default}:host([disabled]) .search__input{color:var(--mdx-comp-searchbar-input-color-disabled)}:host([disabled]) .search__input::placeholder{color:var(--mdx-comp-searchbar-placeholder-color-disabled)}:host([disabled]) .search__icon-search{color:var(--mdx-comp-searchbar-search-button-color-disabled)}:host([disabled]) .search__icon-x{color:var(--mdx-comp-searchbar-clear-button-color-disabled)}";
const MdxSearchInputStyle0 = searchCss;

const SearchInput = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.searchTrigger = createEvent(this, "searchTrigger", 7);
        this.handleInputChange = (event) => {
            var _a;
            this.value = event.target.value;
            const matchedItems = (_a = this.suggestionList) === null || _a === void 0 ? void 0 : _a.filter((item) => item.label.toLowerCase().includes(this.value.toLowerCase()));
            this.matchedInput = matchedItems || [];
        };
        this.disabled = false;
        this.placeholder = undefined;
        this.value = '';
        this.suggestionList = undefined;
        this.searchButtonAriaLabel = undefined;
        this.resetButtonAriaLabel = undefined;
        this.selectedItem = undefined;
        this.matchedInput = [];
    }
    select(item) {
        if (this.selectedItem === item) {
            return false;
        }
        this.selectedItem = item;
        return (this.value = this.selectedItem);
    }
    connectedCallback() {
        this.suggestionList = parseAttribute(this.host, 'suggestion-list', this.suggestionList);
    }
    render() {
        return (h(Host, { key: '565ab7720d572f82272b6a8e8ffc8b0706bb6083' }, h("div", { key: 'fc504db329e9fb71c43fe7d7d95d92c66fe81429', class: "search" }, h("button", { key: '93f38f8d189bd9f2797a78f136d46b8deb2f5b09', class: "search__button", "aria-label": this.searchButtonAriaLabel, onClick: () => this.searchTrigger.emit({ value: this.value }), type: "submit" }, h("mdx-icon-search", { key: '3c4100e0b92e060954ef029aad59098dfc23b5bb', size: ICON_SIZES.SM, class: "search__icon-search" })), h("input", { key: '5a481d748ffa16b06a90094bad07fd2ce71b1602', type: "text", class: "search__input", value: this.value, spellcheck: false, disabled: this.disabled, placeholder: this.placeholder, onInput: (event) => this.handleInputChange(event), onKeyUp: (event) => {
                if (event.key === 'Enter') {
                    this.searchTrigger.emit({ value: this.value });
                }
            } }), h("button", { key: 'c802a3cac5c0d79742efcfb39b5c1dcc14c22153', class: `search__button${this.value === '' ? ' search__button--hidden' : ''}`, "aria-label": this.resetButtonAriaLabel, type: "reset", onClick: () => {
                var _a;
                this.value = '';
                const input = (_a = this.host.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('input');
                input === null || input === void 0 ? void 0 : input.focus();
            } }, h("mdx-icon-x", { key: 'a986d5d3cee8414cba85901dc01c509a7dc4af6d', size: ICON_SIZES.SM, class: "search__icon-x" }))), this.value && this.suggestionList && this.suggestionList.length > 0 && (h("div", { class: "search__flyout" }, this.matchedInput.length > 0 && (h("mdx-flyout", null, this.matchedInput.map((element) => (h("mdx-flyout-item", { item: element.label, label: element.label, onItemClick: ({ detail: { item } }) => {
                this.select(item);
                this.matchedInput = [];
                this.searchTrigger.emit({ value: this.value });
            } })))))))));
    }
    get host() { return getElement(this); }
};
SearchInput.style = MdxSearchInputStyle0;

export { SearchInput as mdx_search_input };

//# sourceMappingURL=mdx-search-input.entry.js.map