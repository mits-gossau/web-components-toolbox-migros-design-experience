import { r as registerInstance, h, H as Host } from './index-399d9287.js';
import { I as ICON_SIZES } from './exports-f063c20a.js';

var DIALOG_VARIANTS;
(function (DIALOG_VARIANTS) {
  DIALOG_VARIANTS["DEFAULT"] = "default";
  DIALOG_VARIANTS["ERROR"] = "error";
  DIALOG_VARIANTS["SUCCESS"] = "success";
  DIALOG_VARIANTS["ACCENT"] = "accent";
})(DIALOG_VARIANTS || (DIALOG_VARIANTS = {}));

const dialogCss = ":host .dialog{position:fixed;display:flex;flex-direction:row;box-sizing:border-box;gap:var(--mdx-comp-dialog-content-gap-icon-text-horizontal);padding:var(--mdx-comp-dialog-content-spacing-padding-default);left:50%;top:50%;transform:translate(-50%, -50%);box-shadow:var(--mdx-comp-dialog-shadow-desktop);background-color:var(--mdx-comp-dialog-background-color-default);border:2px solid var(--mdx-comp-dialog-border-color-default);border-radius:var(--mdx-comp-dialog-border-radius-desktop);color:var(--mdx-comp-dialog-color-default);animation:visible var(--mdx-comp-dialog-transition-fade-in-out-duration) var(--mdx-comp-dialog-transition-fade-in-out-timing-function) var(--mdx-comp-dialog-transition-fade-in-out-delay);z-index:1001}@media screen and (max-width: 768px){:host .dialog{flex-direction:column;align-items:flex-start;gap:var(--mdx-comp-dialog-content-gap-icon-text-vertical);box-shadow:var(--mdx-comp-dialog-shadow-mobile);border-radius:var(--mdx-comp-dialog-border-radius-mobile) var(--mdx-comp-dialog-border-radius-mobile) 0 0;width:100%;max-height:100vh;overflow-y:auto;max-height:-webkit-fill-available;bottom:0;top:initial;transform:translate(-50%, 0%);animation:slide-in var(--mdx-comp-dialog-transition-fade-in-out-duration) var(--mdx-comp-dialog-transition-fade-in-out-timing-function) var(--mdx-comp-dialog-transition-fade-in-out-delay)}}@media screen and (min-width: 769px){:host .dialog__content{max-height:calc(100vh - 2 * var(--mdx-comp-dialog-content-spacing-padding-default));margin-right:calc(-1 * var(--mdx-comp-dialog-content-spacing-padding-default));padding-right:var(--mdx-comp-dialog-content-spacing-padding-default);overflow-y:auto}}:host .dialog__heading{font:var(--mdx-comp-dialog-font-title)}:host .dialog__text{margin-top:var(--mdx-comp-dialog-content-gap-title-text);font:var(--mdx-comp-dialog-font-paragraph)}:host .dialog__button-bar{margin-top:var(--mdx-comp-dialog-content-gap-content-button-group);display:flex;justify-content:flex-end;gap:var(--mdx-comp-button-group-horizontal-margin-gap-between-default)}@media screen and (max-width: 768px){:host .dialog__button-bar{flex-direction:column}}:host .dialog__icon-container{display:flex;align-items:center;justify-content:center;border-radius:50%;flex-grow:0;flex-shrink:0;flex-basis:var(--mdx-comp-dialog-icon-circle-sizing-default);width:var(--mdx-comp-dialog-icon-circle-sizing-default);height:var(--mdx-comp-dialog-icon-circle-sizing-default);background-color:var(--mdx-comp-dialog-icon-background-default);color:var(--mdx-comp-dialog-icon-color-default)}:host .dialog__backdrop{background-color:rgba(0, 0, 0, 0.3);position:fixed;top:0;bottom:0;left:0;right:0;z-index:1000}:host .dialog ::slotted([slot=icon]){display:flex}:host([variant=error]) .dialog{border:2px solid var(--mdx-comp-dialog-border-color-error)}:host([variant=error]) .dialog__icon-container{background-color:var(--mdx-comp-dialog-icon-background-error);color:var(--mdx-comp-dialog-icon-color-error)}:host([variant=success]) .dialog{border:2px solid var(--mdx-comp-dialog-border-color-success)}:host([variant=success]) .dialog__icon-container{background-color:var(--mdx-comp-dialog-icon-background-success);color:var(--mdx-comp-dialog-icon-color-success)}:host([variant=accent]) .dialog{border:2px solid var(--mdx-comp-dialog-border-color-accent)}:host([variant=accent]) .dialog__icon-container{background-color:var(--mdx-comp-dialog-icon-background-accent);color:var(--mdx-comp-dialog-icon-color-accent)}@keyframes visible{from{opacity:0}to{opacity:1}}@keyframes slide-in{from{opacity:0;transform:translate(-50%, 100%)}to{opacity:1;transform:translate(-50%, 0%)}}";

const Dialog = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.variant = DIALOG_VARIANTS.DEFAULT;
    this.open = false;
    this.heading = '';
  }
  render() {
    return this.open ? (h(Host, null, h("div", { class: "dialog" }, h("div", { class: "dialog__icon-container" }, h("slot", { name: "icon" }, h("mdx-icon-alert-triangle", { size: ICON_SIZES.SM }))), h("div", { class: "dialog__content" }, h("div", { class: "dialog__heading" }, this.heading), h("div", { class: "dialog__text" }, h("slot", { name: "content" })), h("div", { class: "dialog__button-bar" }, h("mdx-button-group", null, h("slot", { name: "button" }))))), h("div", { class: "dialog__backdrop" }))) : null;
  }
};
Dialog.style = dialogCss;

export { Dialog as mdx_dialog };

//# sourceMappingURL=mdx-dialog.entry.js.map