{"file":"mdx-checkbox.entry.js","mappings":";;;AAAA,IAAY,iBAGX;AAHD,WAAY,iBAAiB;EAC3B,2CAAsB,CAAA;EACtB,4CAAuB,CAAA;AACzB,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB;;ACA7B,MAAM,WAAW,GAAG,6tOAA6tO;;MCYpuO,QAAQ;;;;mBAQU,iBAAiB,CAAC,WAAW;;;;mBAYhD,KAAK;oBAGJ,KAAK;;;;EAQhB,MAAM;IACJ,QACE,WAAK,KAAK,EAAC,UAAU,IACnB,aAAO,KAAK,EAAC,iBAAiB,IAC5B,WAAK,KAAK,EAAC,mBAAmB,IAC5B,aACE,KAAK,EAAC,iBAAiB,EACvB,IAAI,EAAC,UAAU,EACf,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,CAAC,KAAK;QACd,IAAI,CAAC,OAAO,GAAI,KAAK,CAAC,MAA2B,CAAC,OAAO,CAAC;QAC1D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;OAC3F,EACD,KAAK,EAAE,IAAI,CAAC,KAAK,GACjB,EACF,sBAAgB,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAE,UAAU,CAAC,EAAE,GAAI,EAC9D,YAAM,KAAK,EAAC,sBAAsB,IAAE,IAAI,CAAC,KAAK,CAAQ,EACrD,IAAI,CAAC,SAAS,KAAK,SAAS,GAAG,YAAM,KAAK,EAAC,qBAAqB,IAAE,IAAI,IAAI,CAAC,SAAS,GAAG,CAAQ,GAAG,IAAI,CACnG,EACL,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,sBAAsB,CAAC,KACrD,YAAM,KAAK,EAAC,uBAAuB,IACjC,YAAM,IAAI,EAAC,aAAa,GAAG,CACtB,CACR,CACK,EACP,IAAI,CAAC,KAAK,IAAI,sBAAgB,KAAK,EAAC,yBAAyB,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAI,CAC/E,EACN;GACH;;;;;;;","names":[],"sources":["src/components/checkbox/export.ts","src/components/checkbox/checkbox.scss?tag=mdx-checkbox&encapsulation=shadow","src/components/checkbox/checkbox.tsx"],"sourcesContent":["export enum CHECKBOX_VARIANTS {\n  WITH_BORDER = 'border',\n  NO_BORDER = 'no-border',\n}\n",":host .checkbox {\n  box-sizing: border-box;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font: var(--mdx-comp-checkbox-font-label);\n\n  &__wrapper {\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: var(--mdx-comp-checkbox-font-label-line-height);\n  }\n\n  &__label-text {\n    padding-left: var(--mdx-comp-checkbox-gap-box-label);\n  }\n\n  &__input {\n    cursor: pointer;\n    border-style: solid;\n    border-radius: var(--mdx-comp-checkbox-border-radius-box);\n    border-width: var(--mdx-comp-checkbox-border-width-default);\n    border-color: var(--mdx-comp-checkbox-unchecked-input-border-default);\n    min-height: var(--mdx-comp-checkbox-sizing-default);\n    min-width: var(--mdx-comp-checkbox-sizing-default);\n    margin: 0;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    outline: none;\n    background-color: var(--mdx-comp-checkbox-unchecked-input-background-default);\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-unchecked-input-background-hover);\n      border-color: var(--mdx-comp-checkbox-unchecked-input-border-hover);\n    }\n\n    &:focus-visible {\n      outline-style: solid;\n      border-radius: var(--mdx-comp-keyboard-focus-border-radius-default);\n      outline-width: var(--mdx-comp-keyboard-focus-border-width-default);\n      outline-color: var(--mdx-comp-keyboard-focus-color-default);\n    }\n  }\n\n  &__icon {\n    opacity: 0;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    color: var(--mdx-comp-checkbox-checked-input-icon-border-color-default);\n    min-height: var(--mdx-comp-checkbox-sizing-default);\n    min-width: var(--mdx-comp-checkbox-sizing-default);\n    transition: var(--mdx-comp-checkbox-transition-fade-icon-in-out);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-input-icon-border-color-hover);\n    }\n  }\n\n  &__description {\n    font: var(--mdx-comp-checkbox-font-description);\n    color: var(--mdx-comp-checkbox-unchecked-description-color-default);\n    margin-top: var(--mdx-comp-checkbox-gap-label-description);\n    padding-left: calc(var(--mdx-comp-checkbox-sizing-default) + var(--mdx-comp-checkbox-gap-box-label));\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-unchecked-description-color-hover);\n    }\n  }\n\n  &__label:hover {\n    transition: var(--mdx-comp-checkbox-transition-hover-fade-in-out);\n  }\n\n  &__indicator {\n    margin-left: var(--mdx-comp-checkbox-gap-indicator-label);\n    color: var(--mdx-comp-checkbox-unchecked-indicator-color-default);\n    font: var(--mdx-comp-checkbox-font-indicator);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-indicator-color-hover);\n    }\n  }\n}\n\n:host([variant='border']) .checkbox {\n  &__label {\n    cursor: pointer;\n    border-style: solid;\n    border-width: var(--mdx-comp-checkbox-border-width-default);\n    border-color: var(--mdx-comp-checkbox-unchecked-border-color-default);\n    border-radius: var(--mdx-comp-checkbox-border-radius-default);\n    font: var(--mdx-comp-checkbox-font-label);\n    color: var(--mdx-comp-checkbox-unchecked-label-color-default);\n    padding: var(--mdx-comp-checkbox-padding-vertical-default) var(--mdx-comp-checkbox-padding-horizontal-default);\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-unchecked-background-color-hover);\n      border-color: var(--mdx-comp-checkbox-unchecked-border-color-hover);\n      border-width: var(--mdx-comp-checkbox-border-width-hover);\n    }\n  }\n}\n\n:host([variant='no-border']) .checkbox {\n  &__label {\n    cursor: pointer;\n    background-color: var(--mdx-comp-checkbox-unchecked-background-color-default);\n    color: var(--mdx-comp-checkbox-unchecked-label-color-default);\n    padding: var(--mdx-comp-checkbox-padding-vertical-default) var(--mdx-comp-checkbox-padding-horizontal-default)\n      var(--mdx-comp-checkbox-padding-vertical-default) 0;\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-unchecked-background-color-hover);\n      border-radius: var(--mdx-comp-checkbox-border-radius-default);\n    }\n  }\n}\n\n:host([checked]) .checkbox {\n  &__label {\n    border-color: var(--mdx-comp-checkbox-checked-border-color-default);\n    background-color: var(--mdx-comp-checkbox-checked-background-color-default);\n    color: var(--mdx-comp-checkbox-checked-label-color-default);\n\n    &:hover {\n      border-color: var(--mdx-comp-checkbox-checked-border-color-hover);\n      background-color: var(--mdx-comp-checkbox-checked-background-color-hover);\n      border-width: var(--mdx-comp-checkbox-border-width-hover);\n    }\n  }\n\n  &__input {\n    border-style: solid;\n    border-color: var(--mdx-comp-checkbox-checked-border-color-default);\n    border-width: var(--mdx-comp-checkbox-border-width-default);\n  }\n\n  &__description {\n    color: var(--mdx-comp-checkbox-checked-description-color-default);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-description-color-hover);\n    }\n  }\n\n  &__icon {\n    opacity: 1;\n  }\n\n  &__indicator {\n    color: var(--mdx-comp-checkbox-checked-indicator-color-default);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-indicator-color-hover);\n    }\n  }\n}\n\n:host([disabled]) .checkbox {\n  &__label {\n    background-color: var(--mdx-comp-checkbox-unchecked-background-color-disabled);\n    border-color: var(--mdx-comp-checkbox-unchecked-border-color-disabled);\n    border-width: var(--mdx-comp-checkbox-border-width-disabled);\n    color: var(--mdx-comp-checkbox-unchecked-label-color-disabled);\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-unchecked-background-color-disabled);\n      border-color: var(--mdx-comp-checkbox-unchecked-border-color-disabled);\n      color: var(--mdx-comp-checkbox-unchecked-label-color-disabled);\n    }\n  }\n\n  &__input {\n    background-color: var(--mdx-comp-checkbox-unchecked-input-background-disabled);\n    border-color: var(--mdx-comp-checkbox-unchecked-input-border-disabled);\n    border-width: var(--mdx-comp-checkbox-border-width-disabled);\n  }\n\n  &__description {\n    color: var(--mdx-comp-checkbox-checked-description-color-disabled);\n    background-color: var(--mdx-comp-checkbox-unchecked-background-color-disabled);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-description-color-disabled);\n      background-color: var(--mdx-comp-checkbox-unchecked-background-color-disabled);\n    }\n  }\n  &__indicator {\n    color: var(--mdx-comp-checkbox-unchecked-indicator-color-disabled);\n  }\n}\n\n:host([disabled][checked]) .checkbox {\n  &__label {\n    border-color: var(--mdx-comp-checkbox-checked-border-color-disabled);\n    border-width: var(--mdx-comp-checkbox-border-width-disabled);\n    background-color: var(--mdx-comp-checkbox-checked-background-color-disabled);\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-checked-background-color-default);\n      border-color: var(--mdx-comp-checkbox-checked-border-color-disabled);\n      border-width: var(--mdx-comp-checkbox-border-width-disabled);\n    }\n  }\n\n  &__input {\n    border-color: var(--mdx-comp-checkbox-checked-input-border-disabled);\n    background-color: var(--mdx-comp-checkbox-checked-input-background-disabled);\n    border-width: var(--mdx-comp-checkbox-border-width-disabled);\n  }\n\n  &__description {\n    color: var(--mdx-comp-checkbox-checked-description-color-disabled);\n    background-color: var(--mdx-comp-checkbox-checked-background-color-disabled);\n  }\n\n  &__icon {\n    color: var(--mdx-comp-checkbox-checked-input-icon-border-color-disabled);\n  }\n\n  &__indicator {\n    color: var(--mdx-comp-checkbox-checked-indicator-color-disabled);\n  }\n}\n\n:host([error]) .checkbox {\n  &__error-message {\n    margin-top: var(--mdx-comp-checkbox-gap-container-error);\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { ICON_SIZES } from '../icons/exports';\nimport { CHECKBOX_VARIANTS } from './export';\n\n/**\n * @slot description - Slot for the description\n */\n@Component({\n  tag: 'mdx-checkbox',\n  styleUrl: 'checkbox.scss',\n  shadow: true,\n})\nexport class Checkbox {\n  @Element()\n  hostElement: HTMLMdxCheckboxElement;\n\n  @Event()\n  toggleCheckbox: EventEmitter<{ checked: boolean; value?: string; label: string }>;\n\n  @Prop({ reflect: true })\n  variant: CHECKBOX_VARIANTS = CHECKBOX_VARIANTS.WITH_BORDER;\n\n  @Prop()\n  label!: string;\n\n  @Prop()\n  name?: string;\n\n  @Prop()\n  error?: string;\n\n  @Prop({ reflect: true })\n  checked = false;\n\n  @Prop()\n  disabled = false;\n\n  @Prop()\n  indicator?: string | number;\n\n  @Prop()\n  value?: string;\n\n  render() {\n    return (\n      <div class=\"checkbox\">\n        <label class=\"checkbox__label\">\n          <div class=\"checkbox__wrapper\">\n            <input\n              class=\"checkbox__input\"\n              type=\"checkbox\"\n              name={this.name}\n              disabled={this.disabled}\n              checked={this.checked}\n              onChange={(event) => {\n                this.checked = (event.target as HTMLInputElement).checked;\n                this.toggleCheckbox.emit({ checked: this.checked, value: this.value, label: this.label });\n              }}\n              value={this.value}\n            />\n            <mdx-icon-check class=\"checkbox__icon\" size={ICON_SIZES.XS} />\n            <span class=\"checkbox__label-text\">{this.label}</span>\n            {this.indicator !== undefined ? <span class=\"checkbox__indicator\">{`(${this.indicator})`}</span> : null}\n          </div>\n          {this.hostElement.querySelector('[slot=\"description\"]') && (\n            <span class=\"checkbox__description\">\n              <slot name=\"description\" />\n            </span>\n          )}\n        </label>\n        {this.error && <mdx-error-hint class=\"checkbox__error-message\" text={this.error} />}\n      </div>\n    );\n  }\n}\n"],"version":3}