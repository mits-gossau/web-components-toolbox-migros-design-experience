{"file":"mdx-textarea.entry.js","mappings":";;AAAA,MAAM,WAAW,GAAG,grHAAgrH;;MCOvrH,QAAQ;;;;oBAKR,KAAK;oBAGL,KAAK;;iBAMR,EAAE;uBAGI,EAAE;;;;mBAYN,KAAK;yBAGC,KAAK;;EAGrB,WAAW;IACT,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;GAC5B;EAGD,aAAa;IACX,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;GAC3B;EAEO,WAAW,CAAC,CAAQ;IAC1B,MAAM,CAAC,GAAI,CAAC,CAAC,aAAqC,CAAC,KAAK,CAAC;IACzD,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;MAClD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;MACzD,CAAC,CAAC,aAAqC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;KAC7D;SAAM;MACL,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAChB;IACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;GAC9C;EAED,MAAM;IACJ,QACE,aAAO,KAAK,EAAE,YAAY,IAAI,CAAC,OAAO,IAAI,mBAAmB,EAAE,IAC7D,WAAK,KAAK,EAAC,sBAAsB,IAC9B,IAAI,CAAC,KAAK,OAAG,IAAI,CAAC,QAAQ,IAAI,YAAM,KAAK,EAAC,UAAU,QAAS,CAC1D,EACN,gBACE,KAAK,EAAC,iBAAiB,EACvB,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAC1D,MAAM,EAAE,OAAO,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,EACpC,OAAO,EAAE,CAAC,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACpB,MAAM,CAAC,GAAG,CAAC,CAAC,aAAoC,CAAC;QACjD,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;QACrB,MAAM,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;QACpC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG;gBACb,YAAY,uDAAuD,CAAC;OACzE,EACD,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,KAAK,GACjB,EACF,WAAK,KAAK,EAAC,+BAA+B,IACxC,eACG,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,KACpE,YAAM,KAAK,EAAC,gBAAgB,IAAE,IAAI,CAAC,IAAI,CAAQ,CAChD,EACA,IAAI,CAAC,KAAK,IAAI,sBAAgB,KAAK,EAAC,yBAAyB,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAI,CAC/E,EACL,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,KAC/B,YAAM,KAAK,EAAC,mBAAmB,IAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,SAAK,IAAI,CAAC,OAAO,CAC9B,CACR,CACG,CACA,EACR;GACH;;;;;;","names":[],"sources":["src/components/textarea/textarea.scss?tag=mdx-textarea&encapsulation=shadow","src/components/textarea/textarea.tsx"],"sourcesContent":[":host .textarea {\n  box-sizing: border-box;\n  color: var(--mdx-comp-textarea-label-color-default);\n  display: flex;\n  flex-direction: column;\n  margin-bottom: var(--mdx-comp-textarea-gap-content-below);\n\n  &--focused {\n    border-radius: var(--mdx-comp-keyboard-focus-border-radius-default);\n    color: var(--mdx-comp-textarea-label-color-focus);\n    outline-color: var(--mdx-comp-keyboard-focus-color-default);\n    outline-style: solid;\n    outline-width: var(--mdx-comp-keyboard-focus-border-width-default);\n    outline-offset: 2px;\n  }\n\n  &__label-text {\n    font: var(--mdx-comp-textarea-font-label);\n    color: var(--mdx-comp-textarea-label-color-default);\n  }\n\n  &__field {\n    background-color: var(--mdx-comp-textarea-background-color-default);\n    border-radius: var(--mdx-comp-textarea-border-radius-default);\n    border-width: var(--mdx-comp-textarea-border-width-default);\n    border-style: solid;\n    box-shadow: var(--mdx-comp-textarea-box-shadow-default);\n    font: var(--mdx-comp-textarea-font-default);\n    margin: var(--mdx-comp-textarea-gap-label-textarea) 0 var(--mdx-comp-textarea-gap-content-below) 0;\n    padding: var(--mdx-comp-textarea-padding-vertical-default) var(--mdx-comp-textarea-padding-horizontal-default);\n    height: var(--mdx-comp-textarea-sizing-vertical-box-min);\n    resize: none;\n    overflow: scroll;\n    box-sizing: border-box;\n    outline: none;\n\n    &::placeholder {\n      color: var(--mdx-comp-textarea-placeholder-color-default);\n    }\n\n    &:focus-within {\n      background-color: var(--mdx-comp-textarea-background-color-focus);\n      border-color: var(--mdx-comp-textarea-border-color-focus);\n      box-shadow: var(--mdx-comp-textarea-box-shadow-focus);\n      color: var(--mdx-comp-textarea-input-color-focus);\n    }\n\n    &:focus-within::placeholder {\n      color: var(--mdx-comp-textarea-placeholder-color-focus);\n    }\n  }\n\n  &__information-wrapper {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    font: var(--mdx-comp-textarea-font-supporting);\n  }\n\n  &__hint {\n    color: var(--mdx-comp-textarea-hint-counter-color-default);\n  }\n\n  &:focus-within &__information-wrapper &__hint {\n    color: var(--mdx-comp-textarea-hint-counter-color-focus);\n  }\n\n  &--focused {\n    .textarea__field {\n      background-color: var(--mdx-comp-textarea-background-color-focus);\n      border-color: var(--mdx-comp-textarea-border-color-focus);\n      color: var(--mdx-comp-textarea-input-color-focus);\n    }\n\n    .asterisk {\n      color: var(--mdx-comp-textarea-asterisk-color-focus);\n    }\n\n    .textarea__label-text {\n      color: var(--mdx-comp-textarea-label-color-focus);\n    }\n  }\n}\n\n:host([required]) .asterisk {\n  color: var(--mdx-comp-textarea-asterisk-color-default);\n  margin-left: var(--mdx-comp-textarea-gap-label-asterisk);\n}\n\n:host([disabled]) .asterisk {\n  color: var(--mdx-comp-textarea-asterisk-color-disabled);\n}\n\n:host([disabled]) .textarea {\n  &__label-text {\n    color: var(--mdx-comp-textarea-label-color-disabled);\n  }\n\n  &__field {\n    background-color: var(--mdx-comp-textarea-background-color-disabled);\n    color: var(--mdx-comp-textarea-input-color-disabled);\n    box-shadow: var(--mdx-comp-textarea-box-shadow-disabled);\n  }\n\n  &__field::placeholder {\n    color: var(--mdx-comp-textarea-placeholder-color-disabled);\n    background-color: var(--mdx-comp-textarea-background-color-disabled);\n  }\n\n  &__hint,\n  &__error-message {\n    color: var(--mdx-comp-textarea-hint-counter-color-disabled);\n  }\n}\n\n:host([error]) .textarea {\n  &__field {\n    background-color: var(--mdx-comp-textarea-background-color-error);\n    border-color: var(--mdx-comp-textarea-border-color-error);\n    box-shadow: var(--mdx-comp-textarea-box-shadow-error);\n    color: var(--mdx-comp-textarea-input-color-error);\n\n    &::placeholder {\n      color: var(--mdx-comp-textarea-placeholder-color-error);\n    }\n  }\n\n  &__label-text {\n    color: var(--mdx-comp-textarea-label-color-error);\n  }\n}\n","import { Component, Event, EventEmitter, Listen, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'mdx-textarea',\n  styleUrl: 'textarea.scss',\n  shadow: true,\n})\nexport class Textarea {\n  @Event()\n  inputChange: EventEmitter<{ input: string }>;\n\n  @Prop()\n  disabled = false;\n\n  @Prop()\n  required = false;\n\n  @Prop()\n  label!: string;\n\n  @Prop()\n  value = '';\n\n  @Prop()\n  placeholder = '';\n\n  @Prop()\n  hint?: string;\n\n  @Prop()\n  error?: string;\n\n  @Prop()\n  counter?: number;\n\n  @State()\n  focused = false;\n\n  @State()\n  keyboardEvent = false;\n\n  @Listen('click', { capture: true, target: 'window' })\n  handleClick() {\n    this.keyboardEvent = false;\n  }\n\n  @Listen('keydown', { capture: true, target: 'window' })\n  handleKeyDown() {\n    this.keyboardEvent = true;\n  }\n\n  private handleValue(e: Event) {\n    const v = (e.currentTarget as HTMLTextAreaElement).value;\n    if (this.counter && (v.length || 0) > this.counter) {\n      this.value = v.slice(0, Math.min(v.length, this.counter));\n      (e.currentTarget as HTMLTextAreaElement).value = this.value;\n    } else {\n      this.value = v;\n    }\n    this.inputChange.emit({ input: this.value });\n  }\n\n  render() {\n    return (\n      <label class={`textarea ${this.focused && 'textarea--focused'}`}>\n        <div class=\"textarea__label-text\">\n          {this.label} {this.required && <span class=\"asterisk\">*</span>}\n        </div>\n        <textarea\n          class=\"textarea__field\"\n          onFocus={() => this.keyboardEvent && (this.focused = true)}\n          onBlur={() => (this.focused = false)}\n          onInput={(e) => {\n            this.handleValue(e);\n            const t = e.currentTarget as HTMLTextAreaElement;\n            t.style.height = '0';\n            const scrollHeight = t.scrollHeight;\n            t.style.height = `clamp(var(--mdx-comp-textarea-sizing-vertical-box-min),\n              ${scrollHeight}px, var(--mdx-comp-textarea-sizing-vertical-box-max))`;\n          }}\n          required={this.required}\n          placeholder={this.placeholder}\n          disabled={this.disabled}\n          value={this.value}\n        />\n        <div class=\"textarea__information-wrapper\">\n          <div>\n            {this.hint && (typeof this.error === 'undefined' || this.error === '') && (\n              <span class=\"textarea__hint\">{this.hint}</span>\n            )}\n            {this.error && <mdx-error-hint class=\"textarea__error-message\" text={this.error} />}\n          </div>\n          {this.counter && this.counter > 0 && (\n            <span class=\"textarea__counter\">\n              {this.value.length} / {this.counter}\n            </span>\n          )}\n        </div>\n      </label>\n    );\n  }\n}\n"],"version":3}