{"version":3,"names":["tabBarCss","MdxTabBarStyle0","SCROLL_AMOUNT","TabBar","this","toggleChevronVisibility","ul","tabs","chevronLeft","_a","host","shadowRoot","querySelector","chevronRight","_b","currentScroll","Math","ceil","_c","getBoundingClientRect","width","scrollLeft","style","visibility","scrollWidth","onClickChevronRight","scroll","left","behavior","setTimeout","onClickChevronLeft","componentDidRender","componentDidLoad","preSelectedTab","Array","from","querySelectorAll","find","tab","disabled","active","render","h","Host","key","class","onClick","size","ICON_SIZES","XS"],"sources":["src/components/tab-bar/tab-bar.scss?tag=mdx-tab-bar&encapsulation=shadow","src/components/tab-bar/tab-bar.tsx"],"sourcesContent":[":host .tab-bar {\n  box-sizing: border-box;\n  position: relative;\n  background-color: var(--mdx-comp-tabs-background-color-default);\n\n  &__tabs {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    overflow-x: hidden;\n    border-bottom-style: solid;\n    background-color: var(--mdx-comp-tabs-background-color-default);\n    border-bottom-width: var(--mdx-comp-tabs-border-width-bottom-default);\n    border-top-width: var(--mdx-comp-tabs-border-width-top-default);\n    border-left-width: var(--mdx-comp-tabs-border-width-left-default);\n    border-right-width: var(--mdx-comp-tabs-border-width-right-default);\n    border-color: var(--mdx-comp-tabs-border-color-default);\n  }\n\n  &__chevron {\n    z-index: 20;\n    position: absolute;\n    height: 100%;\n    cursor: pointer;\n    visibility: hidden;\n    color: var(--mdx-comp-tabs-scroll-element-icon-color-default);\n    &:hover {\n      color: var(--mdx-comp-tabs-scroll-element-icon-color-hover);\n    }\n\n    &__left {\n      left: 0;\n      padding-left: var(--mdx-comp-tabs-padding-scroll-element-left-left-desktop);\n      padding-right: var(--mdx-comp-tabs-padding-scroll-element-left-right-desktop);\n      background-image: linear-gradient(\n        to left,\n        rgba(255, 255, 255, 0) 0%,\n        var(--mdx-comp-tabs-background-color-default) var(--mdx-comp-tabs-sizing-scroll-element-gradient-desktop),\n        var(--mdx-comp-tabs-background-color-default) 100%\n      );\n\n      @media only screen and (max-width: 768px) {\n        padding-left: var(--mdx-comp-tabs-padding-scroll-element-left-left-mobile);\n        padding-right: var(--mdx-comp-tabs-padding-scroll-element-left-right-mobile);\n        background-image: linear-gradient(\n          to left,\n          rgba(255, 255, 255, 0) 0%,\n          var(--mdx-comp-tabs-background-color-default) var(--mdx-comp-tabs-sizing-scroll-element-gradient-mobile),\n          var(--mdx-comp-tabs-background-color-default) 100%\n        );\n      }\n    }\n\n    &__right {\n      right: 0;\n      top: 0;\n      padding-left: var(--mdx-comp-tabs-padding-scroll-element-right-left-desktop);\n      padding-right: var(--mdx-comp-tabs-padding-scroll-element-right-right-desktop);\n      background-image: linear-gradient(\n        to right,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 1) var(--mdx-comp-tabs-sizing-scroll-element-gradient-desktop),\n        rgba(255, 255, 255, 1) 100%\n      );\n\n      @media only screen and (max-width: 768px) {\n        padding-left: var(--mdx-comp-tabs-padding-scroll-element-left-left-mobile);\n        padding-right: var(--mdx-comp-tabs-padding-scroll-element-left-right-mobile);\n        background-image: linear-gradient(\n          to right,\n          rgba(255, 255, 255, 0) 0%,\n          rgba(255, 255, 255, 1) var(--mdx-comp-tabs-sizing-scroll-element-gradient-mobile),\n          rgba(255, 255, 255, 1) 100%\n        );\n      }\n    }\n  }\n}\n\n:host([fill-width]) {\n  ::slotted(*) {\n    flex-grow: 1;\n    overflow-x: hidden;\n    width: 100%;\n  }\n  .tab-bar__tabs {\n    justify-content: space-evenly;\n  }\n}\n","import { Component, Element, Host, Prop, h } from '@stencil/core';\nimport { ICON_SIZES } from '../icons/exports';\n\nconst SCROLL_AMOUNT = 200;\n\n/**\n * @slot - Slot for tab elements\n */\n@Component({\n  tag: 'mdx-tab-bar',\n  styleUrl: 'tab-bar.scss',\n  shadow: true,\n})\nexport class TabBar {\n  @Prop()\n  fillWidth: boolean;\n\n  @Prop()\n  preSelectedTab: HTMLMdxTabElementElement['tab'];\n\n  @Element()\n  host: HTMLMdxTabBarElement;\n\n  private toggleChevronVisibility = () => {\n    const ul = this.tabs;\n    const chevronLeft = this.host.shadowRoot?.querySelector<HTMLElement>('.tab-bar__chevron__left');\n    const chevronRight = this.host.shadowRoot?.querySelector<HTMLElement>('.tab-bar__chevron__right');\n    const currentScroll = Math.ceil((ul?.getBoundingClientRect()?.width || 0) + (ul?.scrollLeft || 0));\n\n    if (!ul || !chevronLeft || !chevronRight) {\n      return;\n    }\n\n    if (ul?.scrollLeft > 0) {\n      chevronLeft.style.visibility = 'visible';\n    } else {\n      chevronLeft.style.visibility = 'hidden';\n    }\n\n    if (currentScroll < ul.scrollWidth) {\n      chevronRight.style.visibility = 'visible';\n    } else {\n      chevronRight.style.visibility = 'hidden';\n    }\n  };\n\n  private get tabs() {\n    return this.host.shadowRoot?.querySelector('.tab-bar__tabs');\n  }\n\n  private onClickChevronRight = () => {\n    const ul = this.tabs;\n    ul?.scroll({\n      left: ul.scrollLeft + SCROLL_AMOUNT,\n      behavior: 'smooth',\n    });\n\n    setTimeout(() => this.toggleChevronVisibility(), 300);\n  };\n\n  private onClickChevronLeft = () => {\n    const ul = this.tabs;\n    ul?.scroll({\n      left: ul.scrollLeft - SCROLL_AMOUNT,\n      behavior: 'smooth',\n    });\n\n    setTimeout(() => this.toggleChevronVisibility(), 300);\n  };\n\n  componentDidRender() {\n    this.toggleChevronVisibility();\n  }\n\n  componentDidLoad() {\n    const preSelectedTab = Array.from(this.host.querySelectorAll('mdx-tab-element')).find(\n      (tab) => tab.tab === this.preSelectedTab,\n    );\n\n    if (preSelectedTab && !preSelectedTab.disabled) {\n      preSelectedTab.active = true;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"tab-bar\">\n          <mdx-icon-chevron-left\n            onClick={this.onClickChevronLeft}\n            class=\"tab-bar__chevron tab-bar__chevron__left\"\n            size={ICON_SIZES.XS}\n          />\n          <div class=\"tab-bar__tabs\">\n            <slot></slot>\n          </div>\n          <mdx-icon-chevron-right\n            onClick={this.onClickChevronRight}\n            class=\"tab-bar__chevron tab-bar__chevron__right\"\n            size={ICON_SIZES.XS}\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"6FAAA,MAAMA,EAAY,4kFAClB,MAAAC,EAAeD,ECEf,MAAME,EAAgB,I,MAUTC,EAAM,M,yBAUTC,KAAAC,wBAA0B,K,UAChC,MAAMC,EAAKF,KAAKG,KAChB,MAAMC,GAAcC,EAAAL,KAAKM,KAAKC,cAAU,MAAAF,SAAA,SAAAA,EAAEG,cAA2B,2BACrE,MAAMC,GAAeC,EAAAV,KAAKM,KAAKC,cAAU,MAAAG,SAAA,SAAAA,EAAEF,cAA2B,4BACtE,MAAMG,EAAgBC,KAAKC,QAAMC,EAAAZ,IAAE,MAAFA,SAAE,SAAFA,EAAIa,2BAAuB,MAAAD,SAAA,SAAAA,EAAEE,QAAS,KAAMd,IAAE,MAAFA,SAAE,SAAFA,EAAIe,aAAc,IAE/F,IAAKf,IAAOE,IAAgBK,EAAc,CACxC,M,CAGF,IAAIP,IAAE,MAAFA,SAAE,SAAFA,EAAIe,YAAa,EAAG,CACtBb,EAAYc,MAAMC,WAAa,S,KAC1B,CACLf,EAAYc,MAAMC,WAAa,Q,CAGjC,GAAIR,EAAgBT,EAAGkB,YAAa,CAClCX,EAAaS,MAAMC,WAAa,S,KAC3B,CACLV,EAAaS,MAAMC,WAAa,Q,GAQ5BnB,KAAAqB,oBAAsB,KAC5B,MAAMnB,EAAKF,KAAKG,KAChBD,IAAE,MAAFA,SAAE,SAAFA,EAAIoB,OAAO,CACTC,KAAMrB,EAAGe,WAAanB,EACtB0B,SAAU,WAGZC,YAAW,IAAMzB,KAAKC,2BAA2B,IAAI,EAG/CD,KAAA0B,mBAAqB,KAC3B,MAAMxB,EAAKF,KAAKG,KAChBD,IAAE,MAAFA,SAAE,SAAFA,EAAIoB,OAAO,CACTC,KAAMrB,EAAGe,WAAanB,EACtB0B,SAAU,WAGZC,YAAW,IAAMzB,KAAKC,2BAA2B,IAAI,E,uDArBvD,QAAYE,G,MACV,OAAOE,EAAAL,KAAKM,KAAKC,cAAU,MAAAF,SAAA,SAAAA,EAAEG,cAAc,iB,CAuB7C,kBAAAmB,GACE3B,KAAKC,yB,CAGP,gBAAA2B,GACE,MAAMC,EAAiBC,MAAMC,KAAK/B,KAAKM,KAAK0B,iBAAiB,oBAAoBC,MAC9EC,GAAQA,EAAIA,MAAQlC,KAAK6B,iBAG5B,GAAIA,IAAmBA,EAAeM,SAAU,CAC9CN,EAAeO,OAAS,I,EAI5B,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,WACTH,EAAA,yBAAAE,IAAA,2CACEE,QAAS1C,KAAK0B,mBACde,MAAM,0CACNE,KAAMC,EAAWC,KAEnBP,EAAA,OAAAE,IAAA,2CAAKC,MAAM,iBACTH,EAAA,QAAAE,IAAA,8CAEFF,EAAA,0BAAAE,IAAA,2CACEE,QAAS1C,KAAKqB,oBACdoB,MAAM,2CACNE,KAAMC,EAAWC,M"}