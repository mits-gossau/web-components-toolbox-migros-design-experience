{"version":3,"names":["filterCss","MdxFilterStyle0","Filter","selectedItemsChanged","this","host","querySelectorAll","forEach","checkbox","checked","_a","selectedItems","filterId","find","item","value","undefined","handleOutsideClick","event","open","contains","target","selectButtonClickHandler","toggleCheckboxHandler","detail","Object","assign","filter","_b","_c","label","filterChanged","emit","selectClearHandler","filterFlyoutCloseHandler","handleSearchInput","inputValue","currentTarget","toLowerCase","includes","style","display","getSelectedFiltersCount","length","values","reduce","acc","curr","componentWillLoad","connectedCallback","parseAttribute","render","isFilterHidden","h","Host","buttonSelectLabel","clearButtonSelectAriaLabel","flat","map","role","headerTitle","closeButtonAriaLabel","slot","size","BADGE_SIZES","MD","variant","BADGE_VARIANTS","SECONDARY","as","LINK_AS","BUTTON","type","BUTTON_TYPE","LINK_VARIANTS","STANDALONE","onClick","selectAllLinkText","width","height","viewBox","fill","xmlns","cx","cy","r","resetLinkText","class","searchOpen","searchIconAriaLabel","ICON_SIZES","XS","placeholder","onInput","searchValue","SUBMIT","filterSubmit","submitButtonText"],"sources":["src/components/filter/filter.scss?tag=mdx-filter&encapsulation=shadow","src/components/filter/filter.tsx"],"sourcesContent":[":host {\n  position: relative;\n  display: block;\n  width: var(--mdx-comp-filter-flyout-sizing-width);\n\n  .filter-search-icon {\n    all: unset;\n    color: var(--mdx-comp-filter-flyout-elements-header-icon-color-default);\n    cursor: pointer;\n\n    &:focus-visible {\n      border-radius: var(--mdx-comp-keyboard-focus-border-radius-default);\n      outline-color: var(--mdx-comp-keyboard-focus-color-default);\n      outline-style: solid;\n      outline-width: var(--mdx-comp-keyboard-focus-border-width-default);\n      outline-offset: 2px;\n    }\n\n    :hover {\n      color: var(--mdx-comp-filter-flyout-elements-header-icon-color-hover);\n    }\n  }\n\n  mdx-filter-flyout {\n    position: absolute;\n    width: var(--mdx-comp-filter-flyout-sizing-width);\n    max-height: 0;\n    overflow: hidden;\n    transition: var(--mdx-comp-flyout-transition-expand-collapse);\n  }\n}\n\n:host([open]) mdx-filter-flyout {\n  max-height: 100vh;\n  box-shadow: var(--mdx-comp-flyout-box-shadow-default);\n  transition: var(--mdx-comp-flyout-transition-expand-collapse);\n}\n\n:host([open]) .filter-search-icon {\n  color: var(--mdx-comp-filter-flyout-elements-header-icon-color-hover);\n}\n\n:host([is-filter-hidden]) {\n  display: none;\n}\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { parseAttribute } from '../../utils';\nimport { BADGE_SIZES, BADGE_VARIANTS } from '../badge/exports';\nimport { BUTTON_TYPE } from '../button/exports';\nimport { ICON_SIZES } from '../icons/exports';\nimport { LINK_AS, LINK_VARIANTS } from '../link/exports';\nimport { SelectedItems } from './export';\n\n@Component({\n  tag: 'mdx-filter',\n  styleUrl: 'filter.scss',\n  shadow: true,\n})\nexport class Filter {\n  @Prop({ reflect: true })\n  open = false;\n\n  @Prop({ reflect: true })\n  isFilterHidden?: boolean = false;\n\n  @Prop()\n  closeButtonAriaLabel!: string;\n\n  @Prop()\n  buttonSelectLabel: string;\n\n  @Prop()\n  clearButtonSelectAriaLabel!: string;\n\n  @Prop()\n  searchIconAriaLabel!: string;\n\n  @Prop()\n  headerTitle: string;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  selectAllLinkText: string;\n\n  @Prop()\n  resetLinkText: string;\n\n  @Prop()\n  selectedItems: SelectedItems = {};\n\n  @Prop()\n  filterId = 'filter';\n\n  @State()\n  searchOpen = false;\n\n  @State()\n  searchValue: string;\n\n  @Element()\n  host: HTMLMdxFilterElement;\n\n  @Event()\n  filterChanged: EventEmitter<typeof this.selectedItems>;\n\n  @Event()\n  filterSubmit: EventEmitter<typeof this.selectedItems>;\n\n  @Watch('selectedItems')\n  selectedItemsChanged() {\n    this.host.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = this.selectedItems[this.filterId]?.find((item) => item.value === checkbox.value) !== undefined;\n    });\n  }\n\n  @Listen('click', { target: 'window' })\n  handleOutsideClick(event: MouseEvent) {\n    if (this.open && !this.host.contains(event.target as Node)) {\n      this.open = false;\n    }\n  }\n\n  @Listen('selectButtonClick')\n  selectButtonClickHandler() {\n    this.open = !this.open;\n  }\n\n  @Listen('toggleCheckbox')\n  toggleCheckboxHandler({ detail }: CustomEvent<{ checked: boolean; value: string; label: string }>) {\n    {\n      if (!detail.checked) {\n        this.selectedItems = {\n          ...this.selectedItems,\n          [this.filterId]: this.selectedItems[this.filterId]?.filter((item) => item.value !== detail.value),\n        };\n      } else if (detail.checked && !this.selectedItems[this.filterId]?.find((item) => item.value === detail.value)) {\n        this.selectedItems = {\n          ...this.selectedItems,\n          [this.filterId]: [...(this.selectedItems[this.filterId] ?? []), { label: detail.label, value: detail.value }],\n        };\n      }\n    }\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  @Listen('selectClear')\n  selectClearHandler() {\n    this.selectedItems = { [this.filterId]: [] };\n    this.host.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = false;\n    });\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  @Listen('filterFlyoutClose')\n  filterFlyoutCloseHandler() {\n    this.open = false;\n  }\n\n  private handleSearchInput(event: Event) {\n    const inputValue = (event.currentTarget as HTMLInputElement).value;\n    this.host.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      if (checkbox.label.toLowerCase().includes(inputValue.toLowerCase())) {\n        checkbox.style.display = 'block';\n      } else {\n        checkbox.style.display = 'none';\n      }\n    });\n  }\n\n  private getSelectedFiltersCount(filterId?: string) {\n    return filterId !== undefined\n      ? this.selectedItems[filterId]?.length ?? 0\n      : Object.values(this.selectedItems).reduce((acc, curr) => acc + curr.length, 0);\n  }\n\n  componentWillLoad() {\n    this.selectedItemsChanged();\n  }\n\n  connectedCallback() {\n    this.selectedItems = parseAttribute(this.host, 'selected-items', this.selectedItems);\n  }\n\n  render() {\n    return !this.isFilterHidden ? (\n      <Host>\n        <mdx-filter-select\n          label={this.buttonSelectLabel}\n          clear-button-aria-label={this.clearButtonSelectAriaLabel}\n          selectedItems={Object.values(this.selectedItems)\n            .flat()\n            .map((item) => item.label)}\n          open={this.open}\n        />\n        <mdx-filter-flyout open={this.open} role=\"dialog\" aria-label={this.headerTitle}>\n          <mdx-filter-flyout-header closeButtonAriaLabel={this.closeButtonAriaLabel}>\n            <h2 slot=\"header\">{this.headerTitle}</h2>\n            {this.getSelectedFiltersCount(this.filterId) > 0 ? (\n              <mdx-badge slot=\"header\" size={BADGE_SIZES.MD} variant={BADGE_VARIANTS.SECONDARY}>\n                {this.selectedItems[this.filterId].length}\n              </mdx-badge>\n            ) : null}\n          </mdx-filter-flyout-header>\n          <mdx-filter-flyout-list>\n            <mdx-link\n              slot=\"controls\"\n              as={LINK_AS.BUTTON}\n              type={BUTTON_TYPE.BUTTON}\n              variant={LINK_VARIANTS.STANDALONE}\n              onClick={() => {\n                this.host.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n                  checkbox.checked = true;\n                  if (this.filterId === undefined) {\n                    return;\n                  }\n                  if (!this.selectedItems[this.filterId]?.find((item) => item.value === checkbox.value)) {\n                    this.selectedItems = {\n                      ...this.selectedItems,\n                      [this.filterId]: [\n                        ...(this.selectedItems[this.filterId] ?? []),\n                        { label: checkbox.label, value: checkbox.value ?? '' },\n                      ],\n                    };\n                  }\n                });\n                this.filterChanged.emit(this.selectedItems);\n              }}\n            >\n              {this.selectAllLinkText}\n            </mdx-link>\n            <svg width=\"2\" height=\"2\" slot=\"controls\" viewBox=\"0 0 2 2\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"currentColor\" />\n            </svg>\n            <mdx-link\n              slot=\"controls\"\n              as={LINK_AS.BUTTON}\n              type={BUTTON_TYPE.BUTTON}\n              variant={LINK_VARIANTS.STANDALONE}\n              onClick={() => this.selectClearHandler()}\n            >\n              {this.resetLinkText}\n            </mdx-link>\n            <button\n              slot=\"search-icon\"\n              class=\"filter-search-icon\"\n              onClick={() => (this.searchOpen = !this.searchOpen)}\n              aria-label={this.searchIconAriaLabel}\n            >\n              <mdx-icon-search slot=\"search-icon\" size={ICON_SIZES.XS} />\n            </button>\n            {this.searchOpen ? (\n              <mdx-input\n                slot=\"search\"\n                label=\"\"\n                placeholder=\"Suchen...\"\n                onInput={(event) => this.handleSearchInput(event)}\n                value={this.searchValue}\n              />\n            ) : null}\n            <slot slot=\"items\" />\n          </mdx-filter-flyout-list>\n          <mdx-filter-flyout-footer>\n            <mdx-button\n              full-width\n              slot=\"button\"\n              type={BUTTON_TYPE.SUBMIT}\n              onClick={() => {\n                this.filterSubmit.emit(this.selectedItems);\n                this.open = false;\n              }}\n            >\n              {this.submitButtonText}\n            </mdx-button>\n          </mdx-filter-flyout-footer>\n        </mdx-filter-flyout>\n      </Host>\n    ) : null;\n  }\n}\n"],"mappings":"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"}