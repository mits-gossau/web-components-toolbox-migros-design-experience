{"version":3,"names":["filterCategoryCss","FilterCat","window","innerWidth","toggleCheckboxHandler","event","this","selectedCategoryId","undefined","detail","checked","selectedItems","Object","assign","_a","filter","item","value","_b","find","_c","label","filterChanged","emit","handleOutsideClick","open","hostElement","contains","target","filterFlyoutCloseHandler","categoryClickHandler","view","categoryId","categoryFilters","selectedCategoryItem","childNodes","hostFiltersPlaceholder","replaceChildren","forEach","append","cloneNode","onWindowResize","isMobile","shadowRoot","querySelector","clearFilterHandler","querySelectorAll","checkbox","selectAll","componentDidRender","category","getAttribute","numberOfSelectedFilters","getSelectedFiltersCount","removeAttribute","setAttribute","toString","Array","from","length","values","reduce","acc","curr","render","selectedFilterCount","h","Host","class","onClick","ariaLabel","buttonLabel","size","ICON_SIZES","SM","role","headerTitle","closeButtonAriaLabel","slot","BADGE_SIZES","MD","variant","BADGE_VARIANTS","SECONDARY","LINK_VARIANTS","STANDALONE","resetAllLinkText","name","selectAllLinkText","width","height","viewBox","fill","xmlns","cx","cy","r","resetLinkText","id","filterSubmit","submitButtonText","BUTTON_VARIANTS","TERTIARY","backButtonText"],"sources":["src/components/filter/filter-category/filter-category.scss?tag=mdx-filter-category&encapsulation=shadow","src/components/filter/filter-category/filter-category.tsx"],"sourcesContent":[":host {\n  .filter-category {\n    &__toggle-button {\n      display: block;\n      margin-bottom: var(--mdx-comp-select-gap-content-below);\n    }\n\n    &__dot-spacer {\n      color: var(--mdx-comp-filter-flyout-elements-header-dot-spacer-color-default);\n    }\n  }\n\n  mdx-filter-flyout {\n    position: absolute;\n    width: var(--mdx-comp-filter-flyout-sizing-width);\n    max-height: 0;\n    overflow: hidden;\n    transition: var(--mdx-comp-flyout-transition-expand-collapse);\n  }\n\n  .filters,\n  .categories {\n    overflow: hidden auto;\n  }\n}\n\n:host([view='category']) {\n  .filters {\n    display: none;\n  }\n}\n:host([view='filters']) {\n  .categories {\n    display: none;\n  }\n}\n\n:host([open]) mdx-filter-flyout {\n  max-height: 100vh;\n  box-shadow: var(--mdx-comp-flyout-box-shadow-default);\n  transition: var(--mdx-comp-flyout-transition-expand-collapse);\n}\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\nimport { BADGE_SIZES, BADGE_VARIANTS } from '../../badge/exports';\nimport { BUTTON_VARIANTS } from '../../button/exports';\nimport { ICON_SIZES } from '../../icons/exports';\nimport { LINK_VARIANTS } from '../../link/exports';\n\n/**\n * @slot categories - a list of filter categories (mdx-filter-category-item)\n */\n\n@Component({\n  tag: 'mdx-filter-category',\n  styleUrl: 'filter-category.scss',\n  shadow: true,\n})\nexport class FilterCat {\n  @Prop({ reflect: true })\n  open = false;\n\n  @Prop({ reflect: true })\n  view: 'category' | 'filters' = 'category';\n\n  @Prop()\n  buttonLabel: string;\n\n  @Prop()\n  closeButtonAriaLabel: string;\n\n  @Prop()\n  headerTitle: string;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  backButtonText: string;\n\n  @Prop()\n  resetLinkText: string;\n\n  @Prop()\n  resetAllLinkText: string;\n\n  @Prop()\n  selectAllLinkText: string;\n\n  @State()\n  selectedItems: Record<string, { label: string; value?: string }[]> = {};\n\n  @State()\n  selectedCategoryId?: string;\n\n  @State()\n  isMobile = window.innerWidth <= 768;\n\n  @Element()\n  hostElement: HTMLMdxFilterCategoryElement;\n\n  @Event()\n  filterChanged: EventEmitter<typeof this.selectedItems>;\n\n  @Event()\n  filterSubmit: EventEmitter<typeof this.selectedItems>;\n\n  @Listen('toggleCheckbox')\n  toggleCheckboxHandler(event: CustomEvent<{ checked: boolean; value?: string; label: string }>) {\n    if (this.selectedCategoryId === undefined) {\n      return;\n    }\n    if (!event.detail.checked) {\n      this.selectedItems = {\n        ...this.selectedItems,\n        [this.selectedCategoryId]: this.selectedItems[this.selectedCategoryId]?.filter(\n          (item) => item.value !== event.detail.value,\n        ),\n      };\n    } else if (\n      event.detail.checked &&\n      !this.selectedItems[this.selectedCategoryId]?.find((item) => item.value === event.detail.value)\n    ) {\n      this.selectedItems = {\n        ...this.selectedItems,\n        [this.selectedCategoryId]: [\n          ...(this.selectedItems[this.selectedCategoryId] ?? []),\n          { label: event.detail.label, value: event.detail.value },\n        ],\n      };\n    }\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  @Listen('click', { target: 'window' })\n  handleOutsideClick(event: MouseEvent) {\n    if (this.open && !this.hostElement.contains(event.target as Node)) {\n      this.open = false;\n    }\n  }\n\n  @Listen('filterFlyoutClose')\n  filterFlyoutCloseHandler() {\n    this.open = false;\n  }\n\n  @Listen('categoryClick')\n  categoryClickHandler(event: CustomEvent<{ categoryId: string }>) {\n    this.view = 'filters';\n    this.selectedCategoryId = event.detail.categoryId;\n\n    const categoryFilters = this.selectedCategoryItem?.childNodes;\n    if (categoryFilters) {\n      this.hostFiltersPlaceholder?.replaceChildren();\n      categoryFilters.forEach((filter) => {\n        this.hostFiltersPlaceholder?.append(filter.cloneNode(true));\n      });\n    }\n  }\n\n  @Listen('resize', { capture: true, target: 'window' })\n  onWindowResize() {\n    this.isMobile = window.innerWidth <= 768;\n  }\n\n  private get hostFiltersPlaceholder() {\n    return this.hostElement.shadowRoot?.querySelector('#filter_placeholder');\n  }\n\n  private clearFilterHandler(categoryId?: string) {\n    if (categoryId !== undefined) {\n      this.selectedItems = { ...this.selectedItems, [categoryId]: [] };\n    } else {\n      this.selectedItems = {};\n    }\n    this.hostFiltersPlaceholder?.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = false;\n    });\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  private selectAll() {\n    this.hostFiltersPlaceholder?.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = true;\n      if (this.selectedCategoryId === undefined) {\n        return;\n      }\n      if (!this.selectedItems[this.selectedCategoryId]?.find((item) => item.value === checkbox.value)) {\n        this.selectedItems = {\n          ...this.selectedItems,\n          [this.selectedCategoryId]: [\n            ...(this.selectedItems[this.selectedCategoryId] ?? []),\n            { label: checkbox.label, value: checkbox.value },\n          ],\n        };\n      }\n    });\n    this.filterChanged.emit(this.selectedItems);\n  }\n\n  componentDidRender() {\n    if (this.selectedCategoryId !== undefined) {\n      this.hostFiltersPlaceholder?.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n        checkbox.checked =\n          this.selectedCategoryId != undefined &&\n          !!this.selectedItems[this.selectedCategoryId]?.find((item) => item.value === checkbox.value);\n      });\n    } else {\n      this.hostElement?.querySelectorAll('mdx-filter-category-item').forEach((category) => {\n        const categoryId = category.getAttribute('category-id');\n        if (!categoryId) {\n          return;\n        }\n        const numberOfSelectedFilters = this.getSelectedFiltersCount(categoryId);\n        if (numberOfSelectedFilters === 0) {\n          category.removeAttribute('badge');\n          return;\n        }\n        category.setAttribute('badge', numberOfSelectedFilters.toString());\n      });\n    }\n  }\n\n  private get selectedCategoryItem() {\n    return this.selectedCategoryId !== undefined\n      ? Array.from(this.hostElement?.querySelectorAll('mdx-filter-category-item')).find(\n          (item) => item.getAttribute('category-id') === this.selectedCategoryId,\n        )\n      : undefined;\n  }\n\n  private getSelectedFiltersCount(categoryId?: string) {\n    return categoryId !== undefined\n      ? this.selectedItems[categoryId]?.length ?? 0\n      : Object.values(this.selectedItems).reduce((acc, curr) => acc + curr.length, 0);\n  }\n\n  render() {\n    const selectedFilterCount = this.getSelectedFiltersCount(this.selectedCategoryId);\n\n    return (\n      <Host>\n        {this.isMobile ? (\n          <mdx-icon-button\n            class=\"filter-category__toggle-button\"\n            onClick={() => (this.open = !this.open)}\n            aria-expanded={this.open ? 'true' : 'false'}\n            ariaLabel={this.buttonLabel}\n          >\n            <mdx-icon-sliders size={ICON_SIZES.SM} />\n          </mdx-icon-button>\n        ) : (\n          <mdx-button\n            class=\"filter-category__toggle-button\"\n            onClick={() => (this.open = !this.open)}\n            aria-expanded={this.open ? 'true' : 'false'}\n          >\n            <mdx-icon-sliders size={ICON_SIZES.SM} /> {this.buttonLabel}\n          </mdx-button>\n        )}\n        <mdx-filter-flyout open={this.open} role=\"dialog\" aria-label={this.headerTitle}>\n          <mdx-filter-flyout-header closeButtonAriaLabel={this.closeButtonAriaLabel}>\n            {this.selectedCategoryId === undefined ? (\n              <h2 slot=\"header\">{this.headerTitle}</h2>\n            ) : (\n              <h2 slot=\"header\">{this.selectedCategoryItem?.getAttribute('name')}</h2>\n            )}\n            {selectedFilterCount > 0 ? (\n              <mdx-badge slot=\"header\" size={BADGE_SIZES.MD} variant={BADGE_VARIANTS.SECONDARY}>\n                {selectedFilterCount}\n              </mdx-badge>\n            ) : null}\n          </mdx-filter-flyout-header>\n\n          <mdx-filter-flyout-list class=\"categories\">\n            <mdx-link slot=\"controls\" variant={LINK_VARIANTS.STANDALONE} onClick={() => this.clearFilterHandler()}>\n              {this.resetAllLinkText}\n            </mdx-link>\n            <slot name=\"categories\" slot=\"items\" />\n          </mdx-filter-flyout-list>\n          <mdx-filter-flyout-list class=\"filters\">\n            <mdx-link slot=\"controls\" variant={LINK_VARIANTS.STANDALONE} onClick={() => this.selectAll()}>\n              {this.selectAllLinkText}\n            </mdx-link>\n\n            <svg\n              class=\"filter-category__dot-spacer\"\n              width=\"2\"\n              height=\"2\"\n              slot=\"controls\"\n              viewBox=\"0 0 2 2\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"currentColor\" />\n            </svg>\n\n            <mdx-link\n              slot=\"controls\"\n              variant={LINK_VARIANTS.STANDALONE}\n              onClick={() => this.clearFilterHandler(this.selectedCategoryId)}\n            >\n              {this.resetLinkText}\n            </mdx-link>\n            <div id=\"filter_placeholder\" slot=\"items\"></div>\n          </mdx-filter-flyout-list>\n          <mdx-filter-flyout-footer>\n            <mdx-button\n              full-width\n              slot=\"button\"\n              onClick={() => {\n                this.filterSubmit.emit(this.selectedItems);\n                this.open = false;\n              }}\n            >\n              {this.submitButtonText}\n            </mdx-button>\n            {this.selectedCategoryId != undefined && (\n              <mdx-button\n                full-width\n                slot=\"button\"\n                variant={BUTTON_VARIANTS.TERTIARY}\n                onClick={() => {\n                  this.selectedCategoryId = undefined;\n                  this.view = 'category';\n                }}\n              >\n                {this.backButtonText}\n              </mdx-button>\n            )}\n          </mdx-filter-flyout-footer>\n        </mdx-filter-flyout>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}