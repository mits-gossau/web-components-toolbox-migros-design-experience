{"version":3,"names":["checkboxCss","MdxCheckboxStyle0","Checkbox","CHECKBOX_VARIANTS","WITH_BORDER","render","h","key","class","type","name","this","disabled","checked","onChange","event","target","toggleCheckbox","emit","value","label","size","ICON_SIZES","XS","indicator","undefined","host","querySelector","error","text","filterCategoryCss","MdxFilterCategoryStyle0","FilterCat","window","innerWidth","handleOutsideClick","path","composedPath","includes","open","selectedCategoryId","view","toggleCheckboxHandler","detail","selectedItems","Object","assign","_a","filter","item","_b","find","_c","_d","filterCategoryChanged","filterFlyoutCloseHandler","categoryClickHandler","categoryId","categoryFilters","selectedCategoryItem","childNodes","hostFiltersPlaceholder","replaceChildren","forEach","append","cloneNode","onWindowResize","isMobile","shadowRoot","clearFilterHandler","querySelectorAll","checkbox","selectAll","componentDidRender","category","getAttribute","numberOfSelectedFilters","getSelectedFiltersCount","removeAttribute","setAttribute","toString","Array","from","length","values","reduce","acc","curr","connectedCallback","parseAttribute","selectedFilterCount","Host","onClick","ariaLabel","buttonLabel","SM","role","headerTitle","closeButtonAriaLabel","slot","BADGE_SIZES","MD","variant","BADGE_VARIANTS","SECONDARY","LINK_VARIANTS","STANDALONE","as","LINK_AS","BUTTON","BUTTON_TYPE","resetAllLinkText","selectAllLinkText","width","height","viewBox","fill","xmlns","cx","cy","r","resetLinkText","id","SUBMIT","filterSubmit","submitButtonText","BUTTON_VARIANTS","TERTIARY","backButtonText","filterCategoryItemCss","MdxFilterCategoryItemStyle0","FilterCategory","categoryClick","badge"],"sources":["src/components/checkbox/checkbox.scss?tag=mdx-checkbox&encapsulation=shadow","src/components/checkbox/checkbox.tsx","src/components/filter/filter-category/filter-category.scss?tag=mdx-filter-category&encapsulation=shadow","src/components/filter/filter-category/filter-category.tsx","src/components/filter/filter-flyout/filter-category-item/filter-category-item.scss?tag=mdx-filter-category-item&encapsulation=shadow","src/components/filter/filter-flyout/filter-category-item/filter-category-item.tsx"],"sourcesContent":[":host .checkbox {\n  box-sizing: border-box;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font: var(--mdx-comp-checkbox-font-label);\n\n  &__wrapper {\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: var(--mdx-comp-checkbox-font-label-line-height);\n  }\n\n  &__label-text {\n    padding-left: var(--mdx-comp-checkbox-gap-box-label);\n  }\n\n  &__input {\n    cursor: pointer;\n    border-style: solid;\n    border-radius: var(--mdx-comp-checkbox-border-radius-box);\n    border-width: var(--mdx-comp-checkbox-border-width-default);\n    border-color: var(--mdx-comp-checkbox-unchecked-input-border-default);\n    min-height: var(--mdx-comp-checkbox-sizing-default);\n    min-width: var(--mdx-comp-checkbox-sizing-default);\n    margin: 0;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    outline: none;\n    background-color: var(--mdx-comp-checkbox-unchecked-input-background-default);\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-unchecked-input-background-hover);\n      border-color: var(--mdx-comp-checkbox-unchecked-input-border-hover);\n    }\n\n    &:focus-visible {\n      outline-style: solid;\n      border-radius: var(--mdx-comp-keyboard-focus-border-radius-default);\n      outline-width: var(--mdx-comp-keyboard-focus-border-width-default);\n      outline-color: var(--mdx-comp-keyboard-focus-color-default);\n    }\n  }\n\n  &__icon {\n    opacity: 0;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    color: var(--mdx-comp-checkbox-checked-input-icon-border-color-default);\n    min-height: var(--mdx-comp-checkbox-sizing-default);\n    min-width: var(--mdx-comp-checkbox-sizing-default);\n    transition: var(--mdx-comp-checkbox-transition-fade-icon-in-out);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-input-icon-border-color-hover);\n    }\n  }\n\n  &__description {\n    font: var(--mdx-comp-checkbox-font-description);\n    color: var(--mdx-comp-checkbox-unchecked-description-color-default);\n    margin-top: var(--mdx-comp-checkbox-gap-label-description);\n    padding-left: calc(var(--mdx-comp-checkbox-sizing-default) + var(--mdx-comp-checkbox-gap-box-label));\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-unchecked-description-color-hover);\n    }\n  }\n\n  &__label {\n    transition: var(--mdx-comp-checkbox-transition-fade-icon-in-out);\n  }\n\n  &__indicator {\n    margin-left: var(--mdx-comp-checkbox-gap-indicator-label);\n    color: var(--mdx-comp-checkbox-unchecked-indicator-color-default);\n    font: var(--mdx-comp-checkbox-font-indicator);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-indicator-color-hover);\n    }\n  }\n}\n\n:host([variant='border']) .checkbox {\n  &__label {\n    cursor: pointer;\n    border-style: solid;\n    border-width: var(--mdx-comp-checkbox-border-width-default);\n    border-color: var(--mdx-comp-checkbox-unchecked-border-color-default);\n    border-radius: var(--mdx-comp-checkbox-border-radius-default);\n    font: var(--mdx-comp-checkbox-font-label);\n    color: var(--mdx-comp-checkbox-unchecked-label-color-default);\n    padding: var(--mdx-comp-checkbox-padding-vertical-default) var(--mdx-comp-checkbox-padding-horizontal-default);\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-unchecked-background-color-hover);\n      border-color: var(--mdx-comp-checkbox-unchecked-border-color-hover);\n      border-width: var(--mdx-comp-checkbox-border-width-hover);\n    }\n  }\n}\n\n:host([variant='no-border']) .checkbox {\n  &__label {\n    cursor: pointer;\n    background-color: var(--mdx-comp-checkbox-unchecked-background-color-default);\n    color: var(--mdx-comp-checkbox-unchecked-label-color-default);\n    padding: var(--mdx-comp-checkbox-padding-vertical-default) var(--mdx-comp-checkbox-padding-horizontal-default)\n      var(--mdx-comp-checkbox-padding-vertical-default) 0;\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-unchecked-background-color-hover);\n      border-radius: var(--mdx-comp-checkbox-border-radius-default);\n    }\n  }\n}\n\n:host([checked]) .checkbox {\n  &__label {\n    border-color: var(--mdx-comp-checkbox-checked-border-color-default);\n    background-color: var(--mdx-comp-checkbox-checked-background-color-default);\n    color: var(--mdx-comp-checkbox-checked-label-color-default);\n\n    &:hover {\n      border-color: var(--mdx-comp-checkbox-checked-border-color-hover);\n      background-color: var(--mdx-comp-checkbox-checked-background-color-hover);\n      border-width: var(--mdx-comp-checkbox-border-width-hover);\n    }\n  }\n\n  &__input {\n    border-style: solid;\n    border-color: var(--mdx-comp-checkbox-checked-border-color-default);\n    border-width: var(--mdx-comp-checkbox-border-width-default);\n  }\n\n  &__description {\n    color: var(--mdx-comp-checkbox-checked-description-color-default);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-description-color-hover);\n    }\n  }\n\n  &__icon {\n    opacity: 1;\n  }\n\n  &__indicator {\n    color: var(--mdx-comp-checkbox-checked-indicator-color-default);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-indicator-color-hover);\n    }\n  }\n}\n\n:host([disabled]) .checkbox {\n  &__label {\n    background-color: var(--mdx-comp-checkbox-unchecked-background-color-disabled);\n    border-color: var(--mdx-comp-checkbox-unchecked-border-color-disabled);\n    border-width: var(--mdx-comp-checkbox-border-width-disabled);\n    color: var(--mdx-comp-checkbox-unchecked-label-color-disabled);\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-unchecked-background-color-disabled);\n      border-color: var(--mdx-comp-checkbox-unchecked-border-color-disabled);\n      color: var(--mdx-comp-checkbox-unchecked-label-color-disabled);\n    }\n  }\n\n  &__input {\n    background-color: var(--mdx-comp-checkbox-unchecked-input-background-disabled);\n    border-color: var(--mdx-comp-checkbox-unchecked-input-border-disabled);\n    border-width: var(--mdx-comp-checkbox-border-width-disabled);\n  }\n\n  &__description {\n    color: var(--mdx-comp-checkbox-checked-description-color-disabled);\n    background-color: var(--mdx-comp-checkbox-unchecked-background-color-disabled);\n\n    &:hover {\n      color: var(--mdx-comp-checkbox-checked-description-color-disabled);\n      background-color: var(--mdx-comp-checkbox-unchecked-background-color-disabled);\n    }\n  }\n  &__indicator {\n    color: var(--mdx-comp-checkbox-unchecked-indicator-color-disabled);\n  }\n}\n\n:host([disabled][checked]) .checkbox {\n  &__label {\n    border-color: var(--mdx-comp-checkbox-checked-border-color-disabled);\n    border-width: var(--mdx-comp-checkbox-border-width-disabled);\n    background-color: var(--mdx-comp-checkbox-checked-background-color-disabled);\n\n    &:hover {\n      background-color: var(--mdx-comp-checkbox-checked-background-color-default);\n      border-color: var(--mdx-comp-checkbox-checked-border-color-disabled);\n      border-width: var(--mdx-comp-checkbox-border-width-disabled);\n    }\n  }\n\n  &__input {\n    border-color: var(--mdx-comp-checkbox-checked-input-border-disabled);\n    background-color: var(--mdx-comp-checkbox-checked-input-background-disabled);\n    border-width: var(--mdx-comp-checkbox-border-width-disabled);\n  }\n\n  &__description {\n    color: var(--mdx-comp-checkbox-checked-description-color-disabled);\n    background-color: var(--mdx-comp-checkbox-checked-background-color-disabled);\n  }\n\n  &__icon {\n    color: var(--mdx-comp-checkbox-checked-input-icon-border-color-disabled);\n  }\n\n  &__indicator {\n    color: var(--mdx-comp-checkbox-checked-indicator-color-disabled);\n  }\n}\n\n:host([error]) .checkbox {\n  &__error-message {\n    margin-top: var(--mdx-comp-checkbox-gap-container-error);\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Prop } from '@stencil/core';\nimport { ICON_SIZES } from '../icons/exports';\nimport { CHECKBOX_VARIANTS } from './export';\n\n/**\n * @slot description - Slot for the description\n */\n@Component({\n  tag: 'mdx-checkbox',\n  styleUrl: 'checkbox.scss',\n  shadow: true,\n})\nexport class Checkbox {\n  @Element()\n  host: HTMLMdxCheckboxElement;\n\n  @Event()\n  toggleCheckbox: EventEmitter<{ checked: boolean; value: string; label: string }>;\n\n  @Prop({ reflect: true })\n  variant: (typeof CHECKBOX_VARIANTS)[keyof typeof CHECKBOX_VARIANTS] = CHECKBOX_VARIANTS.WITH_BORDER;\n\n  @Prop({ reflect: true })\n  label!: string;\n\n  @Prop()\n  name?: string;\n\n  @Prop()\n  error?: string;\n\n  @Prop({ reflect: true })\n  checked = false;\n\n  @Prop()\n  disabled = false;\n\n  @Prop()\n  indicator?: string | number;\n\n  @Prop({ reflect: true })\n  value: string;\n\n  render() {\n    return (\n      <div class=\"checkbox\">\n        <label class=\"checkbox__label\">\n          <div class=\"checkbox__wrapper\">\n            <input\n              class=\"checkbox__input\"\n              type=\"checkbox\"\n              name={this.name}\n              disabled={this.disabled}\n              checked={this.checked}\n              onChange={(event) => {\n                this.checked = (event.target as HTMLInputElement).checked;\n                this.toggleCheckbox.emit({ checked: this.checked, value: this.value, label: this.label });\n              }}\n              value={this.value}\n            />\n            <mdx-icon-check class=\"checkbox__icon\" size={ICON_SIZES.XS} />\n            <span class=\"checkbox__label-text\">{this.label}</span>\n            {this.indicator !== undefined ? <span class=\"checkbox__indicator\">{`(${this.indicator})`}</span> : null}\n          </div>\n          {this.host.querySelector('[slot=\"description\"]') && (\n            <span class=\"checkbox__description\">\n              <slot name=\"description\" />\n            </span>\n          )}\n        </label>\n        {this.error && <mdx-error-hint class=\"checkbox__error-message\" text={this.error} />}\n      </div>\n    );\n  }\n}\n",":host {\n  .filter-category {\n    &__toggle-button {\n      display: block;\n      margin-bottom: var(--mdx-comp-select-gap-content-below);\n    }\n\n    &__dot-spacer {\n      color: var(--mdx-comp-filter-flyout-elements-header-dot-spacer-color-default);\n    }\n  }\n\n  mdx-filter-flyout {\n    position: absolute;\n    width: var(--mdx-comp-filter-flyout-sizing-width);\n    max-height: 0;\n    overflow: hidden;\n    transition: var(--mdx-comp-flyout-transition-expand-collapse);\n  }\n\n  .filters,\n  .categories {\n    overflow: hidden auto;\n  }\n}\n\n:host([view='category']) {\n  .filters {\n    display: none;\n  }\n}\n:host([view='filters']) {\n  .categories {\n    display: none;\n  }\n}\n\n:host([open]) mdx-filter-flyout {\n  max-height: 100vh;\n  box-shadow: var(--mdx-comp-flyout-box-shadow-default);\n  transition: var(--mdx-comp-flyout-transition-expand-collapse);\n}\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\nimport { parseAttribute } from '../../../utils';\nimport { BADGE_SIZES, BADGE_VARIANTS } from '../../badge/exports';\nimport { BUTTON_TYPE, BUTTON_VARIANTS } from '../../button/exports';\nimport { ICON_SIZES } from '../../icons/exports';\nimport { LINK_AS, LINK_VARIANTS } from '../../link/exports';\nimport { SelectedItems } from '../export';\n\n/**\n * @slot categories - a list of filter categories (mdx-filter-category-item)\n */\n\n@Component({\n  tag: 'mdx-filter-category',\n  styleUrl: 'filter-category.scss',\n  shadow: true,\n})\nexport class FilterCat {\n  @Prop({ reflect: true })\n  open = false;\n\n  @Prop({ reflect: true })\n  view: 'category' | 'filters' = 'category';\n\n  @Prop()\n  buttonLabel: string;\n\n  @Prop()\n  closeButtonAriaLabel: string;\n\n  @Prop()\n  headerTitle: string;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  backButtonText: string;\n\n  @Prop()\n  resetLinkText: string;\n\n  @Prop()\n  resetAllLinkText: string;\n\n  @Prop()\n  selectAllLinkText: string;\n\n  @Prop()\n  selectedItems: SelectedItems = {};\n\n  @State()\n  selectedCategoryId?: string;\n\n  @State()\n  isMobile = window.innerWidth <= 768;\n\n  @Element()\n  host: HTMLMdxFilterCategoryElement;\n\n  @Event()\n  filterCategoryChanged: EventEmitter<typeof this.selectedItems>;\n\n  @Event()\n  filterSubmit: EventEmitter<typeof this.selectedItems>;\n\n  @Listen('click', { target: 'window' })\n  handleOutsideClick(event: MouseEvent) {\n    const path = event.composedPath();\n\n    if (!path.includes(this.host)) {\n      this.open = false;\n\n      if (this.selectedCategoryId !== undefined) {\n        this.selectedCategoryId = undefined;\n        this.view = 'category';\n      }\n    }\n  }\n\n  @Listen('toggleCheckbox')\n  toggleCheckboxHandler({ detail }: CustomEvent<{ checked: boolean; value: string; label: string }>) {\n    if (this.selectedCategoryId === undefined) {\n      return;\n    }\n    if (!detail.checked) {\n      this.selectedItems = {\n        ...this.selectedItems,\n        [this.selectedCategoryId]: this.selectedItems[this.selectedCategoryId]?.filter(\n          (item) => item.value !== detail.value,\n        ),\n      };\n    } else if (detail.checked && !this.selectedItems[this.selectedCategoryId]?.find((item) => item.value === detail.value)) {\n      this.selectedItems = {\n        ...this.selectedItems,\n        [this.selectedCategoryId]: [\n          ...(this.selectedItems[this.selectedCategoryId] ?? []),\n          { label: detail.label, value: detail.value ?? '' },\n        ],\n      };\n    }\n    this.filterCategoryChanged.emit(this.selectedItems);\n  }\n\n  @Listen('filterFlyoutClose')\n  filterFlyoutCloseHandler() {\n    this.open = false;\n  }\n\n  @Listen('categoryClick')\n  categoryClickHandler({ detail }: CustomEvent<{ categoryId: string }>) {\n    this.view = 'filters';\n    this.selectedCategoryId = detail.categoryId;\n\n    const categoryFilters = this.selectedCategoryItem?.childNodes;\n    if (categoryFilters) {\n      this.hostFiltersPlaceholder?.replaceChildren();\n      categoryFilters.forEach((filter) => {\n        this.hostFiltersPlaceholder?.append(filter.cloneNode(true));\n      });\n    }\n  }\n\n  @Listen('resize', { capture: true, target: 'window' })\n  onWindowResize() {\n    this.isMobile = window.innerWidth <= 768;\n  }\n\n  private get hostFiltersPlaceholder() {\n    return this.host.shadowRoot?.querySelector('#filter_placeholder');\n  }\n\n  private clearFilterHandler(categoryId?: string) {\n    if (categoryId !== undefined) {\n      this.selectedItems = { ...this.selectedItems, [categoryId]: [] };\n    } else {\n      this.selectedItems = {};\n    }\n    this.hostFiltersPlaceholder?.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = false;\n    });\n    this.filterCategoryChanged.emit(this.selectedItems);\n  }\n\n  private selectAll() {\n    this.hostFiltersPlaceholder?.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n      checkbox.checked = true;\n      if (this.selectedCategoryId === undefined) {\n        return;\n      }\n      if (!this.selectedItems[this.selectedCategoryId]?.find((item) => item.value === checkbox.value)) {\n        this.selectedItems = {\n          ...this.selectedItems,\n          [this.selectedCategoryId]: [\n            ...(this.selectedItems[this.selectedCategoryId] ?? []),\n            { label: checkbox.label, value: checkbox.value ?? '' },\n          ],\n        };\n      }\n    });\n    this.filterCategoryChanged.emit(this.selectedItems);\n  }\n\n  componentDidRender() {\n    if (this.selectedCategoryId !== undefined) {\n      this.hostFiltersPlaceholder?.querySelectorAll('mdx-checkbox').forEach((checkbox) => {\n        checkbox.checked =\n          this.selectedCategoryId != undefined &&\n          !!this.selectedItems[this.selectedCategoryId]?.find((item) => item.value === checkbox.value);\n      });\n    } else {\n      this.host?.querySelectorAll('mdx-filter-category-item').forEach((category) => {\n        const categoryId = category.getAttribute('category-id');\n        if (typeof categoryId !== 'string' || categoryId === '') {\n          return;\n        }\n        const numberOfSelectedFilters = this.getSelectedFiltersCount(categoryId);\n        if (numberOfSelectedFilters === 0) {\n          category.removeAttribute('badge');\n\n          return;\n        }\n        category.setAttribute('badge', numberOfSelectedFilters.toString());\n      });\n    }\n  }\n\n  private get selectedCategoryItem() {\n    return this.selectedCategoryId !== undefined\n      ? Array.from(this.host?.querySelectorAll('mdx-filter-category-item')).find(\n          (item) => item.getAttribute('category-id') === this.selectedCategoryId,\n        )\n      : undefined;\n  }\n\n  private getSelectedFiltersCount(categoryId?: string) {\n    return categoryId !== undefined\n      ? this.selectedItems[categoryId]?.length ?? 0\n      : Object.values(this.selectedItems).reduce((acc, curr) => acc + curr.length, 0);\n  }\n\n  connectedCallback() {\n    this.selectedItems = parseAttribute(this.host, 'selected-items', this.selectedItems);\n  }\n\n  render() {\n    const selectedFilterCount = this.getSelectedFiltersCount(this.selectedCategoryId);\n\n    return (\n      <Host>\n        {this.isMobile ? (\n          <mdx-icon-button\n            class=\"filter-category__toggle-button\"\n            onClick={() => (this.open = !this.open)}\n            aria-expanded={this.open ? 'true' : 'false'}\n            ariaLabel={this.buttonLabel}\n          >\n            <mdx-icon-sliders size={ICON_SIZES.SM} />\n          </mdx-icon-button>\n        ) : (\n          <mdx-button\n            class=\"filter-category__toggle-button\"\n            onClick={() => (this.open = !this.open)}\n            aria-expanded={this.open ? 'true' : 'false'}\n          >\n            <mdx-icon-sliders size={ICON_SIZES.SM} /> {this.buttonLabel}\n          </mdx-button>\n        )}\n        <mdx-filter-flyout open={this.open} role=\"dialog\" aria-label={this.headerTitle}>\n          <mdx-filter-flyout-header closeButtonAriaLabel={this.closeButtonAriaLabel}>\n            {this.selectedCategoryId === undefined ? (\n              <h2 slot=\"header\">{this.headerTitle}</h2>\n            ) : (\n              <h2 slot=\"header\">{this.selectedCategoryItem?.getAttribute('name')}</h2>\n            )}\n            {selectedFilterCount > 0 ? (\n              <mdx-badge slot=\"header\" size={BADGE_SIZES.MD} variant={BADGE_VARIANTS.SECONDARY}>\n                {selectedFilterCount}\n              </mdx-badge>\n            ) : null}\n          </mdx-filter-flyout-header>\n\n          <mdx-filter-flyout-list class=\"categories\">\n            <mdx-link\n              slot=\"controls\"\n              variant={LINK_VARIANTS.STANDALONE}\n              as={LINK_AS.BUTTON}\n              type={BUTTON_TYPE.BUTTON}\n              onClick={() => this.clearFilterHandler()}\n            >\n              {this.resetAllLinkText}\n            </mdx-link>\n            <slot name=\"categories\" slot=\"items\" />\n          </mdx-filter-flyout-list>\n          <mdx-filter-flyout-list class=\"filters\">\n            <mdx-link\n              slot=\"controls\"\n              variant={LINK_VARIANTS.STANDALONE}\n              as={LINK_AS.BUTTON}\n              type={BUTTON_TYPE.BUTTON}\n              onClick={() => this.selectAll()}\n            >\n              {this.selectAllLinkText}\n            </mdx-link>\n\n            <svg\n              class=\"filter-category__dot-spacer\"\n              width=\"2\"\n              height=\"2\"\n              slot=\"controls\"\n              viewBox=\"0 0 2 2\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <circle cx=\"1\" cy=\"1\" r=\"1\" fill=\"currentColor\" />\n            </svg>\n\n            <mdx-link\n              slot=\"controls\"\n              variant={LINK_VARIANTS.STANDALONE}\n              as={LINK_AS.BUTTON}\n              type={BUTTON_TYPE.BUTTON}\n              onClick={() => this.clearFilterHandler(this.selectedCategoryId)}\n            >\n              {this.resetLinkText}\n            </mdx-link>\n            <div id=\"filter_placeholder\" slot=\"items\"></div>\n          </mdx-filter-flyout-list>\n          <mdx-filter-flyout-footer>\n            <mdx-button\n              full-width\n              slot=\"button\"\n              type={BUTTON_TYPE.SUBMIT}\n              onClick={() => {\n                this.filterSubmit.emit(this.selectedItems);\n                this.open = false;\n                this.selectedCategoryId = undefined;\n                this.view = 'category';\n              }}\n            >\n              {this.submitButtonText}\n            </mdx-button>\n            {this.selectedCategoryId != undefined && (\n              <mdx-button\n                full-width\n                slot=\"button\"\n                variant={BUTTON_VARIANTS.TERTIARY}\n                onClick={() => {\n                  this.selectedCategoryId = undefined;\n                  this.view = 'category';\n                }}\n              >\n                {this.backButtonText}\n              </mdx-button>\n            )}\n          </mdx-filter-flyout-footer>\n        </mdx-filter-flyout>\n      </Host>\n    );\n  }\n}\n",":host .filter-category-item {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  border-top: solid;\n  border-width: var(--mdx-comp-filter-flyout-elements-category-row-border-width-default);\n  border-color: var(--mdx-comp-filter-flyout-elements-category-row-border-color-default);\n  height: var(--mdx-comp-filter-flyout-elements-category-row-sizing-height);\n  padding: 0;\n  cursor: pointer;\n\n  &__button {\n    all: unset;\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    align-content: center;\n    font: var(--mdx-comp-filter-flyout-elements-category-row-font-title);\n    padding-top: var(--mdx-comp-filter-flyout-elements-category-row-spacing-vertical-padding);\n    padding-bottom: var(--mdx-comp-filter-flyout-elements-category-row-spacing-vertical-padding);\n    gap: var(--mdx-comp-filter-flyout-elements-category-row-spacing-gap-text-badge);\n\n    &:hover {\n      color: var(--mdx-comp-filter-flyout-elements-category-row-color-hover);\n    }\n\n    &:focus-visible {\n      border-radius: var(--mdx-comp-keyboard-focus-border-radius-default);\n      outline-color: var(--mdx-comp-keyboard-focus-color-default);\n      outline-style: solid;\n      outline-width: var(--mdx-comp-keyboard-focus-border-width-default);\n      outline-offset: 2px;\n    }\n\n    &-icon {\n      position: absolute;\n      right: 0;\n      color: var(--mdx-comp-filter-flyout-elements-category-row-icon-color-default);\n    }\n  }\n}\n\n:host .filter-category-item__link:hover .filter-category-item__link-icon {\n  color: var(--mdx-comp-filter-flyout-elements-category-row-color-hover);\n}\n","import { Component, Event, EventEmitter, Prop, h } from '@stencil/core';\nimport { BADGE_SIZES, BADGE_VARIANTS } from '../../../badge/exports';\nimport { ICON_SIZES } from '../../../icons/exports';\n\n@Component({\n  tag: 'mdx-filter-category-item',\n  styleUrl: 'filter-category-item.scss',\n  shadow: true,\n})\nexport class FilterCategory {\n  @Prop()\n  categoryId: string;\n\n  @Prop({ reflect: true })\n  name: string;\n\n  @Prop()\n  badge?: string;\n\n  @Event()\n  categoryClick: EventEmitter<{ categoryId: string }>;\n\n  render() {\n    return (\n      <div class=\"filter-category-item\">\n        <button\n          class=\"filter-category-item__button\"\n          onClick={() => this.categoryClick.emit({ categoryId: this.categoryId })}\n        >\n          <span class=\"filter-category-item__name\">{this.name}</span>\n          {this.badge && (\n            <mdx-badge size={BADGE_SIZES.MD} variant={BADGE_VARIANTS.SECONDARY}>\n              {this.badge}\n            </mdx-badge>\n          )}\n          <mdx-icon-chevron-right size={ICON_SIZES.SM} class=\"filter-category-item__button-icon\" />\n        </button>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"}