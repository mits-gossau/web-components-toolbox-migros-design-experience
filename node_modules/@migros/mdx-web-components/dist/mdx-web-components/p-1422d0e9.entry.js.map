{"version":3,"names":["tabBarCss","SCROLL_AMOUNT","isHTMLMdxTabElementElement","element","tab","TabBar","this","toggleChevronVisibility","ul","_a","host","shadowRoot","querySelector","chevronLeft","_b","chevronRight","_c","currentScroll","Math","ceil","_d","getBoundingClientRect","width","scrollLeft","style","visibility","scrollWidth","onClickChevronRight","scroll","left","behavior","setTimeout","onClickChevronLeft","onSelectedTabChanged","selectedTabChanged","emit","selectedTab","select","tabs","Array","from","querySelectorAll","getTab","find","t","componentWillLoad","length","componentWillRender","forEach","active","componentDidRender","render","h","Host","onTabClick","detail","class","onClick","size","ICON_SIZES","XS"],"sources":["src/components/tab-bar/tab-bar.scss?tag=mdx-tab-bar&encapsulation=shadow","src/components/tab-bar/tab-bar.tsx"],"sourcesContent":[":host .tab-bar {\n  box-sizing: border-box;\n  position: relative;\n\n  &__tabs {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    overflow-x: hidden;\n    border-bottom-style: solid;\n    background-color: var(--mdx-comp-tabs-background-color-default);\n    border-bottom-width: var(--mdx-comp-tabs-border-width-bottom-default);\n    border-top-width: var(--mdx-comp-tabs-border-width-top-default);\n    border-left-width: var(--mdx-comp-tabs-border-width-left-default);\n    border-right-width: var(--mdx-comp-tabs-border-width-right-default);\n    border-color: var(--mdx-comp-tabs-border-color-default);\n  }\n\n  &__chevron {\n    z-index: 20;\n    position: absolute;\n    height: 100%;\n    cursor: pointer;\n    visibility: hidden;\n    color: var(--mdx-comp-tabs-scroll-element-icon-color-default);\n    &:hover {\n      color: var(--mdx-comp-tabs-scroll-element-icon-color-hover);\n    }\n\n    &__left {\n      left: 0;\n      padding-left: var(--mdx-comp-tabs-padding-scroll-element-left-left-desktop);\n      padding-right: var(--mdx-comp-tabs-padding-scroll-element-left-right-desktop);\n      background-image: linear-gradient(\n        to left,\n        rgba(255, 255, 255, 0) 0%,\n        var(--mdx-comp-tabs-background-color-default) var(--mdx-comp-tabs-sizing-scroll-element-gradient-desktop),\n        var(--mdx-comp-tabs-background-color-default) 100%\n      );\n\n      @media only screen and (max-width: 768px) {\n        padding-left: var(--mdx-comp-tabs-padding-scroll-element-left-left-mobile);\n        padding-right: var(--mdx-comp-tabs-padding-scroll-element-left-right-mobile);\n        background-image: linear-gradient(\n          to left,\n          rgba(255, 255, 255, 0) 0%,\n          var(--mdx-comp-tabs-background-color-default) var(--mdx-comp-tabs-sizing-scroll-element-gradient-mobile),\n          var(--mdx-comp-tabs-background-color-default) 100%\n        );\n      }\n    }\n\n    &__right {\n      right: 0;\n      top: 0;\n      padding-left: var(--mdx-comp-tabs-padding-scroll-element-right-left-desktop);\n      padding-right: var(--mdx-comp-tabs-padding-scroll-element-right-right-desktop);\n      background-image: linear-gradient(\n        to right,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 1) var(--mdx-comp-tabs-sizing-scroll-element-gradient-desktop),\n        rgba(255, 255, 255, 1) 100%\n      );\n\n      @media only screen and (max-width: 768px) {\n        padding-left: var(--mdx-comp-tabs-padding-scroll-element-left-left-mobile);\n        padding-right: var(--mdx-comp-tabs-padding-scroll-element-left-right-mobile);\n        background-image: linear-gradient(\n          to right,\n          rgba(255, 255, 255, 0) 0%,\n          rgba(255, 255, 255, 1) var(--mdx-comp-tabs-sizing-scroll-element-gradient-mobile),\n          rgba(255, 255, 255, 1) 100%\n        );\n      }\n    }\n  }\n}\n\n:host([fill-width]) {\n  ::slotted(*) {\n    flex-grow: 1;\n    overflow-x: hidden;\n    width: 100%;\n  }\n  .tab-bar__tabs {\n    justify-content: space-evenly;\n  }\n}\n","import { Component, Element, Event, EventEmitter, Host, Prop, Watch, h } from '@stencil/core';\nimport { ICON_SIZES } from '../icons/exports';\n\nconst SCROLL_AMOUNT = 200;\n\nconst isHTMLMdxTabElementElement = (element: string | HTMLMdxTabElementElement): element is HTMLMdxTabElementElement => {\n  if (typeof element === 'object' && typeof element.tab === 'string') {\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @slot - Slot for tab elements\n */\n@Component({\n  tag: 'mdx-tab-bar',\n  styleUrl: 'tab-bar.scss',\n  shadow: true,\n})\nexport class TabBar {\n  @Prop()\n  fillWidth: boolean;\n\n  @Element()\n  host: HTMLMdxTabBarElement;\n\n  @Prop({ reflect: true })\n  selectedTab: HTMLMdxTabElementElement['tab'];\n\n  @Watch('selectedTab')\n  onSelectedTabChanged() {\n    this.selectedTabChanged.emit(this.selectedTab);\n  }\n\n  @Event()\n  selectedTabChanged: EventEmitter<HTMLMdxTabElementElement['tab']>;\n\n  private toggleChevronVisibility = () => {\n    const ul = this.host.shadowRoot?.querySelector('.tab-bar__tabs');\n    const chevronLeft = this.host.shadowRoot?.querySelector<HTMLElement>('.tab-bar__chevron__left');\n    const chevronRight = this.host.shadowRoot?.querySelector<HTMLElement>('.tab-bar__chevron__right');\n    const currentScroll = Math.ceil((ul?.getBoundingClientRect()?.width || 0) + (ul?.scrollLeft || 0));\n\n    if (!ul || !chevronLeft || !chevronRight) {\n      return;\n    }\n\n    if (ul?.scrollLeft > 0) {\n      chevronLeft.style.visibility = 'visible';\n    } else {\n      chevronLeft.style.visibility = 'hidden';\n    }\n\n    if (currentScroll < ul.scrollWidth) {\n      chevronRight.style.visibility = 'visible';\n    } else {\n      chevronRight.style.visibility = 'hidden';\n    }\n  };\n\n  private onClickChevronRight = () => {\n    const ul = this.host.shadowRoot?.querySelector('.tab-bar__tabs');\n    ul?.scroll({\n      left: ul.scrollLeft + SCROLL_AMOUNT,\n      behavior: 'smooth',\n    });\n\n    setTimeout(() => this.toggleChevronVisibility(), 300);\n  };\n\n  private onClickChevronLeft = () => {\n    const ul = this.host.shadowRoot?.querySelector('.tab-bar__tabs');\n    ul?.scroll({\n      left: ul.scrollLeft - SCROLL_AMOUNT,\n      behavior: 'smooth',\n    });\n\n    setTimeout(() => this.toggleChevronVisibility(), 300);\n  };\n\n  private select(tab: string) {\n    if (this.selectedTab === tab) {\n      return false;\n    }\n    this.selectedTab = tab;\n    return true;\n  }\n\n  private get tabs() {\n    return Array.from(this.host.querySelectorAll('mdx-tab-element'));\n  }\n\n  private getTab(tab: string | HTMLMdxTabElementElement): HTMLMdxTabElementElement | undefined {\n    return isHTMLMdxTabElementElement(tab) ? tab : this.tabs.find((t) => t.tab === tab);\n  }\n\n  componentWillLoad() {\n    if ((!this.selectedTab || !this.getTab(this.selectedTab)) && this.tabs.length > 0) {\n      this.select(this.tabs[0].tab);\n    }\n  }\n\n  componentWillRender() {\n    const selectedTab = this.getTab(this.selectedTab);\n    this.tabs.forEach((tab) => {\n      tab.active = false;\n    });\n    if (selectedTab) {\n      selectedTab.active = true;\n    }\n  }\n\n  componentDidRender() {\n    this.toggleChevronVisibility();\n  }\n\n  render() {\n    return (\n      <Host\n        onTabClick={({ detail: { tab } }) => {\n          this.select(tab);\n        }}\n      >\n        <div class=\"tab-bar\">\n          <mdx-icon-chevron-left\n            onClick={this.onClickChevronLeft}\n            class=\"tab-bar__chevron tab-bar__chevron__left\"\n            size={ICON_SIZES.XS}\n          />\n          <div class=\"tab-bar__tabs\">\n            <slot></slot>\n          </div>\n          <mdx-icon-chevron-right\n            onClick={this.onClickChevronRight}\n            class=\"tab-bar__chevron tab-bar__chevron__right\"\n            size={ICON_SIZES.XS}\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}